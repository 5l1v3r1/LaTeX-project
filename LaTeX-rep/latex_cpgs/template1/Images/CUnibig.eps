%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: CUnibig.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Eric Appel
%%CreationDate: 4/30/09
%%BoundingBox: 0 0 328 68
%%HiResBoundingBox: 0 0 328 68
%%CropBox: 0 0 328 68
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 28 8%%BeginData: 7122 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C455275764B76767675767DA87DA87D767676757675764B52FD05FFA8%7D7D7DFFFFFF7D7DA8847DA8FD04FF7D7D7DA87D7D7DA87D7D7DA8FFFF7D%7D7EA87D7E7D7D7DFFA87D7D7E7D7DA8FD04FF7D597DA8FF7D7D7DA87D59%FD067D527E7D7E7DFFFFA87DA8FD07FF7D527D7DFFFFFFA8FD067D4B9392%756E93747468C9A8FFA8C968936E756E75746F4BFD05FFA852F87DFFFFFF%5227FF7D27F87DFFFFA87DF87DA852F852A87DF827A8FFFF7DF8A87D2727%A87D2752FF522727A827277DFFFF5227FF5252FFA8F8277D52527D522727%7D52527D27F87DFFFF59277DFD05FFA82752A87D52F87EFFFF272752A852%27766E757A756E756E937C7DFF7D76997475507574756E76A8FD05FF5227%A8FFFFFF7D52FFFF5227F884FFFFFF52FFFF7D277DFFFF52F8FFFFFF7D7D%FFFF2752FFFFA8A8FFA8F87DFFA8F852FFAFF8A8FFFFA8FFFF2727FFA8FF%FFA8F87DFFFFA8FFA82727FFFF527DFD06FF2727FD04FF52F8A8FF7DF8A8%FFFF7D4B744A7B4A694A756EA052FF527C6E754A74446F6E6F4BFD06FF59%F8A8FFFFFF7D52FFFF595927F8A8FFFF27FFFF7DF87DFFFF532752FFFF52%A8FFA82727FFA87EFFFF7D2752FF7D2752FFA82727FD05FF2727FD04FF7D%2752FD05FF5227527D52FD06FF7DF87DFD04FF7D2752FF52277DFF7DA976%6E759F9F749F4A93C3FF7DFFC3936E999E9F99756E76A8FD05FF5227A8FF%FFFF7D52FFFF52A9A827F8A8FF52FFFF7D277DFFFFFF2727FFA852FFFFFF%2727525252FFFFA8F852845227FFFFFF5227F87DFFFFFF2827FD04FFA8F8%7DFD06FF272727FD07FF52277EFD05FFF852FF7DF8525227A876936E9F74%75A47568C9A852A8C98C99749F4A9F9E6F4BFD06FF7DF8A8FFFFFF7D52FF%FF527DFF7D2727A852FFFF7DF87DFFFFFF53F8A8527DFFFFFF2727A85252%FFFF7D275227F8A8FD04FF5227F87DFFFF2727FD04FF7D2752FD06FFA8F8%7DFD07FF52F8A8FD04FFA82727FF522759A827A876936F746F75757499A1%A8FFA8A1B56E75746F74757476A8FD05FF5227A8FFFFFF7D59FFFF52A8FF%FF7D272752FFFF7D277DFFFFFFA8272852FD04FF2752FFFFA8FFFFA8F87D%A82727FD05FFA827F8FFFF2727FD04FFA8F87DFD06FFA82752FD07FF7D27%7DFD04FFA8F87DFF7DF8A8FFFFA8756F746F4A9F4A746EA152FF527C8C74%746F747544754BFD06FF7DF87DFFFFFF5252FFFF527EFFFFFF522727FFFF%7DF87DFD04FF272752FD04FF2727FFFFFF7DFFA82752FF522752FF7D7DFF%FF5227FFFF2727FD04FF7D2752FD06FFA8F87DFD08FFF827A8FFFFFF5227%A8FF52277DFFFFFF76696F8D936F936E93C3FFFFFFA1936E93936F689368%76A8FD06FF52F87D7D7D27FFFFA8F87DFD04FF5227FFFF522752FD04FF7D%F8FD04FFA8F8277DA85252A852F852FFFF27277DA827A87D277DFF8427F8%A8FFFFFF7DF852A8FD05FF7D2727FD08FFA827277DA85227A8FFFF52F87D%A9FFFF76C3A0C39AC3A0A176FD057D9AA0A0C39AC39AC352FD08FF7D527D%52FFFFFF7D7D52A8FD04FF7DFFA87D7D7DA8FFFFFFA87DFD04FFFD077DA8%537D53A8FFA8527DA87E527D7DFFFFFD047DFFFFA8527D7DA8FD04FFA8FD%047DFD09FF7D53527DA8FFFFA87D7D52A8FFFFA8A8A8FF7DA8FF7D7D4B99%75754BA87DFFA8A8FFA8847DA8FD68FF7D7D52FF527DA87D7D93929F9293%7D7DA87D52AF527D59FD69FF7EFFFF52FFA87DFFA86F9975936FFFFF7D7E%FF52FFFF7DA8FD68FF7DCAA77DCAA776CAA17651A17576A7CA7CA7C97DA7%CA52FD0AFFA87DA8A8FD08FFA8FD06FFA8FD0BFFA8FD05FFA8FFA8FD05FF%A8FFFFFFA8FD09FFA8FFA8FFFFFFA8FFA8FD0BFFA8A8A8FFFFFFA8FFFFFF%A8FFA8FFFFFF7C8DB5FD04938DB5767DFFA776B58D936FB593B58D76A8FD%07FF7D522752285252A8FD05FF52F8AFFD04FFA85227277DFD06FF522752%7DFF525227525252277DFFFF7D5227525252277DA8FFFFA852272752A8A8%272E27525252287DFD06FFA852275252522752A8FF5252275252522752FF%516F4A7A4A75747468C9A87DA8C9686F747B6E75746F6FFD07FF522727FF%FFFFA82727FD04FFA8F82753FD05FFA827F852FD05FFA8F8277DFFFFFF27%2752FFA827F87DFFFF7D2721FFFF52F852FD04FFF8277DFFFFA8F827A8FF%A87DF827A8FFFFFF7D2727A8FFFFFF84F87DFFFF272753FFA8A827FF7674%7550756F756EB5C9FF52FFC399747574757499937CFD06FF7D2727FD05FF%A852FD04FF5252F852FD06FF5227F8A8FD04FF5227F8A8FFFFFF7DF87DFF%FF592727FFFFA8F852FFFFA827F8A8FFFFFF27F8FFFFFFA82727FD04FFA8%F827FFFFA82727FD06FF7D59FFFF52F87DFFFFFFA8FF766F4A7574754A75%6EA17DFF7DC36E756E9F6E6F749976FD06FF27F87DFD06FF84FFFFFFA852%7D27F8A8FD05FF52272728FFFFFF7D5227277DFFFFFF522752FFFF52F859%FFFF7D2727FFFFA8F827A8FFFFFFF827A8FFFFA8F827A8FD04FF28F87DFF%52F87DFD06FFA8A8FFFF27277DFFFFA8FFFFA86F996E9F74C74A93767DFF%7D76936E9F9E9F9F756FA8FD05FFA8F827A8FD0AFF8452FF27277DFD05FF%27A8F827A8FFFF527D52F87DFFFFFF52F853A87DF87DFFFFFFA8F827FFFF%7D2752FFFFFFA827F8A8FFFFA827F8FD05FF522727FF27277DFD0AFF52F8%7DA8A827FFFFA8766875746F7A7568A17DFF7DA1687574754A756E75A8FD%05FF7D27F8A8FD0AFF287DFF7DF827FD04FFA827A852F852FFA827FF5227%52FFFFFF5227277D272752FFFFFF7D27F852272752FD05FFF827A8FFFFA8%F827A8FD04FF7DF827A827F8A8FD0AFF272727522727A8FFFF7E756E6F75%757493C3FF52FFC36F746F74756E4B7DFD06FFA8F827A8FD0AFF27275227%27F8A8FFFFFFA827FF7D2727FF527DFF7DF87DFFFFFF53F87DFFFF7D2727%FFFFA8F8277D27F87DFD05FF27F8A8FFFFA827F8FD05FF59272EFF27277D%FFFFFFA87D537D52FFFF52F884FFFF52FD04FF7D6F68744A756EC9A87DA8%C98C6F7475686F7DFD07FFA827F87DFD06FFA8FFFF7D27A87DA8272752FF%FFFF7D52FFFF27275252A8FF522752FFFFFF522752FFFFFF27277DFF7D27%27FF7D27F8A8FD04FFF827A8FFFFA8F827A8FD04FF52F87DFF52F852FD04%FF7D27F87DFFFF27277DFFFFA8A8FD04FF7E7669936E93A1A8FFA8A1B56E%756F767EFD09FF522727FD06FF53A8FF527DFFFFFF7DF828FFFFFF7D52FF%FF7DF82752FFFF7DF852FFFFFF59F87DFFFFFF27F8A8FFA8F852FFFF2727%27FD04FF27F8FFFFFFA82727FD04FFA8F827A8FF7D27F8FD05FF2727A8FF%FF52F87DFD04FF7DFD04FFA87D6F6F8CA152FF527C8C6F4B7DA8FFCFFD09%FF272727FD04FF5227FFA827A8FFA8FFA827F8A8FFFF5252FFFFA827F8A8%FFFF7D2727FFFFFF522752FFFF7DF827A8FF7D27F8FFFFA8F82752FFFFFF%F827A8FFFFA8F827A8FFFFA8F8277DFFFFFF522727FD04FF27F884FFFF27%2752FFFFFF7D52FD07FF7D76A1FFFFFF7D767DFD0FFF5227277D5252F87D%A852277DA8FFFF52F82727A87D27277DA8FF5252FFFF7D52F82752FF7D28%202752522052A8FFA852F82752A8FF7EF82752A85227F852A8A952272752%52522752A8FD05FF7D27277D5259F8277EFF5227F827525252277DFD08FF%A87D7DA87D7DA8FD11FFA8A8527D7DFFFFA8A8FF7DFFFFFF7DFFFD05A8FF%7DFFFFA9A8FFFFA8A8FFFD05A8FFA8A87DFD04FFA87DFFA8A8A8FFFFFD06%A8FF7DFFA8A8A8FFA8A87DFD0AFFA8527D7DA8A8FFA8A8A8FFFD05A8FD0B%FFA87DFDF3FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 109 CV)
%%+ (PANTONE Red 032 CV)
%%CMYKCustomColor: 0 0.0863 0.9412 0 (PANTONE 109 CV)
%%+ 0 0.9099 0.8706 0 (PANTONE Red 032 CV)
%%RGBCustomColor: 
%%EndComments
                                                                                                                            
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2009-04-30T10:53:31+01:00</xap:CreateDate>
         <xap:ModifyDate>2009-04-30T10:53:31+01:00</xap:ModifyDate>
         <xap:MetadataDate>2009-04-30T10:53:31+01:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>56</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAOAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8Aja2kMN9G8z1glu54UEbI&#xA;s6/V0gf7ZEp/eNcAcuG301HP6zWZIznGB3iAfLcy93Ku96fFHGMH93EyEYm/lf3hct4/qT26teXE&#xA;8Urw+it1FBcAhVFEikt5PXdJuaERjkQA3prWmY51mehIy4QRd0SPmJenajvsOXEWfgxMYyMIRB68&#xA;O33c/L7Hqn5QDQdRs9OstXsheSXcV5cNqDwzGKsD2yxr9YB9NeXrP8J36biqht/pJkx373Wdt4IY&#xA;89QArhjy5cubGPzBnt7rVLddHhbSIozqaSLJDLaJKNPe4ZTSdg3xJCoL9AeWwoVzE7R1MsRBF/wj&#xA;bzlTldk48XgynOAnUwN+6ixFr6FfqnO6uqXCP6pkfhEzqhJAb0T6YSUojf3g4liSvHkdYNXqCZC+&#xA;Xz5/1t9rPT43TkxxRlOcfDjcfLlv076/ayn8nVRPzS0YJC9urLMQjzRXIYG0uAWjngjhikjLLsV5&#xA;bg79hsezc053xS4vgR3cwSSD8nB7RwwGESHDfF0FdOr6jzbOjfPfnV/MFn/zkH5f8q23mPV4dC1q&#xA;Bby6tEvZhxYtcckjblVUPoDYdK7Yq9j866a03k+/jhvbyzls7WSaC7tZ3inDwwtwLSKavvuQ3Xvi&#xA;ry+4stYl/wCcfYvNEfmPWIddi0v9KG8W9mJeUorMjKTx4EJQD9mpI74VQH5KfnDr1nrjfl9+Yski&#xA;a2HH6M1C5PJpTKA6wyP+1yDconr8Q28MCsu866Dft+Z3lW2t/MOr2ena2b9tRsbe8lSNjawCWP06&#xA;H92CxowXt0p1xVhX5qXXmDTPzr8qeXtP8w6ta6TrzQNfW8d7KAPUuWjYR1J4AqvQYq3/AM5FW3nD&#xA;ybZ6Tr/l7zDq8elvKLTU7b67M1G4gxOrMWI5qjBj408cVen+YdX0hPyhuNYh1G9TTv0Wl3aahFcM&#xA;t61UWSGk55N6kj8VNetaHFWCeb9B82+W/wAiZNYu/MusDzXZQRXdxc/XJRxluJIlkgKVAKRr8Ir3&#xA;qe+KqvlTy/e6z+UuneYb3znren6tf2qlbxtRdYBdSyejApR6ijyMq0rvXbCrX57v5o8vflXpmswa&#xA;1f2XmGyWys7yS1upFjlcoRMzqDR2L78+uBWP+dpvN/lr8ovLXn/SPNuqjVZ4NPmvra8uPrNtM15A&#xA;rvSKUMAQ5rTpxrirOvPH5l6/pv5Dw+craJbXW76ys3WoqsMt5wDSKrA1pzJUH2riqzyv5Tm1nyt5&#xA;X8w6B5u1S91BJ7K81KebU7qW2u4xJG17bS2/N4Y6JzVUVBQ/C3jirFf+cmdU8xeXNQ8v3uh67qWn&#xA;trE8kN5bwXUiwcYlhVTHHWiH4jWnU74qz6T8qLy48wXV9L5n1m0sxbW9rZJZ6hKsriMu8r3RkV+b&#xA;83ohB2XFXl/kqLzLrX52eZ/Jd55u14aPpFvNLaNHfMsxaOaCNeblSDtM37OKs9uvyg8zxWnmMab5&#xA;v1ZL689GXQ76W9meZHiio0VzQIjRs9acRUA+I3VYp/zj/wDmZcQXHmHy7581K7TzHppe4lk1O4d0&#xA;Fvag+sqK+yNFuzU+0u/7OKs0/KfRNfvLm7836hq+rHStRlkby/ol7cvIiWTbRzTI9W5yD40FfhUj&#xA;qeir0XUdQtNO0+61C8f0rSzhkuLiQ/sxxKXdvoUYq8c/Li/8zfm3JqPmfU9UvtF8rw3LWmjaNpdw&#xA;9m78ArPJcTw8ZX+0BQMBWvbqqgfzPufPH5ST2PmjQ9avda8sz3C22p6Nq873hRnBZTFPJylRWCkV&#xA;r8LUryBpiq3/AJyF8236fl15f88eVNZ1DT21Se2hRbe4eKNree3nuPjiU8fUDKAT17YqyO78m6mf&#xA;Kuk3+n+btYh129Fo9pFdai5guJmUTSQFWB+3Gr0phV4vp072uvTX5gQ2VhcR3N5dsG9SFRJwIg4O&#xA;jNJcA+kNiAaHanIcp2rESJgCeOXEAOh9/lH6v18nsBEHDiEb4zAfHfb8e5Vs9Qi1G2htNWs4op/M&#xA;N0iWFzDDEs8EcgSWG4WQoJZlDBlnaSWp/ZIIYDX5MRxyMsciRijuLNE7gxrkOnDUfftTTKAidjxD&#xA;4/J6D+V9ydX8iQeS7W/hsdS1VLi9juaB3RbWW0BCwOCP3gkahLbcTseo6/RfR8XXdum8wP8AtcPu&#xA;SP8AOPzJZ+YNZ0+5svRu2tpZ7D042EsbS2948QVyQABKtCRvQN1PXMTtKr3NDhdl2Jw/lMvFy4h+&#xA;xIY9Uunms9OksoFh0OOcaw0sX1i3gdjM0cKG5+sBI4jGsczR/G5BAYnhXmDgFSnxG8hHBvRkNrPp&#xA;qydzEHYdw3Sce3ETueXnum/5TNYz/mnoOpWMJtbTVY576OyYLWAyQXaPGrKaMnKKqfCvwkbZ0HY/&#xA;EDKEjcoem+/lv799+e7r+0JfuQKG0ufwL6dzeujfPv5lTJbf85TeRJ5vghexihRz0Mkk12iqD48p&#xA;F+/FXtHne7t7PyZrt1cOEhh0+6d2O2whbxxV55e2stl/zi8YLiiSr5aQsvgXtwwU17/FT54qrfmt&#xA;+T1n5/8AKFjcWfG28z6fbRnTbz7IccQfQlYCvEn7J/ZbfxqqwD8rPzG8w+YvzC8o+WfNFvJF5j8s&#xA;nVILueUUaVGteK+oP9+KYyGP7Wx61xVH/nL/AOtGfl1/0a/9RkmKvZfzD8pQebvJereX5QOV7Awt&#xA;3bok6fHC/wDsZFUn2xV8+/ktrepea9L0L8s72JxH5f1KXUNY5io+pWTiWC3eux5XsgUjsq4q9h/5&#xA;yD/8k55l/wCMMP8A1ExYqwb8u/yh03XPyx8qatbXt3DqsUlnfqk11PLZ/wCj3Qd1+qsXi3jVuNFH&#xA;xU7VwqmX/OTuo2N/+UFzLZTLPFFqcVu7puBLBK8UqfNHUqffAryrztputeXND/LbzFq8l15k8iSW&#xA;OnzXOjXchaCG4NspaIKvBeJjP7rlX7JDVHVV9K6teeRfMnky0t75o7jy55lWG0s1UMFczisKAoP3&#xA;bKU2rTiwp1xV88+cPJHmj8ivMOmeYfKurzXWgahdi3ksJNmY/aEEyAiOXkitxcAEHw2OKsp/5y6/&#xA;6Yv/AJjLj/mRir6HxV87/lb/AOtS+e/+YO6/6ibTFX0Rir5u/P8A8taG/wCdH5fzNaIW1y8t7fVR&#xA;+zPGl1DEA4HWschQnuKDtir6RVQoCqAFAoAOgGKsd/MXRrzWvIXmDSrIVvL3T7iK2X+aRozwX/ZH&#xA;bFXl/wDziTrdpP5CvtELcNR0u+ka4t22cRzgFHof8pXX6MVTH/nKi+tofyrksnNbrUb22htIRu7u&#xA;j+o1F6/ZT9WKsF/PDQrvQf8AnHHyZpF4Ct5a3tmLmM7FJHs7p3Q/6rNxxUPRvLv5Q6an+DvMOn3t&#xA;79Y08w3dzBd3lxcQtHLaMjCOOUyBGDSDjSm1RhVimmfl1+X93qWm/pSW6hur7Tn1CWdQAiv9YSBF&#xA;WUxMo5cj8Na9PHMWekjIk2d3caftzNijEREPSKB4d/mhZ/y+/LCLynrOqRG+Nxp8l/HFaen/AHqW&#xA;NwLdSsYi5Mh9aOpG1WPvkfyUO8sx29mAIEcdH+i7T/OmpeTtQu/L/l61tGsbG6nitJ7mJnnWBgpb&#xA;4g8IXkYVqvECg8RlE9QMBMQCerZPS5NZHx5yhAfT3DboOf8AYhri9sfO6Xl75mtkhTTRaLFFp8Di&#xA;r3t2PrPOL98XIaV2UihPVqnJ46z2TYI/ATOefs4cA4JxnvysGq3Hlun11+Vf5UW/mC2sGubxbZLS&#xA;8uJLmi8I2sJ0gKeqIeA4s0nw9dq+FbPyUe8sP9EGaweHHceXp5Knkjyh5X0nzrpN9o63CzLq+pad&#xA;N9YT0+SW9lPwbdELdftdPlluLTxgbFuFrO0p6gVIRG97CnuOXOvYp5+/LHyn55treLW4JBcWbF7K&#xA;/tn9K5hJoTwehFDQbMCO/XFUqP5N6ZdLDBrnmLXvMGnQsrnTNSvEe3kZDVfWEMULyUO9GYg98VTv&#xA;zx5E0/zjpI0jUL69tNNIIntrGRIVmWqlVk5I5IUpsBT3riqY+W9BGhaWmnLf3eoxxECKa/kWWVUC&#xA;qqpzVI6qONfiqd+uKpdd/l75buPPFj519J4ddsopIPViIVJo5EMY9ZSDyKKx4kEHxqKDFUi8yfkp&#xA;5e8w+aIPM2oarqo1W0dXsJIZ4kW3COZEWIekaBWPevvirPbSBre1hgaV7hokVDPKQZHKgDm5UKvJ&#xA;upoBiqQeXPy+8ueXvMOva9p0brf+Ypknvi5UqrLUkRUUMod2LtUmrfRirXnvyJp/nTSv0Tqd9e22&#xA;nNX6xb2UiRLN8SsolLJISFZKgAj3riqQaX+Smm6VpS6TpvmbzFaacgKx20N+qKgJLEJSKq1LE/Di&#xA;qzWfyI8p6t5b0zy3c6hqi6NpYb0bSO5RVkkeRpGmmrGecnKQ7n+uKpxF+V/l8+SZvJl/Pd6nokkS&#xA;wQpeSI8kEcSgRCF0RKenxBWtafLbFUo078ivKdj5Yn8spf6pLo8siTwW8lyK208cglWa3ZEQxvyF&#xA;fD2xVGRflFo0uradqeu6tqnmSXSG56dBqs0MkMUgpST04YYA7in2nriqzz5+TXl3zxqEN5rmo6kV&#xA;tTys7SCeOOCFiqhjGvpMatwBJJO+Ksvt9Llh0f8ARpv7qWT0niGoyNGboF60fkECc1rt8HbeuKsG&#xA;0f8AIzy9pHmefzPY6zrCa1dlvrl0biFjMsjB3WQGGhVmUbe22KvR8VeeebfyR8uea9dh1vV9U1V7&#xA;y0fnYiOeJEt/j9QCICLajDapJ98VZ5YWr2lnFbPcS3bRLxNzcFTK/u5RUWvyUYqr4qwXV/yb8q3n&#xA;mNvMumz3vl3XpK/Wb7R5lgM3Igt6sbpLE3IirfBudzU4qr2H5VaBHrlvrur3l95j1az/AN4LjVpU&#xA;lW3Na1hhhjghVqgHlwr74q78w/yr0Pz7HBBrl7fpY25WSOxtpY44fVUOBKQ0bsX4yFetKdsVTzyx&#xA;5dXy/piadHqF5qEEQVYGvnSR40RQqorIkdQAP2qn3xV4PN+a89zoS+TE09v3fBRcwXQt5CIZfVr6&#xA;jpwT7FW36ZrdR2h4RJI2D0OLsjTnCMk8hBMQar4d6Ob84tZudfg139CTG40u2ntGtI7tGRknMUrv&#xA;6CK0k1QsTB4gVoVNaHfH/leO3Lf3/aeQ9xo7FnHsnSmv3st/6P6io6H5d0/zheXvnO/W9sNCuUlm&#xA;mmtZoGYXjzpRE5J6nApJyoU2/n7ZlY8QzEykGGq1GTQnwcchKBAO8R135G1RdVufyj12+iOny3ja&#xA;i831R55o97KDlIkpEKtQ8UdnLEbD7K5CU/A2AG/66Dbhxfn4nJnycPDIR5d4+zkl9z+YV6vlu/8A&#xA;LV1pdylvrM91dSzNqKfWEMsxmmQsq/6MqtXksnEgVr3pRHtiMrIrb3/Z3/C2MOydKb/enb+jz+1l&#xA;vl38xNT80ef/AC5pl7pT6fLp0lxM7SM5dlexmQMeSJsa/aGZmj1ozcqI8nD7R7PxYYCeOZnZrlXR&#xA;7Nmc6djfnv8AMPyt5G0ganr916SSErbW0Y5zzuBUrFHUVp3JIA7kYqxTTPzD/NfXrKLUtG8hx2+m&#xA;zgPbvqeopBNLGwBV/SWJigI8euKo7yt+bMupebh5O17y7eeX/MbQvcJFI8VxbPElavHcIV5jbaiY&#xA;qz26uYLS2murhxHbwI0s0h6KiDkzH5AYq8s/KD8+bP8AMXzBq2lpp36NFnClxYq8gkkliDcJWegU&#xA;KVZk2FevXFXqk7SpBI8MfqyqpMcRbjyYDZeRrSp74q8a1L/nI46F53t/Knmby0+kzySwxzXYvI54&#xA;4456cZfgjHJRy33rir2jFXmv5v8A536T+W8unW01g2p3uoK8n1eOURGOJCFDsSr/AGmJC7djirIt&#xA;K8x+cL7y7Lqb+Wlt75liex05r+NvWSShYtKI+MZRTWlDXFWA+VP+cgda80+ZL/y5pPk5n1bTY5ZL&#xA;qGTUYowBBKsLgOYuJPNwMVTHR/z900+dF8m+atFuvLOuSyLFAJpI7i3d5P7serHx/vKgKQCvuMVT&#xA;X81PzQ1TyBZjVJPLx1LReUcTXqXaRMssnKimIo7U+H7Ve+KpJb/nX5tuPJsfnG38iT3GgujzNLDq&#xA;ELyrDGxV5DD6YeilT08KnbfFWVfln+aflv8AMLSZr7R/UhmtGVL6ynAEsTOCVJ4llZW4niwPbFWK&#xA;/mf+euo/l5qMFvqvlZprS9aYadeR3sf75ICoZinpsyGkimh8cVZWPNvnI+Uv03/hUC+5ep+ijfxc&#xA;vqvo+r6vq+nw5cvg9P6a4qwvyF+fmveezff4c8mNcfo4Rm6MmowxU9YP6YHOIV5ek38cVTOf89rP&#xA;QtWh0vz3oF95VlujS2vZTHd2T06/6RAT0qK0U0r8VMVenQzQzwxzwSLLDKoeKVCGVlYVVlYbEEdD&#xA;irzXzB+eelw+ZG8q+UtKufNvmOMkT29myxW0JXZhLcsGVeJIBIUqOhNdsVVZvOf5yWUMl3d+QYLq&#xA;3QcmgsdUR7gDr8KNEBIR/Ku57YqmHlL8y5vOHk6bzB5d0WaW7huWtH0u8ljtn9SPiX/efvFoA/cA&#xA;12xVh3lH/nIXXPNusXmj6J5Lkm1CwRnuon1GCPiEcRt8TxhTRjTY4qyjS/zK8zt5103yvr/lCbRW&#xA;1RJ5LW+N5DdRN9XjMjgektK9BQkHFXhfnewXQfO+qaffR3Jgj1M31rBaqGaVLlgRF8TL/e27KnNe&#xA;6stCT8PP9p4JcZlGvVGrPTuPwPTzvpv0ukAyaYEfw+mXzsH4jb4IfVdB0/1tYeGX64NNkFzLYTWy&#xA;SRO0i+pLBDcfWYrnlFCr8hRCfTNaldtNh1M6gCOHiFcXFR7gTHhMdzVc/q82yyABVfp/sekflUkO&#xA;qeULbR9btGk8sXi3cupXJeNbNZ1ltDbI0tY3JPx0oAG22/l67RD0fFwfaAyOo9RBPBHly5JB+aur&#xA;6jcazZTatZ3lm/p6rZRxyJGZzbStd28Myxh0DqkUgf4mFQpJanxZgdrQMqqr9J35bSB+2qcvsmHF&#xA;pZ8vrjz26Fjc2i6WPqFubue1uLdbewmD2i3kP1yW29bhNE78vVVR+9VEk4fD0IWnOw1E/UQAQbl9&#xA;XCeESqwR0/m2Y3uyhKrAHPf3e78foZj/AM4/6O935xu9TS2jt7PS4JI2WGvp/WZWEYKfvJwVZUlb&#xA;aRgARTYgZ1PZkCI8RJN9/P7h9zi9r6gnHjxk7i5fPlfnzPuIfQ+bN0L5O833I86f85S2WjamDLpW&#xA;n3kVpDavunp20fryKR0pJKGr7GmKvrHFUp1DyvpV/wCYdJ1+dWGo6MtwlpIpABW6QRyK+xJFBUb9&#xA;cVYr+dl/df4Sh8uWEhj1LzZeQaLbsvVY7hv9Jen8qwK9fnirwfXraD8pv+cj7G7t1+raDetFJxGy&#xA;i0u19CetOvpyBn+gYq+uMVfKP5/eT5vMHmTz3r9sC0/lUaOjoOjQXFu7zmniheJq+FcVezfkN5+j&#xA;81flpZXd5Ov1/SlNlqbuwG8CjjKxJ/bi4sSe9cVfO352RXXmLSl/Mm5DiDW9UlsdFRqj09NtI2WE&#xA;8a9ZnV3P4HfFX1r5Euhd+SPL10CCLjTLOUEAgfHbo2wO/fFXy/8Ak95n0/y5+ePm++vorqaKRNRh&#xA;VLO3lupOTahEwJSFXYLRD8R2xVMr99O/Nv8APiyvfXj0LT9I+rQLa37C21C6+rSNMVjgJ5c3aSgr&#xA;0X32xV6T/wA5Wf8AkpZv+Y62/W2Ksf8Ay+/Nz8v/AC3+RVhZ6hqsEmqQWdzGdKjPOdpJJZSkZRQe&#xA;PLkN22AxVW/5xT/LvzB5e0vVNe1mBrP9MrAljayDjL6UXNjK6ndQ5ccQd9q9xiqQ/wDOaP8A0x3/&#xA;AG8v+xXFIfQf/TJ/9GH/ADJwofPn/OF3/TY/9u3/ALGsCS9c/PXy5Z67+VfmGK4RS9haSajbSHqk&#xA;lohmqp8WVSvyOKHh/wCWv5k65Y/846ecI4p3+t6C8Vvp89Tzih1KRIQFPb02Z2Xw+jFWb/8AOIvl&#xA;+ztvIl9rnAG/1K9eJ5v2vRt1UIlf9dnOKvdsVS3RPLumaK2omwQxjU7yTULlCar68yorlR+yG9Ot&#xA;PGuKvlD8jPOWjeVfzO803uqi4MM6XEKfVreW5bl9bVt1iViBRepxV7/5B8+6T5/8y6zPbWY+p+W3&#xA;gj0u5nheK6EtzFItySHNVBChQOIPWuKoj80PyvtPOdpHcW831LXbRaWt2C6q6V5ejKYyG48jVWG6&#xA;mvUFlarNhjkjRcnS6qWGVjcHmO988Xek+YvKGrWVprVnLb/Ur0ajVBSW7eJi0Q9Y80lRebjkDWjn&#xA;lSm2g1vZ8ql/SjwjuAPOvs+Wz0mGePUj93L1dIHmPd0P9uwek/lS1vqHkq08hy30llc6ml1cG7tm&#xA;InX6m9qOK8kdaSBn3LV+HbNzoj6D73W+0EDDUCJ6QiPsSD85fMi61q2n6lpstLnTnureGWBt1ltb&#xA;uWFJKsFG6UfbbfvmL2hASPDIWCHZ9gYRk02UEXRsb1vRSnyh+XHmLzfJB+ibebTNGilaf9L3TEOZ&#xA;5FRZZhJEUMrHjRViNOvN+RynTdnylZyVuK5bUOQAP6fgKcfU6/FjBG08nLb6Y/Ecz7tu8vpLyd5Q&#xA;0fynocOkaWhEUfxSzPQySyEANI5FNzQCg2AoBsM3QAAoPNzmZGzzTvCxfKH50abf/l7+eWm+f47d&#xA;pNHvriG7LRjb1I1EV1DXajugLivXl7HFX1FoutaXrel22q6Vcpd6fdoJILiM1Vgf1EHYg7g7HFUo&#xA;vvO9hb+eNL8oQKtzqN7BPd3gV6G1ghUFHdQD/eueKjbx9iq8/wDM/l+x/Mr83p9GvJbhNF8m6epl&#xA;ktJTC41HUGVgA69hBHv74q8//wCch/yS0Xy55Oh8xaNPezyWlykV59duHuKQTVUMvL7NJeI+nFXt&#xA;n5Kebv8AFX5aaLqUknqXkUP1S+P7Xr237ti3u6gP/ssVSH8sILHW/MP5pfWQk9te6w+nXMW3xRQw&#xA;egykjsQSMVeA+XdM86eVvP8A5j/KnS3YHzG66ZJOajhbFxILsAA/8ebSVHg3tir1f/nKnQbHTvyi&#xA;0OzsIhHa6VqFtb261+zCtrNGB79FxV6P+Sl4bv8AKfytKTy42EUNeXL+5rFSvtw6dumKvD/+ceHR&#xA;f+cgvOIZgC8GphATSp/SMJoPoBOKq3/OXq6W3mDyuunCvmcrKJBb19f0i8f1avH4q+pz9Pv1xVmP&#xA;/OSH6R/5UXa/pI11H1bD66R/v/j+8/4euKsXj/KuLzt/zjZ5euNMgVvMWlxXFxZFFHOcC4kEtuSO&#xA;pcKOP+UoHjiqe/8AOL/5rNrOkHyXrMx/TGkp/uPeU/FNaJt6e+5eDp/q0/lOKpB/zmj/ANMd/wBv&#xA;L/sVxSH0GCD5SqNwbD/mThQ+e/8AnC9l5ecFqORGnEL3IH1qp/HAkvRv+cifPum+Xfy/1DSfWVta&#xA;16BrKysl3kMc/wC7mkK9QojLCv8ANQYoYp+XP5Jamv5D63oeop9W1vzOv1uOCTYxGLg9pHJ/Kecf&#xA;JvDlTqMVS7/nFbzemjyat+XeuqdP1eO6a5s4J/3btIVWOeChp8a+mGA7gnwxV6H/AM5A2dzB+Xuq&#xA;eYNP1PUdL1TS4ozby2F7cWyMGnRSJI4nWN9nO5FR44qlf/OMcuo6p5EbXtW1PUNT1K4uZoGkvry4&#xA;uUWOMrxCRyuyL7sBX3xV51/zjA6j83vNykgM1vc8VruaXqVpir33Xrvy55NfU/NNwsjXWrvZWssE&#xA;ZUvPMjehAkSMVq59XffoPbFWU4qhdT0rTNVs3stStYry0k+3BOiuhp0NGB3HY4qxa08l6t5aVl8n&#xA;XFv9TZ2f9FamHdEMlOZhuo6zrXiCVk9StNuOCMQOTZkyzmbkST5qkP5c6be6hHq3mdo9a1KMERRG&#xA;FYbKEMxdhHbAtyq7FuUzSNXeoxMRd1uoyzETEE8J6dGXqoUBVACgUAHQDC1uxV2KoPV9G0rWdPl0&#xA;7VbSK+sZxSW2nQSI3hs3cdj2xVgFr+QHk3TZpH0DUNa8vxytylt9M1KeCNvY1Lt+OKpr5d/J3yP5&#xA;flvbrToLkarqEMlvdavJdTvelJhRisxeqNsCGShr3xVvy/8Ak/5J8vaoNV0ZL20vmf1LuVdQvWF0&#xA;1a1uUeVkl3JPxDviqP8AOn5deV/OaW0XmGO4ubW2JZbSO5nghckg1kSJ0DEU2J3HbFUs0b8l/I+h&#xA;W99baEt/pVtqKKlzBaajexr8Lo/Nf3pKv+748ga8Sy9CRiqr5a/KDyR5Z1NdR0GG8sJyeVwiX940&#xA;U7EEcp43ldJOtfiHXFU3Pkny+fOa+cTAf04tmbAS1+H0i/Plxp9v9nl/LtiqXebvyq8n+b7xbjzF&#xA;HdX8SUKWJvbqO1VlUqHWGKREVqH7Q3OKrNI/Kjytoul3WlaRLqVhp10Av1aDUr1VhpIJCYP3pMRZ&#xA;h8RU1YVB2OKpPa/847/lZaSi5tLC6ttQBYnUIdQvUuDzryqyzU3rQ7Yqm3l38nvy90DVzrVnphn1&#xA;knl+kb2aa7nDUpyVp3fi1NuQFffFVfzh+V/lLzhcxyeYUu7yCMLxsPrlzFa8lrR/QikROfxfaG+K&#xA;r/J35a+WfJzyfoD65b2rq6jT5Ly5mtE9RlcskErugf4ft05UrvviqTXv5C/lnd69c6/+j5rbVrmU&#xA;zm6tLq4tmSVjVnjELoFLb1+ZxVV1/wDI/wDL7zHftfa/BearOQwiFzf3jrCGNSIlEoCCv7I29sVT&#xA;EflnoA8sjy0LvVBpYk9QKNRu/U4+l6Xoer6nP0OP+6q8K70xVJLT/nHv8rrBvU0uxu9MnI4yT2mo&#xA;X0TuvgxE3Su+KppoH5O/l5omqDV7bS/rOrg8hqF9LNeTBv5la4eTiw/mUA4qzPFWIecvyn8h+cJ1&#xA;u9a0xW1FABHqVuzQXK8fs/vIypbj251piqS3H5D+W7y1NjqeueYdT008f9x93qk8lvRPsjh8Ow7Y&#xA;qyKw/LfyppflmTy3o0M+k6XLJ6zrY3VxDMX+EE+usnq/EEAb4txirG7D/nHL8pLKYzxaVObgkkT/&#xA;AF69RxXrRopo+vfFUTafkP8Al1a6zY6wltdy3mnTpc2RnvbmdY5I3DoQsrv0ZR1xV//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:098779790737DE118E33E2CB7206E0AF</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:0A8779790737DE118E33E2CB7206E0AF</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>328.000000</stDim:w>
            <stDim:h>68.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>True</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE Red 032 CV</rdf:li>
               <rdf:li>PANTONE 109 CV</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 109 CV</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>8.627451</xapG:magenta>
                           <xapG:yellow>94.117645</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE Red 032 CV</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>90.980392</xapG:magenta>
                           <xapG:yellow>87.058823</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -68 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 68 li
328 68 li
328 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 68 mo
328 68 li
328 0 li
0 0 li
0 68 li
cp
clp
13.9331 0.666992 mo
45.1641 0.666992 li
46.5928 0.648926 li
49.7642 0.648926 li
51.2832 0.648926 53.7861 0.576172 57.3149 0.429199 cv
58.6348 0.374023 li
58.4419 3.11279 58.4028 4.18896 58.396 5.64111 cv
58.3599 13.8149 li
58.3599 36.0293 li
58.3599 50.0186 55.1938 54.7686 40.105 62.2188 cv
39.438 62.5488 31.7461 66.3877 30.9409 66.8203 cv
30.1899 67.2227 li
29.4199 67.626 li
27.8799 66.8203 li
24.708 65.1582 21.4888 63.6963 18.9902 62.4697 cv
5.16504 55.6895 0.736816 50.874 0.736816 36.0293 cv
0.736816 13.8149 li
0.700195 9.83789 li
0.682129 5.64111 li
0.669922 3.10596 0.643066 2.2832 0.442871 0.374023 cv
1.76318 0.429199 li
5.23584 0.574219 7.8252 0.648926 9.33203 0.648926 cv
12.4849 0.648926 li
13.9331 0.666992 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
29.418 66.2676 mo
35.3628 63.3506 li
35.5112 63.2959 li
35.4741 63.166 li
35.4741 35.8213 li
35.4189 35.6553 li
35.604 35.6924 li
57.1162 35.6924 li
57.3008 35.748 li
57.2461 35.5059 li
57.2461 23.9141 li
57.3008 23.728 li
57.1162 23.7842 li
35.604 23.7842 li
35.4189 23.8208 li
35.4741 23.6362 li
35.4741 1.88184 li
35.5112 1.69678 li
35.3442 1.75293 li
23.5669 1.75293 li
23.3809 1.69678 li
23.437 1.88184 li
23.437 23.6362 li
23.4741 23.8208 li
23.3071 23.7842 li
1.96191 23.7842 li
1.77686 23.728 li
1.83301 23.9141 li
1.83301 35.6172 li
1.77686 35.748 li
1.96191 35.6924 li
23.3071 35.6924 li
23.4741 35.6553 li
23.437 35.877 li
23.437 63.1104 li
23.3809 63.333 li
23.5298 63.3701 li
29.418 66.2676 li
0 0 0 0 cmyk
f
2.05518 1.75293 mo
1.77686 1.69678 li
1.83301 1.90088 li
1.83301 23.6719 li
1.77686 23.8398 li
2.03711 23.7842 li
23.2881 23.7852 li
23.4741 23.8398 li
23.437 23.6538 li
23.437 1.84521 li
23.4741 1.69678 li
23.2881 1.75293 li
2.05518 1.75293 li
/0 
<<
/Name (PANTONE Red 032 CV)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0.909804 0.870588 0 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
35.6968 1.75293 mo
35.438 1.69678 li
35.4741 1.90088 li
35.4741 23.6729 li
35.438 23.8398 li
35.6782 23.7852 li
57.0981 23.7842 li
57.3008 23.8398 li
57.2461 23.6528 li
57.2461 1.84521 li
57.3008 1.69678 li
57.0981 1.75293 li
35.6968 1.75293 li
f
23.3809 35.6934 mo
1.90723 35.6934 li
1.77686 35.6377 li
1.83301 35.7861 li
1.83301 37.085 li
1.83301 49.04 5.82324 54.8516 18.105 60.7881 cv
21.9878 62.665 li
23.3418 63.2979 li
23.4531 63.4268 li
23.4341 63.2422 li
23.437 35.8047 li
23.4741 35.6377 li
23.3809 35.6934 li
f
35.585 35.6934 mo
35.438 35.6377 li
35.4741 35.7666 li
35.4741 63.166 li
35.438 63.3701 li
35.585 63.2031 li
36.812 62.6465 li
53.4902 54.7969 57.2461 50.1201 57.2461 37.1963 cv
57.2461 35.8213 li
57.3008 35.6357 li
57.1162 35.6924 li
35.585 35.6934 li
f
5.3252 24.8618 mo
5.38281 24.9268 5.42578 24.9771 5.45508 25.0098 cv
5.5249 25.0908 5.5752 25.147 5.604 25.1768 cv
5.62695 25.2021 5.68311 25.2578 5.77002 25.3452 cv
5.8042 25.377 5.854 25.4268 5.91895 25.4932 cv
5.86719 25.5342 5.83594 25.5581 5.82617 25.5679 cv
5.64014 25.7349 li
5.49219 25.9019 li
5.43604 25.957 li
5.43604 26.1309 li
5.43604 27.6362 5.82715 28.6602 6.66211 29.3379 cv
6.81104 29.459 li
6.66211 29.561 li
6.49512 29.543 li
6.14209 29.5059 li
5.82617 29.4502 li
5.64111 29.4121 li
5.45508 30.75 li
5.19482 30.75 li
5.00879 29.4121 li
4.82422 29.4502 li
4.66309 29.4829 4.56396 29.501 4.52588 29.5059 cv
4.15381 29.543 li
3.98779 29.561 li
3.90918 29.5581 3.84619 29.5332 3.84619 29.5029 cv
3.84619 29.4702 3.87793 29.4258 3.93213 29.3848 cv
4.20996 29.1709 li
4.43994 28.9951 4.59082 28.7739 4.85986 28.2241 cv
4.98193 27.9761 5.04492 27.7661 5.04688 27.6108 cv
5.04883 27.2202 5.10693 26.9048 5.17578 26.9048 cv
5.21387 26.2168 li
5.23193 25.957 li
5.1582 25.9019 li
5.00879 25.7349 li
4.82422 25.5679 li
4.74902 25.4932 li
4.81494 25.4268 4.86523 25.377 4.89795 25.3452 cv
5.15479 25.0898 5.18018 25.061 5.3252 24.8618 cv
0 0 0 1 cmyk
f
12.3652 24.8618 mo
12.5098 25.061 12.5361 25.0898 12.792 25.3452 cv
12.8262 25.377 12.876 25.4268 12.9409 25.4932 cv
12.8672 25.5679 li
12.6812 25.7349 li
12.5332 25.9019 li
12.4399 25.957 li
12.4771 26.2168 li
12.5142 26.9048 li
12.5669 27.8892 13.1152 29.0269 13.6841 29.3379 cv
13.7822 29.3911 13.8418 29.438 13.8418 29.459 cv
13.8418 29.5112 13.8052 29.5518 13.7578 29.5518 cv
13.5171 29.543 li
13.1641 29.5059 li
12.8481 29.4502 li
12.6631 29.4121 li
12.4771 30.75 li
12.2349 30.75 li
12.0498 29.4121 li
11.8638 29.4502 li
11.5479 29.5059 li
11.1948 29.543 li
11.0278 29.561 li
11.0029 29.562 li
10.9282 29.562 10.877 29.5381 10.877 29.501 cv
10.877 29.4648 10.9048 29.4219 10.9541 29.3848 cv
11.2319 29.1709 li
11.4751 28.9858 11.541 28.8901 11.8818 28.2241 cv
12.0171 27.9629 12.0859 27.7529 12.0869 27.6108 cv
12.0879 27.2202 12.1382 26.9048 12.1982 26.9048 cv
12.2349 26.2168 li
12.2539 25.957 li
12.229 25.9321 12.2109 25.9141 12.1982 25.9019 cv
12.1021 25.8042 12.0469 25.748 12.0308 25.7349 cv
11.8452 25.5679 li
11.771 25.4932 li
11.8369 25.4268 11.8862 25.377 11.9199 25.3452 cv
12.0078 25.2578 12.064 25.2021 12.0869 25.1768 cv
12.1162 25.147 12.165 25.0908 12.2349 25.0098 cv
12.2642 24.9771 12.3071 24.9268 12.3652 24.8618 cv
f
8.85498 28.9849 mo
8.98389 29.1338 li
9.11523 29.3008 li
9.146 29.3408 9.20215 29.397 9.28223 29.4678 cv
9.44922 29.6172 li
9.35596 29.6919 li
9.18896 29.8589 li
9.02197 30.0078 li
8.96582 30.082 li
8.96484 30.2549 li
8.96484 31.7998 9.33398 32.7661 10.1919 33.4619 cv
10.3408 33.583 li
10.1919 33.6851 li
10.0249 33.667 li
9.67188 33.6289 li
9.35596 33.5742 li
9.16992 33.5361 li
8.98389 34.874 li
8.7251 34.874 li
8.53906 33.5361 li
8.35303 33.5742 li
8.03711 33.6289 li
7.68408 33.667 li
7.51709 33.6851 li
7.49707 33.687 li
7.4248 33.687 7.36816 33.6582 7.36816 33.624 cv
7.36816 33.5972 7.40186 33.5542 7.46094 33.5088 cv
7.74023 33.2949 li
8.33301 32.8398 8.74414 31.5952 8.74414 30.2549 cv
8.74316 30.082 li
8.68701 30.0078 li
8.52002 29.8589 li
8.35303 29.6919 li
8.25977 29.6172 li
8.54297 29.3721 8.68213 29.2251 8.85498 28.9849 cv
f
15.9141 28.9849 mo
16.0869 29.2251 16.2251 29.3721 16.5078 29.6172 cv
16.415 29.6919 li
16.248 29.8589 li
16.0811 30.0078 li
16.0249 30.082 li
16.0239 30.2549 li
16.0239 31.2642 16.3179 32.479 16.6558 32.8682 cv
17.0278 33.2949 li
17.0591 33.3301 17.127 33.3862 17.2319 33.4619 cv
17.3999 33.583 li
17.251 33.6851 li
17.084 33.667 li
16.731 33.6289 li
16.415 33.5742 li
16.229 33.5361 li
16.0439 34.874 li
15.7832 34.874 li
15.5981 33.5361 li
15.4121 33.5742 li
15.0962 33.6289 li
14.7432 33.667 li
14.5762 33.6851 li
14.5552 33.687 li
14.4839 33.687 14.4268 33.6582 14.4268 33.6221 cv
14.4268 33.5928 14.458 33.5508 14.5112 33.5088 cv
14.7798 33.2949 li
15.3638 32.832 15.8032 31.5869 15.8032 30.2549 cv
15.8018 30.082 li
15.7461 30.0078 li
15.5791 29.8589 li
15.4121 29.6919 li
15.3188 29.6172 li
15.3931 29.5508 15.4492 29.501 15.4868 29.4678 cv
15.5659 29.3979 15.6211 29.3418 15.6538 29.3008 cv
15.7832 29.1338 li
15.9141 28.9849 li
f
19.4429 24.8618 mo
19.5869 25.061 19.6128 25.0898 19.8701 25.3452 cv
19.9038 25.377 19.9531 25.4268 20.019 25.4932 cv
19.9448 25.5679 li
19.7588 25.7349 li
19.6108 25.9019 li
19.5361 25.957 li
19.5542 26.2168 li
19.5918 26.9048 li
19.6431 27.8638 20.209 29.04 20.7622 29.3379 cv
20.8589 29.3911 20.9199 29.437 20.9199 29.459 cv
20.9199 29.5112 20.8862 29.5518 20.8462 29.5518 cv
20.6128 29.543 li
20.2422 29.5059 li
20.1631 29.498 20.0571 29.479 19.9258 29.4502 cv
19.7588 29.4121 li
19.5732 30.75 li
19.313 30.75 li
19.1279 29.4121 li
18.9321 29.459 li
18.626 29.5059 li
18.2729 29.543 li
18.105 29.561 li
18.0811 29.562 li
18.0112 29.562 17.9551 29.5371 17.9551 29.5049 cv
17.9551 29.4712 17.9868 29.4268 18.04 29.3848 cv
18.3101 29.1709 li
18.5571 28.9751 18.6348 28.8608 18.96 28.2241 cv
19.0942 27.9609 19.1641 27.751 19.1641 27.6108 cv
19.165 27.2202 19.2148 26.9048 19.2759 26.9048 cv
19.313 26.2168 li
19.3311 25.957 li
19.2759 25.9019 li
19.1079 25.7349 li
19.0259 25.6489 18.9702 25.5928 18.9409 25.5679 cv
18.9258 25.5532 18.895 25.5278 18.8481 25.4932 cv
18.915 25.4268 18.9629 25.377 18.9971 25.3452 cv
19.0859 25.2578 19.1411 25.2021 19.1641 25.1768 cv
19.1929 25.147 19.2432 25.0908 19.313 25.0098 cv
19.3418 24.9771 19.3848 24.9268 19.4429 24.8618 cv
f
39.4868 24.8242 mo
39.6172 24.9912 li
39.7471 25.1401 li
39.834 25.2402 39.8901 25.3018 39.9141 25.3262 cv
39.9492 25.3608 40.0049 25.4102 40.0811 25.4751 cv
39.9888 25.5488 li
39.8208 25.7158 li
39.6538 25.8638 li
39.5981 25.939 li
39.5981 26.1001 li
39.5981 27.5962 40.0981 28.9028 40.8242 29.3008 cv
40.937 29.3628 40.9849 29.4111 40.9849 29.4629 cv
40.9731 29.4868 li
40.8242 29.5239 li
40.6572 29.5239 li
40.4399 29.5239 40.0532 29.457 39.8032 29.376 cv
39.6172 30.7129 li
39.3569 30.7129 li
39.1709 29.376 li
38.9092 29.4609 38.5278 29.5239 38.3159 29.5239 cv
38.1489 29.5239 li
38.041 29.5239 37.9932 29.5049 37.9932 29.46 cv
37.9932 29.4058 38.041 29.3579 38.1489 29.3008 cv
38.8638 28.9302 39.376 27.5918 39.376 26.1001 cv
39.375 25.939 li
39.3198 25.8638 li
39.1528 25.7158 li
38.9858 25.5488 li
38.8921 25.4751 li
38.9692 25.4102 39.0249 25.3608 39.0591 25.3262 cv
39.084 25.3018 39.1392 25.2402 39.2271 25.1401 cv
39.3569 24.9912 li
39.4868 24.8242 li
f
46.5649 24.8242 mo
46.6948 24.9912 li
46.8428 25.1401 li
47.0098 25.3262 li
47.1592 25.4751 li
47.0659 25.5488 li
46.8989 25.7158 li
46.7319 25.8638 li
46.6758 25.939 li
46.6748 26.1001 li
46.6748 27.5791 47.1851 28.9102 47.9019 29.3008 cv
48.0142 29.3628 48.063 29.4111 48.063 29.4629 cv
48.0508 29.4868 li
47.9019 29.5239 li
47.7349 29.5239 li
47.5171 29.5239 47.1309 29.457 46.8799 29.376 cv
46.6948 30.7129 li
46.4351 30.7129 li
46.249 29.376 li
45.9482 29.4722 45.6191 29.5249 45.3232 29.5249 cv
45.1191 29.5249 45.0771 29.5132 45.0771 29.4512 cv
45.0771 29.395 45.1211 29.355 45.2461 29.3008 cv
45.395 29.2349 45.6641 28.958 45.8208 28.707 cv
46.1162 28.2358 46.2852 27.8311 46.2861 27.5918 cv
46.2871 27.1909 46.3462 26.8682 46.416 26.8682 cv
46.4531 26.1802 li
46.4712 25.939 li
46.439 25.9058 46.4141 25.8809 46.397 25.8638 cv
46.1621 25.6289 46.144 25.6118 45.9702 25.4751 cv
46.1372 25.3262 li
46.3042 25.1401 li
46.4531 24.9912 li
46.5649 24.8242 li
f
43.0352 28.9482 mo
43.0928 29.0142 43.1362 29.064 43.165 29.0972 cv
43.2349 29.1782 43.2852 29.2329 43.314 29.2642 cv
43.3369 29.2881 43.3828 29.353 43.4722 29.4399 cv
43.5049 29.4731 43.564 29.5132 43.6289 29.5801 cv
43.5371 29.6538 li
43.3701 29.8398 li
43.2021 29.9878 li
43.146 30.063 li
43.165 30.3042 li
43.2021 30.9922 li
43.2568 32.0068 43.7852 33.105 44.3721 33.4248 cv
44.4839 33.4868 44.5332 33.5352 44.5332 33.5879 cv
44.521 33.6108 li
44.3721 33.6479 li
44.2051 33.6479 li
43.9878 33.6479 43.6011 33.5811 43.3511 33.5 cv
43.165 34.8369 li
42.9048 34.8369 li
42.7192 33.5 li
42.4702 33.5898 42.1001 33.6489 41.7881 33.6489 cv
41.5981 33.6489 41.5518 33.6328 41.5518 33.5649 cv
41.5518 33.5132 41.5962 33.4761 41.7158 33.4248 cv
41.8628 33.3628 42.144 33.0718 42.292 32.8311 cv
42.5962 32.335 42.7749 31.9209 42.7749 31.7158 cv
42.7749 31.3159 42.8252 30.9922 42.8872 30.9922 cv
42.9229 30.3042 li
42.9419 30.063 li
42.8682 29.9878 li
42.7192 29.8398 li
42.5332 29.6538 li
42.459 29.5801 li
42.5249 29.5142 42.5752 29.4639 42.6079 29.4312 cv
42.8652 29.1758 42.8911 29.147 43.0352 28.9482 cv
f
50.168 28.9482 mo
50.2261 29.0142 50.27 29.064 50.2979 29.0972 cv
50.3691 29.1782 50.418 29.2329 50.4468 29.2642 cv
50.4702 29.2881 50.5259 29.3442 50.6138 29.4312 cv
50.647 29.4639 50.6968 29.5132 50.7622 29.5801 cv
50.73 29.6128 50.7051 29.6372 50.688 29.6538 cv
50.584 29.7612 50.5229 29.8232 50.5029 29.8398 cv
50.4028 29.9268 50.3462 29.9771 50.335 29.9878 cv
50.3252 29.999 50.3071 30.0239 50.2788 30.063 cv
50.2979 30.3042 li
50.335 30.9922 li
50.3901 32.0068 50.9189 33.105 51.5059 33.4248 cv
51.6182 33.4868 51.666 33.5352 51.666 33.5879 cv
51.6538 33.6108 li
51.5059 33.6479 li
51.3389 33.6479 li
51.1211 33.6479 50.7339 33.5811 50.4839 33.5 cv
50.2979 34.8369 li
50.0571 34.8369 li
49.8521 33.5 li
49.603 33.5898 49.2329 33.6489 48.9209 33.6489 cv
48.731 33.6489 48.686 33.6328 48.686 33.5649 cv
48.686 33.5132 48.73 33.4761 48.8491 33.4248 cv
48.9961 33.3628 49.2778 33.0718 49.4248 32.8311 cv
49.729 32.335 49.9082 31.9209 49.9092 31.7158 cv
49.9092 31.3159 49.959 30.9922 50.02 30.9922 cv
50.0571 30.3042 li
50.0762 30.063 li
50.001 29.9878 li
49.8521 29.8398 li
49.667 29.6538 li
49.5928 29.5801 li
49.6582 29.5142 49.708 29.4639 49.7412 29.4312 cv
49.998 29.1758 50.0239 29.147 50.168 28.9482 cv
f
53.6982 24.8242 mo
53.8281 24.9912 li
53.9761 25.1401 li
54.1431 25.3262 li
54.292 25.4751 li
54.2002 25.5488 li
54.0322 25.7158 li
53.8652 25.8638 li
53.8091 25.939 li
53.8091 26.1001 li
53.8091 27.5791 54.3179 28.9102 55.0352 29.3008 cv
55.147 29.3628 55.1958 29.4111 55.1958 29.4629 cv
55.1841 29.4868 li
55.0352 29.5239 li
54.8682 29.5239 li
54.6509 29.5239 54.2642 29.457 54.0142 29.376 cv
53.8281 30.7129 li
53.5679 30.7129 li
53.3818 29.376 li
53.082 29.4722 52.7529 29.5249 52.4561 29.5249 cv
52.252 29.5249 52.21 29.5132 52.21 29.4512 cv
52.21 29.395 52.2549 29.355 52.3789 29.3008 cv
52.5288 29.2349 52.7969 28.958 52.9551 28.707 cv
53.249 28.2358 53.4189 27.8311 53.4189 27.5918 cv
53.4209 27.1909 53.479 26.8682 53.5488 26.8682 cv
53.5859 26.1802 li
53.605 25.939 li
53.5718 25.9058 53.5469 25.8809 53.5308 25.8638 cv
53.4492 25.7808 53.3999 25.731 53.3818 25.7158 cv
53.1958 25.5488 li
53.1221 25.4751 li
53.271 25.3262 li
53.438 25.1401 li
53.5859 24.9912 li
53.6982 24.8242 li
f
26.2051 44.0137 mo
26.3491 44.2129 26.375 44.2422 26.6318 44.4971 cv
26.665 44.5303 26.7148 44.5791 26.7808 44.6465 cv
26.707 44.7197 li
26.52 44.8867 li
26.3721 45.0537 li
26.2979 45.1289 li
26.3169 45.3701 li
26.353 46.0566 li
26.3862 46.665 26.6392 47.4463 26.9482 47.8965 cv
27.1528 48.1943 27.3779 48.4268 27.5239 48.4902 cv
27.6479 48.5449 27.6929 48.585 27.6929 48.6416 cv
27.6929 48.7021 27.6479 48.7148 27.4302 48.7148 cv
27.1401 48.7148 26.7622 48.6523 26.52 48.5654 cv
26.335 49.9033 li
26.0752 49.9033 li
25.8892 48.5654 li
25.6392 48.6465 25.252 48.7129 25.0352 48.7129 cv
24.8682 48.7129 li
24.7578 48.7129 24.7109 48.6943 24.7109 48.6504 cv
24.7109 48.5947 24.7588 48.5469 24.8682 48.4902 cv
25.0459 48.3984 25.2988 48.1367 25.4429 47.8965 cv
25.771 47.3496 25.9258 46.9902 25.9258 46.7813 cv
25.9268 46.3818 25.9761 46.0566 26.0371 46.0566 cv
26.0752 45.3701 li
26.0928 45.1289 li
26.0371 45.0537 li
25.8701 44.8867 li
25.7031 44.7197 li
25.6099 44.6465 li
25.6758 44.5791 25.7261 44.5303 25.7588 44.4971 cv
25.8472 44.4102 25.9028 44.3535 25.9258 44.3301 cv
25.9551 44.2988 26.0049 44.2432 26.0752 44.1621 cv
26.104 44.1289 26.147 44.0791 26.2051 44.0137 cv
f
32.8359 44.0137 mo
32.981 44.2129 33.0059 44.2422 33.2642 44.4971 cv
33.2969 44.5303 33.3462 44.5791 33.4131 44.6465 cv
33.3389 44.7197 li
33.1519 44.8867 li
33.0039 45.0537 li
32.9302 45.1289 li
32.9482 45.3701 li
32.9849 46.0566 li
33.0181 46.665 33.27 47.4463 33.5801 47.8965 cv
33.7852 48.1943 34.0098 48.4268 34.1558 48.4902 cv
34.2798 48.5449 34.3252 48.585 34.3252 48.6416 cv
34.3252 48.7021 34.2798 48.7148 34.061 48.7148 cv
33.772 48.7148 33.394 48.6523 33.1519 48.5654 cv
32.9668 49.9033 li
32.707 49.9033 li
32.521 48.5654 li
32.271 48.6465 31.8838 48.7129 31.666 48.7129 cv
31.499 48.7129 li
31.3901 48.7129 31.3428 48.6943 31.3428 48.6504 cv
31.3428 48.5947 31.3911 48.5469 31.499 48.4902 cv
31.6782 48.3984 31.9312 48.1367 32.0752 47.8965 cv
32.4019 47.3496 32.5581 46.9902 32.5581 46.7813 cv
32.5591 46.3818 32.6079 46.0566 32.6689 46.0566 cv
32.707 45.3701 li
32.7251 45.1289 li
32.6689 45.0537 li
32.502 44.8867 li
32.335 44.7197 li
32.2422 44.6465 li
32.3081 44.5791 32.3569 44.5303 32.3911 44.4971 cv
32.479 44.4102 32.5352 44.3535 32.5581 44.3301 cv
32.5869 44.2988 32.6362 44.2432 32.707 44.1621 cv
32.7358 44.1289 32.7788 44.0791 32.8359 44.0137 cv
f
29.4561 50.0322 mo
29.5391 50.2275 li
29.7158 50.3477 li
29.8828 50.5342 li
30.0322 50.6816 li
29.957 50.7568 li
29.771 50.9238 li
29.7539 50.9395 29.7051 50.9893 29.623 51.0732 cv
29.606 51.0898 29.5811 51.1143 29.5488 51.1475 cv
29.5669 51.3877 li
29.604 52.0762 li
29.6592 53.083 30.2241 54.2568 30.7749 54.5088 cv
30.9009 54.5674 30.9419 54.6016 30.9419 54.6553 cv
30.9229 54.6953 li
30.793 54.751 li
30.626 54.7324 li
30.2539 54.6953 li
30.1758 54.6865 30.0698 54.668 29.939 54.6396 cv
29.771 54.6016 li
29.5669 55.9404 li
29.3262 55.9404 li
29.1401 54.6016 li
28.9541 54.6396 li
28.6382 54.6953 li
28.2852 54.7324 li
28.1182 54.751 li
28.0991 54.752 li
28.0171 54.752 27.9629 54.7188 27.9629 54.668 cv
27.9629 54.6123 28.0068 54.5684 28.1182 54.5088 cv
28.3008 54.4131 28.5498 54.1563 28.6938 53.915 cv
29.022 53.3662 29.1768 53.0098 29.1768 52.8008 cv
29.1768 52.4004 29.228 52.0762 29.2881 52.0762 cv
29.3262 51.3877 li
29.3442 51.1475 li
29.2881 51.0732 li
29.1211 50.9238 li
28.9541 50.7568 li
28.8608 50.6816 li
29.0098 50.5342 li
29.1768 50.3477 li
29.3262 50.2002 li
29.4561 50.0322 li
f
26.168 56.1621 mo
26.2979 56.3301 li
26.4458 56.4775 li
26.6128 56.6641 li
26.7339 56.8398 li
26.6689 56.8867 li
26.502 57.0537 li
26.335 57.2031 li
26.2788 57.2773 li
26.2979 57.5186 li
26.335 58.2061 li
26.3901 59.2207 26.918 60.3193 27.5049 60.6396 cv
27.6172 60.7012 27.665 60.749 27.665 60.8018 cv
27.6538 60.8252 li
27.5049 60.8633 li
27.3379 60.8633 li
27.189 60.8633 26.9219 60.8223 26.4839 60.7324 cv
26.2979 62.0508 li
26.0371 62.0508 li
25.8521 60.7324 li
25.459 60.8223 25.165 60.8643 24.9199 60.8643 cv
24.729 60.8643 24.6851 60.8467 24.6851 60.7793 cv
24.6851 60.7275 24.729 60.6904 24.8491 60.6396 cv
24.9961 60.5771 25.2769 60.2871 25.4248 60.0449 cv
25.728 59.5479 25.9082 59.1348 25.9082 58.9307 cv
25.9082 58.5303 25.958 58.2061 26.019 58.2061 cv
26.0562 57.5186 li
26.0752 57.2773 li
26.041 57.2441 26.0171 57.2188 26.001 57.2031 cv
25.9189 57.1191 25.8691 57.0703 25.8521 57.0537 cv
25.666 56.8867 li
25.5918 56.8115 li
25.7412 56.6641 li
25.9082 56.4775 li
26.0562 56.3301 li
26.168 56.1621 li
f
32.8359 56.1621 mo
32.9482 56.3301 li
33.0972 56.4775 li
33.2358 56.6924 li
33.4131 56.8115 li
33.3389 56.8867 li
33.1519 57.0537 li
33.1348 57.0703 33.0859 57.1191 33.0039 57.2031 cv
32.9868 57.2188 32.9629 57.2441 32.9302 57.2773 cv
32.9482 57.5186 li
32.9849 58.2061 li
33.0181 58.8145 33.27 59.5947 33.5801 60.0449 cv
33.7852 60.3428 34.0098 60.5752 34.1558 60.6396 cv
34.2798 60.6934 34.3252 60.7354 34.3252 60.791 cv
34.3252 60.8496 34.2788 60.8633 34.0781 60.8633 cv
33.8369 60.8633 33.5439 60.8223 33.1519 60.7324 cv
32.9668 62.0508 li
32.707 62.0508 li
32.521 60.7324 li
32.082 60.8223 31.8149 60.8633 31.666 60.8633 cv
31.499 60.8633 li
31.3901 60.8633 31.3428 60.8438 31.3428 60.7988 cv
31.3428 60.7451 31.3911 60.6953 31.499 60.6396 cv
31.6782 60.5469 31.9312 60.2861 32.0752 60.0449 cv
32.4019 59.498 32.5581 59.1396 32.5581 58.9307 cv
32.5591 58.5303 32.6079 58.2061 32.6689 58.2061 cv
32.707 57.5186 li
32.7251 57.2773 li
32.6689 57.2031 li
32.502 57.0537 li
32.335 56.8867 li
32.2422 56.8115 li
32.3911 56.6641 li
32.5581 56.4775 li
32.707 56.3301 li
32.8359 56.1621 li
f
29.4561 37.958 mo
29.5669 38.125 li
29.7158 38.2744 li
29.8828 38.459 li
30.0322 38.6084 li
29.957 38.6816 li
29.771 38.8486 li
29.7539 38.8652 29.7051 38.915 29.623 38.998 cv
29.606 39.0146 29.5811 39.0391 29.5488 39.0732 cv
29.5669 39.3145 li
29.604 40.001 li
29.6592 41.0059 30.2349 42.2061 30.7749 42.4346 cv
30.897 42.4863 30.939 42.5234 30.939 42.5771 cv
30.939 42.6416 30.8901 42.6592 30.7031 42.6592 cv
30.459 42.6592 30.165 42.6172 29.771 42.5283 cv
29.5669 43.8652 li
29.3262 43.8652 li
29.1401 42.5283 li
28.7012 42.6172 28.4341 42.6572 28.2852 42.6572 cv
28.1182 42.6572 li
28.0088 42.6572 27.9619 42.6377 27.9619 42.5938 cv
27.9619 42.5391 28.0098 42.4912 28.1182 42.4346 cv
28.2969 42.3418 28.5498 42.0811 28.6938 41.8398 cv
29.021 41.2939 29.1768 40.9346 29.1768 40.7246 cv
29.1768 40.3262 29.228 40.001 29.2881 40.001 cv
29.3262 39.3145 li
29.3442 39.0732 li
29.2881 38.998 li
29.1211 38.8486 li
28.9541 38.6816 li
28.8608 38.6084 li
29.0098 38.459 li
29.1768 38.2744 li
29.3262 38.125 li
29.4561 37.958 li
f
26.1118 4.05615 mo
26.1699 4.12207 26.2129 4.17188 26.2422 4.2041 cv
26.312 4.28613 26.3618 4.34082 26.3911 4.37207 cv
26.4131 4.396 26.4692 4.45215 26.5581 4.53906 cv
26.5908 4.57178 26.6401 4.62109 26.707 4.68701 cv
26.6318 4.76221 li
26.4458 4.9292 li
26.4312 4.94287 26.375 4.99902 26.2788 5.09619 cv
26.2671 5.10889 26.248 5.12695 26.2241 5.15186 cv
26.2422 5.41211 li
26.2788 6.08008 li
26.3149 6.72705 26.603 7.62695 26.874 7.93799 cv
27.2451 8.36621 li
27.2642 8.38721 27.332 8.44385 27.4502 8.5332 cv
27.6079 8.65283 li
27.4502 8.75586 li
27.2832 8.73682 li
26.9292 8.7002 li
26.6128 8.64404 li
26.4282 8.60693 li
26.2231 9.88916 li
26.001 9.94385 li
25.8149 8.60693 li
25.6289 8.64404 li
25.313 8.7002 li
24.96 8.73682 li
24.7642 8.75586 li
24.6968 8.75586 24.6421 8.729 24.6421 8.69678 cv
24.6421 8.66309 24.6699 8.62012 24.7192 8.5791 cv
24.7349 8.56494 24.8281 8.49414 24.9971 8.36621 cv
25.2368 8.18408 25.3052 8.08496 25.647 7.41797 cv
25.7808 7.1582 25.8511 6.94824 25.8521 6.80518 cv
25.853 6.40479 25.9028 6.08008 25.9629 6.08008 cv
26.001 5.41211 li
26.019 5.15186 li
25.9448 5.09619 li
25.7959 4.9292 li
25.6099 4.76221 li
25.5361 4.68701 li
25.6021 4.62109 25.6509 4.57178 25.6851 4.53906 cv
25.9419 4.28418 25.9668 4.25586 26.1118 4.05615 cv
f
32.8359 4.05615 mo
32.981 4.25586 33.0059 4.28418 33.2642 4.53906 cv
33.2969 4.57178 33.3462 4.62109 33.4131 4.68701 cv
33.3389 4.76221 li
33.1519 4.9292 li
33.0039 5.09619 li
32.9302 5.15186 li
32.9482 5.41211 li
32.9849 6.08008 li
33.04 7.06494 33.5972 8.23096 34.1558 8.5332 cv
34.2529 8.58496 34.314 8.63184 34.314 8.65283 cv
34.314 8.70508 34.2798 8.74609 34.2388 8.74609 cv
34.0068 8.73682 li
33.6348 8.7002 li
33.5571 8.69189 33.4512 8.67383 33.3198 8.64404 cv
33.1519 8.60693 li
32.9668 9.94385 li
32.707 9.94385 li
32.521 8.60693 li
32.3169 8.58887 li
32.019 8.7002 li
31.666 8.73682 li
31.499 8.75586 li
31.4741 8.75684 li
31.4048 8.75684 31.3491 8.73096 31.3491 8.69922 cv
31.3491 8.66602 31.3799 8.62207 31.4341 8.5791 cv
31.7031 8.36621 li
31.9502 8.16992 32.0308 8.05176 32.353 7.41797 cv
32.4868 7.15479 32.5571 6.9458 32.5581 6.80518 cv
32.5601 6.40479 32.6099 6.08008 32.6689 6.08008 cv
32.707 5.41211 li
32.7251 5.15186 li
32.6689 5.09619 li
32.502 4.9292 li
32.4189 4.84277 32.3628 4.78711 32.335 4.76221 cv
32.3188 4.74805 32.2891 4.72314 32.2422 4.68701 cv
32.3081 4.62109 32.3569 4.57178 32.3911 4.53906 cv
32.479 4.45215 32.5352 4.396 32.5581 4.37207 cv
32.5869 4.34082 32.6362 4.28613 32.707 4.2041 cv
32.7358 4.17188 32.7788 4.12207 32.8359 4.05615 cv
f
29.418 9.87012 mo
29.5488 10.019 li
29.6968 10.186 li
29.7871 10.2871 29.8428 10.3491 29.8652 10.3721 cv
29.897 10.4058 29.9458 10.4561 30.0132 10.52 cv
29.9199 10.5952 li
29.7529 10.7622 li
29.5859 10.9102 li
29.5298 10.9849 li
29.5488 11.2261 li
29.5669 11.8579 li
29.6221 12.873 30.1689 14.0269 30.7559 14.3481 cv
30.8682 14.4092 30.916 14.457 30.916 14.5088 cv
30.9048 14.5332 li
30.7559 14.5698 li
30.5889 14.5698 li
30.3711 14.5698 29.9849 14.5029 29.7339 14.4219 cv
29.5488 15.7588 li
29.2881 15.7588 li
29.103 14.4219 li
28.854 14.5122 28.4858 14.5708 28.1758 14.5708 cv
27.9741 14.5708 27.9312 14.5591 27.9312 14.4971 cv
27.9312 14.4409 27.9761 14.4009 28.1001 14.3481 cv
28.249 14.2808 28.5181 14.0049 28.6758 13.752 cv
28.9702 13.2822 29.1392 12.877 29.1401 12.6382 cv
29.1421 12.2368 29.1992 11.9141 29.27 11.9141 cv
29.3071 11.2261 li
29.3262 10.9849 li
29.292 10.9521 29.2681 10.9268 29.251 10.9102 cv
29.1699 10.8271 29.1201 10.7769 29.103 10.7622 cv
28.917 10.5952 li
28.8428 10.52 li
28.9912 10.3721 li
29.1592 10.186 li
29.2451 10.0898 29.2949 10.0342 29.3071 10.019 cv
29.333 9.98682 29.3701 9.93701 29.418 9.87012 cv
f
26.0928 15.666 mo
26.2241 15.8149 li
26.353 15.9819 li
26.3848 16.022 26.4399 16.0781 26.52 16.1489 cv
26.688 16.2979 li
26.6348 16.3379 26.604 16.3628 26.5952 16.3721 cv
26.4282 16.5391 li
26.2612 16.707 li
26.2051 16.7632 li
26.2041 16.9351 li
26.2041 17.9141 26.4951 19.1401 26.8179 19.4932 cv
27.2271 19.9761 li
27.229 19.979 27.2979 20.0352 27.4312 20.1431 cv
27.5791 20.2642 li
27.4312 20.3662 li
27.2642 20.3472 li
26.9111 20.3101 li
26.5952 20.2549 li
26.4092 20.2168 li
26.2241 21.5552 li
25.9629 21.5552 li
25.7778 20.2168 li
25.5918 20.2549 li
25.2759 20.3101 li
24.9229 20.3472 li
24.7559 20.3662 li
24.731 20.3672 li
24.6621 20.3672 24.605 20.3408 24.605 20.3091 cv
24.605 20.2759 24.6372 20.2319 24.6909 20.189 cv
24.96 19.9761 li
25.5791 19.4849 25.9829 18.2852 25.9829 16.9351 cv
25.9819 16.7632 li
25.9258 16.707 li
25.7588 16.5391 li
25.6758 16.4531 25.6211 16.397 25.5918 16.3721 cv
25.5762 16.3579 25.5449 16.333 25.499 16.2979 cv
25.5732 16.2319 25.6279 16.1821 25.666 16.1489 cv
25.7461 16.0791 25.8008 16.0229 25.834 15.9819 cv
25.9629 15.8149 li
26.0928 15.666 li
f
32.7988 15.666 mo
32.8569 15.7319 32.9009 15.7822 32.9302 15.8149 cv
33 15.895 33.0488 15.9512 33.0781 15.9819 cv
33.1011 16.0059 33.1572 16.062 33.2451 16.1489 cv
33.2788 16.1821 33.3281 16.2319 33.394 16.2979 cv
33.3408 16.3379 33.3101 16.3628 33.3008 16.3721 cv
33.1338 16.5391 li
32.9111 16.7632 li
32.9302 17.022 li
32.9668 17.709 li
33.022 18.7339 33.4189 19.5591 34.1372 20.1431 cv
34.2852 20.2642 li
34.1372 20.3662 li
33.9692 20.3472 li
33.6172 20.3101 li
33.3008 20.2549 li
33.1152 20.2168 li
32.9302 21.5552 li
32.6689 21.5552 li
32.4648 20.1621 li
32.126 20.2378 32.1162 20.2988 32.001 20.3101 cv
31.6289 20.3472 li
31.4619 20.3662 li
31.4429 20.3672 li
31.377 20.3672 31.3301 20.3418 31.3301 20.3062 cv
31.3301 20.27 31.3579 20.2271 31.4058 20.189 cv
31.6851 19.9761 li
31.9258 19.791 31.9961 19.6899 32.335 19.0288 cv
32.4692 18.7681 32.5391 18.5581 32.54 18.415 cv
32.541 18.0249 32.5908 17.709 32.6509 17.709 cv
32.688 17.022 li
32.707 16.7632 li
32.6318 16.707 li
32.4839 16.5391 li
32.2979 16.3721 li
32.2241 16.2979 li
32.2891 16.2319 32.3389 16.1821 32.3721 16.1489 cv
32.6289 15.894 32.6548 15.8662 32.7988 15.666 cv
f
18.8862 12.6748 mo
18.96 12.9541 li
19.0269 13.2051 19.0771 13.4028 19.1079 13.5488 cv
19.3428 14.6089 19.54 14.8882 20.0562 14.8882 cv
20.3501 14.8882 20.5952 14.7241 20.6689 14.4771 cv
20.7798 14.106 li
20.8071 14.019 20.8711 13.9702 20.959 13.9702 cv
21.1602 13.9702 21.2539 14.1792 21.2632 14.644 cv
21.2671 14.7778 21.3101 15.082 21.394 15.5552 cv
21.4429 15.835 21.4678 16.106 21.4678 16.3672 cv
21.4678 16.603 21.4492 16.7031 21.356 16.9482 cv
21.4209 17.312 21.4692 17.8032 21.4692 18.0859 cv
21.4692 18.5459 21.3828 18.9722 21.2451 19.1958 cv
21.3232 19.5039 21.3389 19.627 21.3389 19.895 cv
21.3389 20.0928 21.3198 20.3081 21.2822 20.5151 cv
21.2012 20.9609 21.1841 21.0742 21.1841 21.1572 cv
21.1841 21.2422 21.1982 21.3262 21.2271 21.4058 cv
21.2632 21.5122 21.2822 21.5879 21.2822 21.6289 cv
21.2822 21.6812 21.2568 21.7222 21.2271 21.7222 cv
20.855 21.5732 li
20.4458 21.3501 li
20.314 21.2778 20.2231 21.207 20.019 21.0161 cv
19.6582 21.3418 19.5518 21.3901 18.6069 21.6479 cv
18.4189 21.6992 18.2788 21.7559 18.1982 21.8149 cv
18.082 21.8999 17.9951 21.9458 17.9512 21.9458 cv
17.792 21.9458 17.7148 21.688 17.7148 21.1582 cv
17.7148 20.7651 17.7549 20.397 17.8271 20.124 cv
17.5488 20.0171 17.313 19.957 17.1631 19.957 cv
17.1348 19.957 17.04 19.9702 16.8799 19.9951 cv
16.811 20 li
16.7559 20 16.71 19.9189 16.71 19.8218 cv
16.71 19.75 16.7612 19.5698 16.8242 19.4189 cv
17.0098 18.9731 li
17.0771 18.811 17.23 18.626 17.4551 18.4341 cv
17.6392 18.2769 17.8062 18.1812 17.938 18.1558 cv
18.6069 18.0249 li
19.0049 17.9482 19.2412 17.7378 19.2412 17.4619 cv
19.2412 17.1948 19.062 17.0132 18.6631 16.874 cv
17.8638 16.5952 li
17.6582 16.5229 17.415 16.4048 17.1392 16.2422 cv
16.6958 15.98 16.6221 15.9448 16.5161 15.9448 cv
16.356 15.9448 16.2651 16.064 16.2651 16.2739 cv
16.2651 16.605 16.479 16.8369 16.7852 16.8369 cv
16.8481 16.8369 16.9121 16.8242 16.9722 16.7988 cv
17.062 16.7632 17.127 16.7432 17.1631 16.7432 cv
17.2471 16.7432 17.293 16.793 17.293 16.8838 cv
17.2881 16.9658 li
17.251 17.2822 li
17.2192 17.5518 17.0449 17.8789 16.6558 18.397 cv
16.4888 18.6201 li
16.3379 19.2178 15.9678 19.7612 15.4868 20.0879 cv
15.3662 20.1689 15.2969 20.2192 15.2822 20.2358 cv
15.2661 20.2529 15.2158 20.3398 15.1328 20.4961 cv
15.0962 20.5659 14.9712 20.7158 14.7622 20.9419 cv
14.604 21.1118 14.4492 21.2549 14.2969 21.3691 cv
14.0898 21.5259 13.9639 21.6392 13.9258 21.7041 cv
13.7402 22.02 li
13.7061 22.0771 13.6499 22.1128 13.5908 22.1128 cv
13.4268 22.1128 13.2749 21.9409 13.1831 21.6479 cv
13.1138 21.4312 13.0542 21.3691 12.9131 21.3691 cv
12.8408 21.3691 12.7319 21.3882 12.5889 21.4248 cv
12.3291 21.4619 li
11.6592 21.4619 li
11.3252 21.4619 10.853 21.5479 10.6382 21.6479 cv
10.5518 21.688 10.4858 21.708 10.4458 21.708 cv
10.3989 21.708 10.3721 21.6831 10.3218 21.5918 cv
10.2891 21.5308 10.2808 21.502 10.2808 21.4438 cv
10.2808 21.104 10.522 20.4648 10.8418 19.957 cv
11.0449 19.6362 11.1079 19.561 11.3428 19.3628 cv
11.2681 19.0479 11.0659 18.8018 10.8242 18.731 cv
10.5078 18.6392 li
10.4629 18.626 10.4331 18.5889 10.4331 18.5479 cv
10.4331 18.4521 10.584 18.3188 10.8608 18.1738 cv
11.2241 17.9829 11.5889 17.877 11.8809 17.877 cv
12.189 17.877 12.4878 17.999 12.8301 18.2671 cv
13.334 18.6621 13.4692 18.7319 13.7148 18.7319 cv
14.1118 18.7319 14.4902 18.3701 14.4902 17.9888 cv
14.4902 17.7339 14.354 17.4619 14 17.0039 cv
13.4819 16.334 13.3271 15.9858 13.3271 15.4941 cv
13.3271 15.188 13.4209 14.7979 13.5352 14.626 cv
13.7222 14.3481 li
13.7622 14.2871 13.7832 14.2241 13.7832 14.1689 cv
13.7832 14.0449 13.6411 13.9561 13.4468 13.9561 cv
13.1538 13.9561 12.5908 14.165 12.1421 14.4399 cv
11.9199 14.5771 11.7681 14.7368 11.7681 14.8359 cv
11.7681 14.894 11.7969 14.9482 11.8452 14.979 cv
12.0498 15.1089 li
12.0742 15.125 12.0889 15.1538 12.0889 15.1851 cv
12.0889 15.2129 12.0591 15.272 12.0132 15.332 cv
11.6411 15.8149 li
11.4492 16.064 11.1528 16.375 10.8608 16.6318 cv
10.7642 16.7178 10.7012 16.7798 10.6748 16.8179 cv
10.6729 16.8208 10.623 16.9141 10.5259 17.0972 cv
10.395 17.3452 10.043 17.7051 9.70898 17.9321 cv
9.5708 18.0259 9.48389 18.0952 9.44922 18.1372 cv
9.42188 18.1689 9.37207 18.2559 9.2998 18.397 cv
9.25391 18.4888 9.17285 18.6191 9.05908 18.7871 cv
8.87695 19.0562 8.72705 19.249 8.61279 19.3628 cv
8.09277 19.8828 li
7.93311 20.043 7.79199 20.354 7.57324 21.0352 cv
7.43994 21.4458 7.32178 21.6851 7.25391 21.6851 cv
7.22314 21.6851 7.16992 21.645 7.10791 21.5732 cv
6.74023 21.1519 6.42285 20.9028 6.25684 20.9028 cv
6.21924 20.9028 6.14795 20.936 6.0498 20.998 cv
5.91406 21.083 5.74414 21.146 5.54785 21.1831 cv
4.85986 21.313 li
4.3418 21.4111 4.13721 21.5229 3.83887 21.8711 cv
3.76807 21.9531 3.70898 22.001 3.67676 22.001 cv
3.62012 22.001 3.57813 21.9082 3.57813 21.7842 cv
3.59814 21.6108 li
3.69092 21.1089 li
3.78906 20.5742 3.91309 20.1738 4.06201 19.9019 cv
4.37695 19.3252 li
4.43896 19.2139 4.47119 19.1099 4.47119 19.0229 cv
4.47119 18.5952 4.02783 18.2051 3.48584 18.1558 cv
3.3501 18.1431 3.29688 18.1089 3.29688 18.0342 cv
3.29688 17.939 3.44922 17.7529 3.65283 17.5981 cv
4.0249 17.3159 4.51221 17.1138 4.82422 17.1138 cv
5.01221 17.1138 5.30322 17.1919 5.65918 17.3379 cv
6.06787 17.5049 li
6.22021 17.5669 6.35986 17.5991 6.48193 17.5991 cv
6.91504 17.5991 7.33398 17.2061 7.85107 16.3159 cv
8.08398 15.916 8.18604 15.625 8.18604 15.3628 cv
8.18604 14.8931 7.96289 14.6069 7.59619 14.6069 cv
7.31689 14.6069 7.01318 14.7412 6.79297 14.96 cv
6.60498 15.1479 6.50684 15.3442 6.50684 15.5352 cv
6.51416 15.7412 li
6.51611 15.7871 li
6.51611 15.9609 6.45801 16.0571 6.354 16.0571 cv
6.18018 16.0571 5.92285 15.8062 5.19482 14.9229 cv
4.65088 14.2642 4.52979 13.9819 4.50781 13.3252 cv
3.87695 12.521 3.72119 12.1812 3.72119 11.6089 cv
3.74609 11.2261 li
3.31104 10.7021 3.18701 10.416 3.18701 9.93311 cv
3.18701 9.75879 3.21484 9.65479 3.31885 9.44287 cv
3.09814 9.11914 3.02588 8.97217 2.96582 8.71924 cv
2.87305 8.32813 li
2.81006 8.06201 2.70996 7.83301 2.57617 7.64111 cv
2.40723 7.3999 2.39014 7.36816 2.39014 7.28613 cv
2.39014 7.06982 2.53809 6.98389 3.18799 6.82422 cv
3.16309 6.64307 3.1499 6.50488 3.1499 6.41211 cv
3.1499 6.30322 3.16406 6.19922 3.20801 5.96924 cv
3.33691 5.28223 li
3.39014 5.00391 3.41699 4.8042 3.41699 4.68604 cv
3.41699 4.55713 3.396 4.46582 3.28223 4.09277 cv
3.2168 3.88086 3.16016 3.73682 3.11523 3.66602 cv
3.05322 3.5708 3.00195 3.4541 3.00195 3.41113 cv
3.00195 3.34619 3.04785 3.30908 3.12988 3.30908 cv
3.31396 3.30908 3.80078 3.60303 4.30322 4.01904 cv
5.36914 4.90186 5.58887 5.25488 5.73389 6.32178 cv
5.74512 6.40576 5.76318 6.52881 5.79004 6.69385 cv
6.30078 7.0708 6.56885 7.52295 6.56885 8.00977 cv
6.56885 8.39404 6.43018 8.8418 6.19824 9.20215 cv
5.82617 9.77686 li
5.7168 9.94678 5.65918 10.1602 5.65918 10.3921 cv
5.65918 10.7432 5.75977 11.062 6.01221 11.5049 cv
6.29688 12.0049 6.53906 12.2119 6.83984 12.2119 cv
7.3291 12.2119 7.75879 11.3579 7.75879 10.3901 cv
7.75879 10.2598 li
7.75586 9.9248 li
7.75586 9.73682 7.76709 9.54883 7.7959 9.31299 cv
7.83008 9.02393 7.84912 8.84521 7.85107 8.7749 cv
7.87012 8.32813 li
7.87598 8.03516 li
7.87598 7.93115 7.81982 7.82617 7.68408 7.67822 cv
7.27588 7.23291 li
6.68506 6.58789 6.35986 5.98291 6.35986 5.52783 cv
6.35986 4.96484 6.76709 4.54102 7.30908 4.54102 cv
7.41699 4.54102 7.51514 4.55908 7.70215 4.61279 cv
7.70215 4.48682 li
7.70215 3.66797 7.87012 3.06201 8.09619 3.06201 cv
8.18506 3.08984 li
8.52002 3.38721 li
8.9292 3.64697 li
9.04004 3.75879 li
9.04004 3.52881 9.05176 3.50488 9.28223 3.23779 cv
9.33789 3.17383 9.42383 3.05615 9.54199 2.88574 cv
9.63623 2.74902 9.69824 2.65576 9.72705 2.60693 cv
9.75586 2.56006 9.78711 2.50391 9.8208 2.43896 cv
9.87012 2.34375 9.91895 2.30078 9.9751 2.30078 cv
10.0259 2.30078 10.0669 2.36914 10.1362 2.56982 cv
10.1802 2.69824 10.209 2.73096 10.5259 3.01514 cv
10.6382 3.11621 10.7139 3.19824 10.749 3.25684 cv
10.7798 3.30811 10.8301 3.43311 10.8979 3.62891 cv
10.9102 3.66211 10.9282 3.71094 10.9541 3.77686 cv
11.0918 3.60303 11.1592 3.54199 11.3252 3.44287 cv
11.604 3.27588 li
11.708 3.21289 11.7798 3.18018 11.811 3.18018 cv
11.834 3.18018 11.8691 3.2251 11.9009 3.29395 cv
11.9312 3.35986 11.98 3.45313 12.0498 3.57324 cv
12.2471 3.91797 12.313 4.08398 12.313 4.24512 cv
12.3091 4.42822 li
12.3091 4.65088 li
12.9189 4.8418 13.147 5.1582 13.147 5.81396 cv
13.147 6.28809 12.8989 6.83008 12.4209 7.3999 cv
12.1021 7.77979 12.0649 7.85498 12.0649 8.12109 cv
12.0649 9.49609 13.022 10.291 14.7061 10.3159 cv
15.9512 10.335 li
16.751 10.3472 17.228 10.4248 17.9751 10.6689 cv
18.8579 10.957 19.1152 11.022 19.3711 11.022 cv
19.457 11.022 19.541 10.9961 19.6108 10.9482 cv
19.6802 10.8989 19.7222 10.8379 19.7222 10.7822 cv
19.7222 10.522 19.2651 10.313 17.771 9.88916 cv
14.708 9.02002 13.4058 7.78809 13.4058 5.75781 cv
13.4058 4.18994 14.71 2.9751 16.396 2.9751 cv
16.939 2.9751 17.7749 3.11914 18.2539 3.29395 cv
19.0151 3.57324 li
19.1548 3.62402 19.2891 3.6499 19.415 3.6499 cv
19.6738 3.6499 19.8062 3.43408 19.814 2.99707 cv
19.8198 2.76221 19.873 2.68115 20.0259 2.68115 cv
20.2402 2.68115 20.5708 2.94922 20.873 3.36914 cv
21.1792 3.79297 21.375 4.26904 21.375 4.58789 cv
21.375 5.00977 21.1782 5.30518 20.7251 5.56104 cv
20.3081 6.19482 19.7949 6.48877 19.104 6.48877 cv
18.5679 6.48877 17.8062 6.18506 16.5449 5.46777 cv
16.104 5.2168 15.8799 5.13281 15.6489 5.13281 cv
15.3208 5.13281 15.1069 5.3252 15.1069 5.61719 cv
15.1069 5.88379 15.314 6.05713 15.8579 6.24805 cv
16.6602 6.52783 16.8579 6.63721 17.1768 6.97217 cv
18.123 7.13623 18.5352 7.30078 19.1279 7.75293 cv
20.7578 8.27002 21.7681 9.38086 21.7681 10.6572 cv
21.7681 11.897 20.9302 12.7881 19.7642 12.7881 cv
19.4868 12.7881 19.3159 12.7661 18.8862 12.6748 cv
true sop
0 0 0 1 nzopmsc
f
53.5488 12.6748 mo
53.624 12.9541 li
53.6909 13.2051 53.7402 13.4028 53.772 13.5488 cv
54.0068 14.6089 54.2041 14.8882 54.7202 14.8882 cv
55.0142 14.8882 55.2588 14.7241 55.333 14.4771 cv
55.4438 14.106 li
55.4702 14.019 55.5342 13.9712 55.6211 13.9712 cv
55.8242 13.9712 55.9312 14.1929 55.9458 14.644 cv
55.9512 14.8169 55.9888 15.1211 56.0571 15.5552 cv
56.1069 15.8682 56.1318 16.1558 56.1318 16.415 cv
56.1318 16.603 56.1079 16.7139 56.02 16.9482 cv
56.0571 17.1709 li
56.1191 17.5381 56.1362 17.6792 56.1362 17.8521 cv
56.1362 18.6489 56.0962 18.8838 55.9082 19.1958 cv
55.9849 19.5 56.0059 19.6431 56.0059 19.8618 cv
56.0059 20.001 55.9878 20.2021 55.9458 20.5151 cv
55.8711 21.0718 li
55.8901 21.4058 li
55.939 21.5288 55.9639 21.604 55.9639 21.6289 cv
55.9639 21.6812 55.9312 21.7222 55.8901 21.7222 cv
55.5181 21.5732 li
55.1089 21.3501 li
54.978 21.2778 54.8862 21.207 54.6831 21.0161 cv
54.3242 21.335 54.272 21.3638 53.8462 21.481 cv
53.23 21.6499 53.0029 21.728 52.8809 21.8149 cv
52.7612 21.8999 52.6709 21.9448 52.624 21.9448 cv
52.479 21.9448 52.3779 21.666 52.3779 21.2559 cv
52.3779 20.6621 52.4141 20.355 52.5088 20.124 cv
52.147 20.002 51.9648 19.957 51.833 19.957 cv
51.7832 19.957 51.7539 19.9609 51.561 19.9951 cv
51.478 20.002 li
51.4248 20.002 51.3931 19.9351 51.3931 19.8242 cv
51.3931 19.6431 51.521 19.2778 51.6919 18.9731 cv
51.9238 18.5581 52.3081 18.2129 52.6021 18.1558 cv
53.271 18.0249 li
53.668 17.9482 53.9038 17.7378 53.9038 17.4619 cv
53.9038 17.1948 53.73 17.0171 53.3262 16.874 cv
52.5459 16.5952 li
52.2832 16.501 52.0352 16.3828 51.8032 16.2422 cv
51.606 16.1221 51.4702 16.042 51.394 16 cv
51.3271 15.9639 51.2568 15.9438 51.1919 15.9438 cv
51.0269 15.9438 50.9268 16.064 50.9268 16.2622 cv
50.9268 16.5781 51.1709 16.8379 51.4658 16.8379 cv
51.5332 16.8379 51.5962 16.8252 51.6538 16.7988 cv
51.7388 16.7632 51.7969 16.7432 51.8252 16.7432 cv
51.9111 16.7432 51.9712 16.8252 51.9712 16.9409 cv
51.9712 17.272 51.7642 17.8418 51.543 18.1182 cv
51.3198 18.397 li
51.1528 18.6201 li
51.0908 19.0981 50.6221 19.7832 50.1499 20.0879 cv
50.0361 20.1602 49.9678 20.21 49.9448 20.2358 cv
49.9302 20.2529 49.8809 20.3398 49.7959 20.4961 cv
49.7588 20.5659 49.6338 20.7158 49.4248 20.9419 cv
49.2681 21.1108 49.1128 21.2549 48.9609 21.3691 cv
48.7529 21.5259 48.627 21.6392 48.5889 21.7041 cv
48.4028 22.02 li
48.3652 22.084 48.3179 22.1162 48.2588 22.1162 cv
48.0918 22.1162 47.939 21.9419 47.8462 21.6479 cv
47.7769 21.4312 47.7178 21.3691 47.5771 21.3691 cv
47.5049 21.3691 47.395 21.3882 47.252 21.4248 cv
46.9922 21.4619 li
46.3418 21.4619 li
45.9902 21.4619 45.519 21.5459 45.3018 21.6479 cv
45.2168 21.687 45.1509 21.708 45.1089 21.708 cv
45.0142 21.708 44.9648 21.6099 44.9648 21.4229 cv
44.9648 20.835 45.418 19.9399 46.0068 19.3628 cv
45.9199 19.02 45.7412 18.793 45.5049 18.731 cv
45.2949 18.6748 45.1831 18.644 45.1709 18.6392 cv
45.1372 18.6211 45.1162 18.5869 45.1162 18.5488 cv
45.1162 18.4302 45.2471 18.314 45.543 18.1738 cv
46.0698 17.9238 46.2251 17.877 46.519 17.877 cv
46.855 17.877 47.1411 17.9912 47.4932 18.2671 cv
47.9961 18.6602 48.1348 18.7339 48.3779 18.7339 cv
48.7739 18.7339 49.1528 18.3711 49.1528 17.9912 cv
49.1528 17.7319 49.0122 17.4482 48.6631 17.0039 cv
48.1689 16.3721 47.9941 15.959 47.9941 15.4238 cv
47.9941 15.064 48.0649 14.8691 48.3848 14.3481 cv
48.4351 14.2651 48.4619 14.1958 48.4619 14.1499 cv
48.4619 14.0469 48.2939 13.9561 48.106 13.9561 cv
47.9082 13.9561 47.6611 14.0269 47.3262 14.1802 cv
46.7671 14.436 46.4341 14.6758 46.4341 14.8218 cv
46.4341 14.8799 46.4692 14.938 46.5269 14.979 cv
46.7129 15.1089 li
46.7368 15.126 46.7529 15.1548 46.7529 15.187 cv
46.7529 15.2178 46.7178 15.2832 46.6758 15.332 cv
46.6392 15.374 46.5151 15.5352 46.3042 15.8149 cv
46.0439 16.1602 45.7969 16.4199 45.5249 16.6318 cv
45.4258 16.709 45.3628 16.772 45.3379 16.8179 cv
45.1899 17.0972 li
45.0659 17.3301 44.6992 17.7129 44.3911 17.9321 cv
44.251 18.0332 44.1641 18.1011 44.1309 18.1372 cv
44.0928 18.1792 44.0371 18.2661 43.9639 18.397 cv
43.7729 18.7378 43.4741 19.1582 43.2759 19.3628 cv
42.7749 19.8828 li
42.6309 20.0322 42.4302 20.4619 42.2358 21.0352 cv
42.084 21.4839 41.9858 21.6851 41.917 21.6851 cv
41.8872 21.6851 41.833 21.645 41.772 21.5732 cv
41.4121 21.1611 41.0879 20.9038 40.9302 20.9038 cv
40.8892 20.9038 40.814 20.936 40.7129 20.998 cv
40.5698 21.084 40.3999 21.147 40.2119 21.1831 cv
39.543 21.313 li
38.9839 21.4219 38.7612 21.542 38.502 21.8711 cv
38.438 21.9531 38.3838 22.001 38.355 22.001 cv
38.2891 22.001 38.2402 21.9048 38.2402 21.7729 cv
38.2612 21.6108 li
38.2651 21.5928 38.2959 21.4258 38.354 21.1089 cv
38.4502 20.582 38.585 20.1431 38.7251 19.9019 cv
39.0591 19.3252 li
39.1211 19.2212 39.1528 19.1172 39.1528 19.0249 cv
39.1528 18.5972 38.7539 18.251 38.1489 18.1558 cv
38.0249 18.1362 37.9629 18.0898 37.9629 18.019 cv
37.9629 17.9341 38.1069 17.77 38.335 17.5981 cv
38.73 17.2998 39.1641 17.1152 39.4731 17.1152 cv
39.6782 17.1152 39.9551 17.188 40.3232 17.3379 cv
40.731 17.5049 li
40.8828 17.5669 41.0239 17.5991 41.145 17.5991 cv
41.5781 17.5991 41.9971 17.2061 42.5151 16.3159 cv
42.749 15.9141 42.8491 15.626 42.8491 15.3599 cv
42.8491 14.8901 42.6299 14.6069 42.2651 14.6069 cv
41.9771 14.6069 41.7021 14.73 41.4751 14.96 cv
41.272 15.166 41.166 15.3691 41.166 15.5508 cv
41.1782 15.7412 li
41.1841 15.8398 li
41.1841 15.9912 41.1338 16.0571 41.022 16.0571 cv
40.8818 16.0571 40.7192 15.9209 40.397 15.5361 cv
40.2651 15.377 40.0908 15.1729 39.877 14.9229 cv
39.312 14.2632 39.1948 13.998 39.1709 13.3252 cv
38.54 12.521 38.3848 12.0762 38.3848 11.6089 cv
38.4092 11.2261 li
37.958 10.6841 37.8701 10.4741 37.8701 9.93896 cv
37.8701 9.7002 37.8838 9.63623 37.9819 9.44287 cv
37.7612 9.11914 37.689 8.97217 37.6299 8.71924 cv
37.5371 8.32813 li
37.4731 8.06201 37.375 7.83594 37.2388 7.64111 cv
37.0718 7.40186 37.0532 7.36719 37.0532 7.29688 cv
37.0532 7.10107 37.2378 6.97705 37.7041 6.86084 cv
37.8521 6.82422 li
37.8271 6.64307 37.814 6.50488 37.814 6.41211 cv
37.814 6.30322 37.8281 6.19922 37.8711 5.96924 cv
38 5.28223 li
38.0518 5.01318 38.0771 4.80811 38.0771 4.67188 cv
38.0771 4.51221 38.0518 4.38477 37.9639 4.09277 cv
37.9058 3.90283 37.8428 3.75879 37.7778 3.66602 cv
37.7061 3.56201 37.666 3.47705 37.666 3.4209 cv
37.666 3.35693 37.729 3.30811 37.813 3.30811 cv
37.8579 3.30811 37.937 3.33301 38 3.36914 cv
38.6279 3.71094 39.312 4.25391 39.8032 4.79883 cv
40.2231 5.26611 40.3569 5.65576 40.4531 6.69385 cv
41.0229 7.11914 41.2349 7.50195 41.2349 8.104 cv
41.2349 8.46289 41.1182 8.80713 40.8618 9.20215 cv
40.6348 9.5498 40.5112 9.74219 40.4902 9.77686 cv
40.3799 9.96289 40.3218 10.1812 40.3218 10.4072 cv
40.3218 10.7432 40.4238 11.0581 40.6758 11.5049 cv
40.9531 11.9971 41.2021 12.2119 41.498 12.2119 cv
41.9839 12.2119 42.4258 11.3701 42.4258 10.4419 cv
42.4219 10.2598 li
42.4219 9.75879 li
42.478 9.31299 li
42.5151 8.7749 li
42.5518 8.32813 li
42.5659 8.08008 li
42.5659 7.896 42.5278 7.84424 41.957 7.23291 cv
41.3262 6.55615 41.0269 5.98682 41.0269 5.45898 cv
41.0269 4.95898 41.458 4.54102 41.9731 4.54102 cv
42.0811 4.54102 42.1782 4.55908 42.3662 4.61279 cv
42.3662 4.39014 li
42.3848 4 li
42.4961 3.51807 li
42.585 3.13184 42.626 3.06104 42.7588 3.06104 cv
42.8491 3.08984 li
43.1831 3.38721 li
43.5918 3.64697 li
43.7041 3.75879 li
43.729 3.52686 43.751 3.47998 43.9448 3.23779 cv
44.042 3.11816 44.1289 3 44.2051 2.88574 cv
44.3911 2.60693 li
44.5029 2.43896 li
44.5771 2.3291 44.6089 2.29883 44.6572 2.29883 cv
44.707 2.29883 44.7422 2.36523 44.7998 2.56982 cv
44.8242 2.65479 44.8818 2.74023 44.9668 2.81104 cv
45.208 3.01514 li
45.4048 3.18213 45.5361 3.42578 45.6172 3.77686 cv
45.7642 3.59277 45.835 3.52881 45.9878 3.44287 cv
46.2861 3.27588 li
46.395 3.21387 46.4629 3.18213 46.4819 3.18213 cv
46.502 3.18213 46.5342 3.22607 46.5649 3.29395 cv
46.6079 3.39111 46.6582 3.48389 46.7129 3.57324 cv
46.9541 3.95801 46.9741 4.01221 46.9741 4.27197 cv
46.9731 4.42822 li
46.9731 4.65088 li
47.5762 4.81592 47.8101 5.14014 47.8101 5.80811 cv
47.8101 6.30713 47.5811 6.82324 47.103 7.3999 cv
46.7861 7.78223 46.731 7.8999 46.731 8.18604 cv
46.731 9.49805 47.7192 10.291 49.3882 10.3159 cv
50.6138 10.335 li
51.415 10.3472 51.9028 10.4268 52.6392 10.6689 cv
53.499 10.9521 53.7788 11.022 54.04 11.022 cv
54.229 11.022 54.3862 10.917 54.3862 10.791 cv
54.3862 10.521 53.936 10.313 52.4351 9.88916 cv
49.376 9.02393 48.0688 7.78809 48.0688 5.75879 cv
48.0688 4.18896 49.3779 2.97607 51.0742 2.97607 cv
51.6079 2.97607 52.4419 3.12012 52.918 3.29395 cv
53.6792 3.57324 li
53.8179 3.62402 53.9531 3.6499 54.0791 3.6499 cv
54.3408 3.6499 54.4399 3.48682 54.478 2.99707 cv
54.4951 2.77783 54.5649 2.68115 54.7051 2.68115 cv
54.8999 2.68115 55.2798 2.98779 55.5552 3.36914 cv
55.8379 3.75879 56.0391 4.27686 56.0391 4.61523 cv
56.0391 5.00977 55.8311 5.31006 55.3892 5.56104 cv
54.9722 6.19482 54.459 6.48877 53.7681 6.48877 cv
53.2402 6.48877 52.3428 6.13086 51.209 5.46777 cv
50.7642 5.20801 50.5669 5.13281 50.3198 5.13281 cv
49.9849 5.13281 49.77 5.32178 49.77 5.61719 cv
49.77 5.88477 49.9692 6.05176 50.521 6.24805 cv
51.3999 6.56006 51.5889 6.66406 51.8408 6.97217 cv
52.7871 7.13623 53.1982 7.30078 53.791 7.75293 cv
55.4868 8.29688 56.4302 9.34424 56.4302 10.6841 cv
56.4302 11.9058 55.6021 12.7871 54.4512 12.7871 cv
54.145 12.7871 53.9858 12.7671 53.5488 12.6748 cv
f
19.2388 47.7471 mo
19.4009 48.1582 19.4561 48.3584 19.48 48.6211 cv
19.5171 49.4014 li
19.5459 50.1816 19.8062 50.5713 20.2969 50.5713 cv
20.4761 50.5713 20.623 50.5244 20.7061 50.4424 cv
20.9111 50.2373 li
20.9922 50.2129 li
21.1221 50.2129 21.1929 50.2979 21.1929 50.4551 cv
21.1709 50.7568 li
21.1558 50.8926 21.1812 51.1807 21.2451 51.6113 cv
21.2822 51.8643 21.3008 52.1152 21.3008 52.3613 cv
21.3008 52.7568 21.2729 52.9092 21.1338 53.2646 cv
21.2632 53.6299 21.3379 54.042 21.3379 54.3857 cv
21.3379 54.791 21.271 55.0645 21.1152 55.29 cv
21.189 55.6104 21.208 55.7402 21.208 55.9209 cv
21.208 56.1055 21.1831 56.3408 21.1338 56.627 cv
21.0669 57.0146 21.042 57.3154 21.0591 57.5186 cv
21.061 57.5664 li
21.061 57.6826 21.0249 57.7422 20.9531 57.7422 cv
20.8828 57.7422 20.7988 57.6865 20.7251 57.5928 cv
20.6108 57.4482 20.5381 57.3945 20.4521 57.3945 cv
20.3242 57.3945 20.2842 57.4629 20.0928 58.0195 cv
20.0352 58.1924 19.8828 58.4248 19.647 58.708 cv
19.4619 58.9287 19.3481 59.1133 19.313 59.2471 cv
19.2529 59.4688 19.2168 59.5996 19.2021 59.6357 cv
19.1812 59.6885 19.1382 59.7227 19.0898 59.7285 cv
19.0659 59.7314 li
18.7612 59.7314 18.4092 59.0752 18.0498 57.834 cv
17.9492 57.4863 17.8188 57.3291 17.6299 57.3291 cv
17.4961 57.3291 17.3579 57.418 17.3071 57.5371 cv
17.1948 57.7969 li
17.1758 57.8428 17.1382 57.8721 17.0981 57.8721 cv
16.9492 57.8721 16.7231 57.6025 16.582 57.2588 cv
16.4668 56.9756 16.4009 56.667 16.4009 56.4053 cv
16.4009 55.8232 16.8301 55.3877 18.124 54.6582 cv
18.687 54.3408 18.9048 53.9385 18.9048 53.209 cv
18.9048 52.6328 18.7319 52.3027 18.2358 51.9268 cv
17.8442 51.6309 17.6162 51.5176 17.4072 51.5176 cv
17.2319 51.5176 17.0952 51.6348 17.0952 51.7842 cv
17.0952 51.958 17.1938 52.0654 17.437 52.1504 cv
17.7231 52.252 17.8481 52.3516 17.8481 52.4814 cv
17.8481 52.5967 17.7271 52.8516 17.5298 53.1533 cv
17.3198 53.4736 17.228 53.5684 16.936 53.7666 cv
16.8481 54.2783 16.6069 54.6055 16.0439 54.9736 cv
15.9312 55.293 15.8691 55.4082 15.6719 55.6611 cv
15.2822 56.1621 li
15.1602 56.3203 15.0229 56.6025 15.0039 56.7393 cv
14.9629 57.0234 14.936 57.0732 14.8271 57.0732 cv
14.6802 57.0732 14.377 56.8105 14.0742 56.4229 cv
13.895 56.1924 13.8521 56.084 13.833 55.8096 cv
13.6392 55.9609 13.5791 55.9824 13.2012 56.0332 cv
12.9751 56.0635 12.8062 56.1074 12.7002 56.1621 cv
12.4141 56.3135 12.3218 56.3535 12.269 56.3535 cv
12.1929 56.3535 12.167 56.3135 12.1611 56.1807 cv
12.1421 55.7725 li
12.1421 55.2109 12.3628 54.5557 12.7002 54.1191 cv
12.375 53.8369 12.0498 53.665 11.79 53.6357 cv
11.6802 53.624 11.6509 53.6113 11.6509 53.5703 cv
11.6509 53.5 11.7241 53.3574 11.8271 53.2275 cv
11.9648 53.0518 12.0771 52.9277 12.1611 52.8564 cv
12.4248 52.6309 12.8809 52.4658 13.2378 52.4658 cv
13.48 52.4658 13.8359 52.5537 14.2969 52.7256 cv
14.4619 52.7871 14.6118 52.8193 14.7402 52.8193 cv
14.9448 52.8193 15.061 52.6865 15.061 52.4521 cv
15.061 52.1162 14.894 51.5859 14.52 50.7383 cv
14.2671 50.1641 14.1519 49.7793 14.1519 49.5107 cv
14.1519 48.8682 14.4561 48.2002 14.8359 48.0078 cv
14.6558 47.917 14.5771 47.8965 14.4219 47.8965 cv
14.2349 47.8965 14.0889 47.9434 13.8511 48.082 cv
13.5752 48.2432 13.4229 48.3838 13.4229 48.4785 cv
13.4229 48.5137 13.479 48.5742 13.5732 48.6387 cv
13.7178 48.7412 13.7422 48.7793 13.7422 48.9141 cv
13.7422 49.373 13.3608 49.9873 12.8301 50.3857 cv
12.7129 51.0361 12.4131 51.4297 11.8271 51.7041 cv
11.75 52.0566 11.7012 52.1611 11.418 52.5586 cv
10.9331 53.2422 10.8188 53.4551 10.731 53.8408 cv
10.686 54.0391 10.6401 54.123 10.5781 54.123 cv
10.499 54.123 10.335 54 10.1548 53.8027 cv
9.99902 53.6338 9.8999 53.5156 9.85791 53.4512 cv
9.77783 53.3281 9.73682 53.208 9.65381 52.8564 cv
9.52002 52.8936 9.48291 52.9014 9.38916 52.9014 cv
9.11523 52.8926 li
8.93018 52.8877 li
8.52197 52.8877 8.08984 52.9814 7.87012 53.1162 cv
7.79004 53.165 7.73389 53.1904 7.70898 53.1904 cv
7.58789 53.1904 7.49121 52.9385 7.49121 52.626 cv
7.49121 51.9551 7.67822 51.4023 8.11084 50.7939 cv
7.95313 50.6611 7.8999 50.6113 7.75879 50.46 cv
7.69678 50.3936 7.64697 50.3496 7.60986 50.3291 cv
7.40479 50.2178 li
7.33594 50.1807 7.29395 50.1338 7.29395 50.0967 cv
7.29395 49.998 7.56494 49.7402 7.88916 49.5313 cv
8.24609 49.2998 8.52783 49.1963 8.78809 49.1963 cv
9.09277 49.1963 9.25488 49.2744 9.63477 49.6055 cv
9.89795 49.835 10.0781 49.9414 10.2061 49.9414 cv
10.2959 49.9414 10.394 49.8779 10.4712 49.7725 cv
10.5322 49.6865 10.5659 49.5898 10.5659 49.4951 cv
10.5659 49.1396 10.1421 48.54 9.67188 48.2305 cv
9.32178 48 8.93799 47.877 8.56494 47.877 cv
8.04785 47.877 7.60303 48.1338 7.40479 48.5459 cv
7.20117 48.9736 li
7.15283 49.0742 7.09277 49.125 7.02393 49.125 cv
6.90381 49.125 6.84277 49.0703 6.4209 48.583 cv
5.93799 48.0264 li
5.79004 47.8555 5.68896 47.6904 5.64111 47.543 cv
5.59717 47.4072 5.56494 47.3252 5.54785 47.3018 cv
5.53076 47.2783 5.46777 47.2275 5.36182 47.1533 cv
4.99023 46.8887 4.71924 46.3672 4.56299 45.6123 cv
4.55176 45.5566 4.53418 45.4756 4.50781 45.3701 cv
4.05322 44.8135 3.78076 44.1221 3.78076 43.5234 cv
3.78076 43.4443 3.78613 43.4102 3.81982 43.2715 cv
3.55713 43.0029 3.52588 42.9404 3.31885 42.2305 cv
3.1709 41.7236 3.07617 41.5078 2.89209 41.2637 cv
2.84277 41.2002 2.81689 41.1494 2.81689 41.1201 cv
2.81689 41.0195 2.97314 40.9365 3.24414 40.8926 cv
3.49902 40.8506 3.51514 40.8486 3.61816 40.8486 cv
3.98779 40.874 li
3.96484 40.3662 li
3.96484 40.0674 3.98779 39.8721 4.06201 39.5176 cv
4.09912 39.3408 4.11816 39.2119 4.11816 39.1299 cv
4.11816 39.0977 4.10498 38.9912 4.08008 38.8135 cv
4.06104 38.6738 4.04199 38.5801 4.0249 38.5342 cv
3.99805 38.4639 3.98486 38.4102 3.98486 38.375 cv
3.98486 38.3174 4.0249 38.2842 4.09717 38.2842 cv
4.14893 38.2842 4.22607 38.3105 4.34082 38.3662 cv
4.66406 38.5254 4.93213 38.6865 5.13916 38.8486 cv
5.77881 39.3496 6.2832 40.1221 6.2832 40.5996 cv
6.27197 40.7441 li
6.24805 40.9111 6.23486 41.0029 6.23486 41.0176 cv
6.23486 41.0986 6.28076 41.2051 6.36621 41.3203 cv
6.56885 41.5986 li
6.75098 41.8447 6.87012 42.1338 6.87012 42.3281 cv
6.87012 42.501 6.83203 42.5771 6.5332 43.0107 cv
6.30908 43.335 6.21582 43.5771 6.21582 43.8418 cv
6.21582 44.1758 6.3501 44.5977 6.58789 45.0166 cv
6.80811 45.4033 7.06104 45.6143 7.30322 45.6143 cv
7.71777 45.6143 7.89697 45.2471 7.96289 44.2549 cv
7.99707 43.7383 8.0459 43.2744 8.11084 42.8428 cv
8.12988 42.5889 li
8.12988 42.4736 8.09619 42.4072 7.94385 42.2305 cv
7.38721 41.5801 li
6.85498 40.96 6.69482 40.6396 6.69482 40.1953 cv
6.69482 39.6836 7.03076 39.3301 7.51807 39.3301 cv
7.74023 39.3506 li
7.73779 39.2051 li
7.73779 39.0879 7.76904 38.9189 7.83301 38.7012 cv
7.94922 38.3008 8.09717 37.9951 8.17383 37.9951 cv
8.19824 37.9951 8.25977 38.0273 8.35303 38.0879 cv
8.38281 38.1074 8.49512 38.1514 8.68701 38.2178 cv
8.79199 38.2539 8.86621 38.291 9.05908 38.4033 cv
9.14795 38.082 9.21387 37.9355 9.35596 37.7539 cv
9.59619 37.4443 9.86816 37.1963 9.96484 37.1963 cv
10.022 37.1963 10.1309 37.2764 10.2661 37.4189 cv
10.6191 37.791 li
10.6782 37.8525 10.7471 37.9717 10.8242 38.1426 cv
10.8979 38.3105 li
10.9971 38.2539 11.0708 38.21 11.1211 38.1807 cv
11.2661 38.0938 11.3662 38.0381 11.418 38.0137 cv
11.644 37.9082 11.7622 37.8516 11.771 37.8467 cv
11.8672 37.7842 11.9341 37.751 11.9619 37.751 cv
12.0239 37.751 12.0601 37.8623 12.1982 38.4775 cv
12.293 38.8994 12.3071 38.9883 12.3291 39.2959 cv
12.9219 39.3789 13.2012 39.7188 13.2012 40.3564 cv
13.2012 40.9551 12.9072 41.5488 12.2729 42.2305 cv
12.1001 42.416 12.0591 42.5029 12.0591 42.6758 cv
12.0591 44.3193 12.6299 44.8359 14.688 45.0537 cv
15.9521 45.1885 16.3271 45.2676 17.8462 45.7227 cv
18.645 45.9619 19.103 46.0635 19.3989 46.0635 cv
19.749 46.0635 19.9458 45.9346 19.9458 45.708 cv
19.9458 45.3652 19.6968 45.2549 18.2168 44.9424 cv
14.7749 44.2168 13.4238 43.041 13.4238 40.7734 cv
13.4238 39.1533 14.6348 37.9395 16.251 37.9395 cv
16.9619 37.9395 17.6001 38.1553 18.6069 38.7383 cv
19.542 39.2793 19.7339 39.3701 19.9492 39.3701 cv
20.1992 39.3701 20.2969 39.21 20.2969 38.8066 cv
20.2969 38.5479 20.377 38.4209 20.5391 38.4209 cv
20.687 38.4209 20.9131 38.5752 21.1152 38.8135 cv
21.4238 39.1758 21.542 39.3633 21.542 39.8672 cv
21.542 40.5381 21.1851 40.9785 20.4829 41.1719 cv
20.4092 41.2539 20.353 41.3154 20.3159 41.3574 cv
19.936 41.7881 19.6001 41.9326 18.9888 41.9326 cv
18.4619 41.9326 17.7969 41.7158 17.3442 41.3945 cv
16.4521 40.7627 li
16.0669 40.4902 15.7861 40.373 15.5171 40.373 cv
15.1372 40.373 14.9092 40.6016 14.9092 40.9824 cv
14.9092 41.3555 15.1558 41.6592 15.561 41.7842 cv
16.397 42.0449 li
16.6919 42.1367 16.834 42.1963 17.1948 42.3789 cv
17.4019 42.3477 17.4971 42.3389 17.6099 42.3389 cv
18.1309 42.3389 18.6909 42.4785 19.1831 42.7324 cv
19.3389 42.8115 19.4512 42.8623 19.5171 42.8809 cv
19.981 43.0107 li
21.0371 43.3057 21.897 44.4863 21.897 45.6367 cv
21.897 46.9521 21.0449 47.7666 19.6689 47.7666 cv
19.2388 47.7471 li
f
51.561 47.4688 mo
51.8838 47.8975 52.3398 48.1768 52.7139 48.1768 cv
52.8291 48.1768 53.0288 48.1465 53.2148 48.1006 cv
53.3149 48.0762 53.397 48.0635 53.4619 48.0635 cv
53.5518 48.0635 53.5889 48.0967 53.5889 48.1807 cv
53.5889 48.2451 53.5449 48.4033 53.4932 48.5283 cv
53.4351 48.6689 53.397 48.7813 53.3818 48.8623 cv
53.3081 49.252 li
53.1221 49.5869 li
52.8618 49.8281 li
52.7881 49.9033 li
52.7881 50.0703 li
52.7881 50.1543 li
52.7881 50.6074 52.6528 50.8652 52.2861 51.1104 cv
52.2559 51.1289 52.2129 51.1611 52.1558 51.2031 cv
52.1191 51.3516 li
52.0361 51.6963 51.9741 51.9141 51.9331 52.002 cv
51.8862 52.1006 51.7681 52.2754 51.5801 52.5215 cv
51.356 52.8164 51.21 53.0557 51.1162 53.2842 cv
51.04 53.4688 50.9819 53.5225 50.8599 53.5225 cv
50.6758 53.5225 50.4961 53.2949 50.4658 53.0234 cv
50.4229 53.0801 50.3921 53.1172 50.373 53.1348 cv
50.1499 53.2842 li
49.7959 53.5254 li
49.6411 53.6318 49.541 53.7061 49.5 53.748 cv
49.2949 53.9521 li
49.2588 53.9883 49.2212 54.0078 49.188 54.0078 cv
49.0952 54.0078 48.998 53.8486 48.9048 53.543 cv
48.7192 52.9297 li
48.6699 52.7656 48.644 52.5645 48.644 52.3311 cv
48.644 52.0234 48.665 51.9141 48.7749 51.667 cv
48.4028 51.707 48.2988 51.7266 48.106 51.7969 cv
48.0488 51.8184 47.9771 51.835 47.9448 51.835 cv
47.8818 51.835 47.8452 51.793 47.8452 51.7197 cv
47.8452 51.6777 47.8799 51.5508 47.9199 51.4443 cv
48.1621 50.8135 li
48.3501 50.3232 48.9541 49.8789 49.4341 49.8789 cv
49.5488 49.8789 49.708 49.9111 49.9092 49.9766 cv
50.0298 50.0156 50.127 50.0371 50.189 50.0371 cv
50.4048 50.0371 50.5771 49.8789 50.5771 49.6807 cv
50.5771 49.584 50.5112 49.4756 50.4282 49.4385 cv
50.397 49.4229 50.1738 49.3555 49.7598 49.2344 cv
49.4482 49.1416 49.2939 49.0273 48.9419 48.6211 cv
48.687 48.3262 48.5889 48.2432 48.4951 48.2432 cv
48.4238 48.2432 48.3848 48.2891 48.3848 48.374 cv
48.4028 48.6211 li
48.4102 48.7344 li
48.4102 49.251 48.2559 49.7441 47.8838 50.4219 cv
47.3628 51.3701 li
47.1162 51.8203 47.0098 52.1602 47.0098 52.5039 cv
47.0098 52.8779 47.1719 53.209 47.3818 53.2646 cv
47.6611 53.3389 li
47.6948 53.3486 47.728 53.3672 47.7529 53.3945 cv
47.7891 53.4316 47.8101 53.4707 47.8101 53.502 cv
47.8101 53.543 47.7759 53.6035 47.7168 53.6738 cv
47.6841 53.7109 47.5718 53.8535 47.3818 54.1006 cv
47.0601 54.5186 46.8599 54.6699 46.4712 54.7881 cv
46.2471 55.334 45.8818 55.6504 45.2271 55.8662 cv
45.1528 55.9951 li
44.9312 56.3848 44.4399 56.7402 44.127 56.7402 cv
44.0571 56.7393 li
44.0142 57.0791 43.772 57.4316 43.4058 57.6855 cv
43.1538 57.8623 43.0098 57.9668 42.979 58.002 cv
42.957 58.0264 42.9248 58.083 42.8872 58.1689 cv
42.8032 58.3525 42.7261 58.4297 42.6221 58.4297 cv
42.4229 58.4297 42.2588 58.2451 42.1431 57.8896 cv
42.0679 57.9395 42.0122 57.9756 41.9761 58.002 cv
41.7661 58.1504 41.6479 58.2314 41.623 58.2432 cv
41.5391 58.2842 41.3198 58.3467 40.9731 58.4287 cv
40.5181 58.5371 40.124 58.7285 40.0249 58.8926 cv
39.8579 59.1719 li
39.7822 59.2041 li
39.6909 59.2041 39.5869 59.0771 39.543 58.9121 cv
39.439 58.5264 39.374 58.126 39.374 57.8691 cv
39.374 57.209 39.5918 56.7793 40.2671 56.1074 cv
40.2651 55.9463 li
40.2651 54.9219 41.0479 54.2246 42.2002 54.2246 cv
42.3848 54.2314 li
43.0161 54.2676 li
43.0762 54.2695 li
43.417 54.2695 43.7319 54.1396 44.0752 53.8594 cv
44.5288 53.4873 44.6611 53.2588 44.6611 52.8418 cv
44.6611 52.7119 44.625 52.5596 44.4839 52.0938 cv
44.3911 51.7881 44.3462 51.5 44.3462 51.2207 cv
44.3462 50.4551 44.9092 49.501 45.6729 48.9736 cv
45.8701 48.8369 46.0161 48.6582 46.0161 48.5527 cv
46.0161 48.5088 45.9941 48.4746 45.9648 48.4746 cv
45.916 48.4746 45.832 48.5273 45.729 48.6211 cv
45.6392 48.7021 45.4888 48.7969 45.2832 48.8994 cv
44.9858 49.0479 li
44.6509 49.1777 li
44.5488 49.2178 44.4971 49.2744 44.4971 49.3447 cv
44.4971 49.3857 44.5122 49.4434 44.54 49.5117 cv
44.564 49.5742 44.5771 49.6211 44.5771 49.6494 cv
44.5771 49.6904 44.5449 49.7646 44.4839 49.8652 cv
44.2241 50.293 li
43.9692 50.7109 43.7861 50.8887 43.4619 51.0361 cv
43.2539 51.6475 42.9541 51.958 42.5151 52.0195 cv
42.165 52.7266 41.856 52.9727 41.2329 53.042 cv
41.147 53.3135 40.999 53.54 40.6758 53.8965 cv
40.5439 54.041 40.4629 54.1416 40.4351 54.1943 cv
40.29 54.4561 40.2769 54.4717 40.21 54.4717 cv
40.124 54.4717 39.9302 54.3447 39.7842 54.1943 cv
39.7168 54.124 39.6611 54.0488 39.6172 53.9697 cv
39.4492 53.6738 li
39.396 53.5781 39.3408 53.5352 39.27 53.5352 cv
39.1528 53.543 li
38.7441 53.5986 li
38.4868 53.6338 38.1221 53.8438 38 54.0264 cv
37.7778 54.3613 li
37.7549 54.3965 37.7212 54.417 37.689 54.417 cv
37.521 54.417 37.4199 54.0488 37.4199 53.4424 cv
37.4199 52.9092 37.5029 52.5527 37.6851 52.2988 cv
38.2051 51.5742 li
38.2778 51.4727 38.3169 51.374 38.3169 51.291 cv
38.3169 51.21 38.2842 51.126 38.2241 51.0537 cv
38.1138 50.9219 38.0078 50.8428 37.9258 50.8311 cv
37.5371 50.7764 li
37.4658 50.7646 37.438 50.749 37.438 50.7168 cv
37.438 50.6846 37.46 50.6387 37.499 50.5898 cv
37.6279 50.4287 37.7852 50.291 37.9639 50.1807 cv
38.4229 49.8994 38.7261 49.7891 39.0361 49.7891 cv
39.3501 49.7891 39.6929 49.9014 40.0068 50.1064 cv
40.5459 50.46 li
40.6221 50.5088 40.7119 50.5361 40.8052 50.5361 cv
41.0542 50.5361 41.2422 50.3877 41.4189 50.0508 cv
41.5889 49.7266 41.6641 49.4648 41.6641 49.1914 cv
41.6641 48.4922 41.1641 47.9893 40.4722 47.9893 cv
40.1499 47.9893 39.8198 48.1162 39.5059 48.3613 cv
39.4102 48.4346 39.3472 48.5049 39.3198 48.5654 cv
39.1709 48.8994 li
39.1362 48.9785 39.084 49.0293 39.0381 49.0293 cv
38.9438 49.0293 38.7339 48.7607 38.5581 48.416 cv
38.4658 48.2354 38.3789 48.0107 38.2979 47.7471 cv
38.187 47.3828 38.1401 47.1104 38.1401 46.8203 cv
38.168 46.3174 li
37.915 45.9229 37.8311 45.6357 37.8311 45.168 cv
37.8311 45 37.8579 44.8682 37.9639 44.5146 cv
37.8071 44.2559 37.7588 44.0645 37.7588 43.6865 cv
37.7778 43.4561 li
37.833 43.1963 li
37.8711 42.9727 li
37.6909 42.7393 37.6392 42.583 37.4619 41.7656 cv
37.3628 41.3057 37.2998 41.1035 37.2212 40.9863 cv
37.1841 40.9316 37.165 40.8926 37.165 40.875 cv
37.165 40.7646 37.4248 40.6689 37.7202 40.6689 cv
37.9819 40.6895 li
37.917 40.5156 37.9038 40.4502 37.9038 40.3135 cv
37.9038 40.085 37.9502 39.8301 38.0381 39.5742 cv
38.1348 39.291 38.1558 39.2119 38.1558 39.1191 cv
38.1558 38.9004 38.124 38.6738 38.0752 38.5518 cv
37.9258 38.1807 li
37.8931 38.0967 37.8789 38.041 37.8789 37.9893 cv
37.8789 37.9521 37.9028 37.9395 37.9712 37.9395 cv
38.3369 37.9395 39.0322 38.332 39.5801 38.8486 cv
40.1221 39.3623 40.2988 39.7764 40.2988 40.541 cv
40.2671 40.9492 li
40.7729 41.3906 40.9941 41.7578 40.9941 42.1572 cv
40.9941 42.4473 40.8989 42.6396 40.6201 42.918 cv
40.1191 43.415 40.0059 43.6738 40.0059 44.3154 cv
40.0059 45.3018 40.2998 45.835 40.8442 45.835 cv
41.3242 45.835 41.6929 45.3154 41.7529 44.5527 cv
41.8091 43.8467 li
41.8232 43.6641 41.854 43.4404 41.9019 43.1777 cv
41.9321 43.0098 41.958 42.7881 41.958 42.6934 cv
41.958 42.4424 41.7939 42.1289 41.3071 41.5596 cv
40.7861 40.9502 40.6089 40.623 40.6089 40.1445 cv
40.6089 39.5752 41.0039 39.1572 41.541 39.1572 cv
41.6729 39.1572 41.7412 39.1758 41.9019 39.2578 cv
41.9092 38.9346 41.9229 38.875 42.106 38.4219 cv
42.251 38.0635 42.4048 37.8086 42.478 37.8086 cv
42.502 37.8086 42.542 37.8359 42.5889 37.8828 cv
42.6689 37.9639 42.75 38.0322 42.8311 38.0879 cv
42.9448 38.167 43.0068 38.21 43.0161 38.2178 cv
43.0571 38.252 43.1128 38.3066 43.1831 38.3848 cv
43.2998 37.9688 43.418 37.7734 43.7598 37.4385 cv
44.019 37.1826 44.1162 37.1025 44.168 37.1025 cv
44.2061 37.1025 44.2539 37.1377 44.2979 37.1963 cv
44.521 37.4932 li
44.8369 37.8467 li
44.957 37.9805 45.001 38.0957 45.0601 38.4219 cv
45.2461 38.3105 li
45.543 38.1426 li
45.5972 38.1123 45.6719 38.0645 45.7661 37.9951 cv
45.8169 37.957 45.8589 37.9365 45.8838 37.9365 cv
45.9141 37.9365 45.9502 37.9912 45.9702 38.0693 cv
46.0811 38.4971 li
46.3232 38.9805 li
46.395 39.124 46.418 39.2363 46.418 39.459 cv
46.416 39.5742 li
46.541 39.5693 li
46.9058 39.5693 47.2222 40.0029 47.2222 40.502 cv
47.2222 41.1641 46.6948 42.0186 46.0068 42.4717 cv
45.9438 42.6953 45.9292 42.7861 45.9292 42.9648 cv
45.9292 44.4424 46.3179 44.7529 48.5889 45.0908 cv
49.1572 45.1758 49.666 45.2813 50.1118 45.4072 cv
50.1851 45.4268 50.6748 45.5889 51.5801 45.8896 cv
52.083 46.0566 52.4209 46.1309 52.6802 46.1309 cv
52.958 46.1309 53.1108 46.0518 53.1108 45.9072 cv
53.1108 45.6533 52.7378 45.4248 51.5991 44.9805 cv
49.9829 44.3477 li
48.3398 43.707 47.563 42.7031 47.563 41.2256 cv
47.563 39.5059 48.853 38.2158 50.5762 38.2158 cv
51.2251 38.2158 51.8579 38.3506 52.769 38.6816 cv
53.9429 39.1094 54.002 39.1289 54.1299 39.1289 cv
54.356 39.1289 54.48 38.9736 54.5151 38.6445 cv
54.5449 38.3682 54.6201 38.2549 54.7739 38.2549 cv
55.0029 38.2549 55.249 38.4658 55.4248 38.8135 cv
55.5791 39.1143 55.668 39.4668 55.668 39.7764 cv
55.668 40.3896 55.3442 40.792 54.7568 40.9121 cv
54.3638 41.4248 53.8672 41.6787 53.2612 41.6787 cv
52.521 41.6787 52.1538 41.5352 50.8931 40.7441 cv
50.4399 40.4609 50.248 40.3906 49.916 40.3906 cv
49.4731 40.3906 49.146 40.666 49.146 41.04 cv
49.146 41.3789 49.4199 41.6025 50.0381 41.7656 cv
50.4072 41.8633 50.46 41.8906 50.6509 42.082 cv
50.8008 42.0469 50.8672 42.0371 50.96 42.0371 cv
51.563 42.0371 52.3071 42.3613 52.936 42.8994 cv
54.082 43.2539 55.0991 44.4883 55.0991 45.5244 cv
55.0991 46.6709 54.106 47.6973 52.9961 47.6973 cv
52.6982 47.6973 52.1001 47.6016 51.561 47.4688 cv
f
20.7251 20.812 mo
20.6729 20.5889 20.6558 20.4741 20.6558 20.3638 cv
20.6689 20.2168 li
20.7251 19.9199 li
20.7441 19.6802 li
20.7441 19.4229 20.7002 19.2368 20.6128 19.1221 cv
20.3901 18.8242 li
20.3159 18.7251 20.2529 18.606 20.2051 18.4712 cv
20.1802 18.4028 20.167 18.3491 20.167 18.313 cv
20.167 18.229 20.2178 18.1768 20.3008 18.1768 cv
20.3521 18.1768 20.3711 18.187 20.5391 18.2852 cv
20.6108 18.3271 20.6729 18.3501 20.7212 18.3501 cv
20.8311 18.3501 20.8931 18.1689 20.8931 17.854 cv
20.8931 17.4961 20.8579 17.2969 20.7798 17.208 cv
20.502 16.8921 li
20.2612 16.688 li
20.2021 16.6382 20.1621 16.5742 20.1621 16.5259 cv
20.1621 16.4448 20.2241 16.3901 20.314 16.3901 cv
20.3979 16.3901 20.5742 16.4312 20.7251 16.4829 cv
20.8101 16.5029 li
20.8848 16.5029 20.915 16.458 20.915 16.3481 cv
20.9111 16.2798 li
20.855 15.8892 li
20.7441 15.481 li
20.708 15.3491 20.688 15.3271 20.604 15.3271 cv
20.5571 15.332 li
20.0928 15.4248 li
20.02 15.4321 li
19.4111 15.4321 18.7681 14.918 18.5698 14.2729 cv
18.1982 13.0659 li
18.084 12.6919 17.8062 12.3398 17.3071 11.9321 cv
17.1558 11.8091 17.0269 11.7378 16.936 11.728 cv
16.6011 11.6909 li
16.5391 11.6841 16.5 11.6479 16.5 11.5991 cv
16.5 11.521 16.5708 11.4858 16.731 11.4858 cv
17.3442 11.542 li
17.5659 11.562 17.9028 11.6499 18.3472 11.8018 cv
18.9019 11.9932 19.2769 12.0762 19.5928 12.0762 cv
20.521 12.0762 21.0781 11.5718 21.0781 10.7319 cv
21.0781 10.1572 20.7769 9.50781 20.3159 9.08984 cv
20.0562 8.854 19.7949 8.68018 19.7041 8.68018 cv
19.6509 8.68018 19.6089 8.72314 19.6089 8.77686 cv
19.6289 9.01611 li
19.6299 9.03711 li
19.6299 9.12988 19.5752 9.20215 19.5029 9.20215 cv
19.4092 9.20215 19.3042 9.08008 19.1831 8.83008 cv
18.8311 8.09912 18.2739 7.66406 17.6958 7.66406 cv
17.5991 7.66406 17.5288 7.70508 17.5288 7.76318 cv
17.5288 7.80078 17.561 7.89307 17.6221 8.03076 cv
17.771 8.36621 li
17.8101 8.4541 17.8311 8.51221 17.8311 8.53613 cv
17.8311 8.55908 17.7949 8.57813 17.752 8.57813 cv
17.666 8.57813 17.5298 8.50195 17.437 8.40283 cv
17.1582 8.10498 li
16.916 7.73389 li
16.7231 7.43701 16.5659 7.30322 16.1548 7.08398 cv
15.9238 6.96094 15.7759 6.88086 15.709 6.84277 cv
15.624 6.79395 15.5449 6.76807 15.479 6.76807 cv
15.4121 6.76807 15.3789 6.7998 15.3789 6.86377 cv
15.3789 6.9248 15.4028 6.99512 15.4492 7.06494 cv
15.5869 7.27783 15.6411 7.38379 15.6411 7.43799 cv
15.6411 7.49707 15.5972 7.54785 15.5449 7.54785 cv
15.4009 7.54785 15.1001 7.25684 14.8359 6.86084 cv
14.6182 6.53516 14.501 6.16895 14.501 5.81689 cv
14.501 5.01807 15.084 4.42676 15.873 4.42676 cv
16.2798 4.42676 16.7949 4.59912 17.27 4.89209 cv
18.1431 5.43115 li
18.4458 5.61816 18.8931 5.76514 19.1582 5.76514 cv
19.2759 5.76514 19.521 5.72314 19.7031 5.67188 cv
19.7842 5.64893 19.8589 5.61816 19.9258 5.5791 cv
19.978 5.54883 20.0142 5.50684 20.0142 5.47607 cv
20.0142 5.43701 19.9932 5.40381 19.9629 5.39404 cv
19.8521 5.35596 li
19.4429 5.28223 li
19.3369 5.26318 19.168 5.2002 18.9409 5.09619 cv
18.4512 4.87109 18.1411 4.71582 18.0132 4.63184 cv
17.707 4.43213 17.502 4.31299 17.3999 4.27881 cv
17.249 4.22803 17.1548 4.16016 17.1548 4.10205 cv
17.1548 4.04785 17.1841 4.02002 17.2378 4.02002 cv
17.291 4.02002 17.3599 4.0459 17.437 4.09277 cv
17.709 4.26318 17.9468 4.35303 18.124 4.35303 cv
18.9229 4.63184 li
19.3188 4.77002 19.8979 4.89209 20.1582 4.89209 cv
20.4951 4.89209 20.769 4.61621 20.769 4.27686 cv
20.769 4.05908 20.6392 3.73193 20.4458 3.46191 cv
20.4028 3.40088 20.3579 3.36719 20.3198 3.36719 cv
20.2461 3.36719 20.2061 3.41992 20.2061 3.51709 cv
20.2231 3.66602 li
20.252 3.88818 li
20.252 4.12793 20.0898 4.31787 19.8838 4.31787 cv
19.8081 4.31787 19.71 4.29883 19.5918 4.25977 cv
18.3838 3.87012 li
17.3721 3.54297 16.9038 3.44287 16.397 3.44287 cv
14.9512 3.44385 13.8511 4.43604 13.8511 5.74023 cv
13.8511 7.22021 14.8892 8.17285 17.4551 9.05322 cv
19.981 9.91895 20.335 10.1309 20.335 10.7798 cv
20.335 11.1528 19.957 11.4858 19.5352 11.4858 cv
19.3628 11.4858 19.2148 11.4741 19.0898 11.4492 cv
19.0039 11.4321 18.583 11.333 17.8271 11.1519 cv
17.0649 10.9692 16.3711 10.8911 15.5151 10.8911 cv
13.6919 10.8911 12.6821 11.2109 11.8081 12.062 cv
11.5898 12.2749 11.5161 12.3091 11.2651 12.3091 cv
11.1401 12.3042 li
10.8799 12.2852 li
10.8462 12.2852 li
10.627 12.2852 10.4668 12.3872 10.3218 12.6201 cv
10.126 12.9351 10.02 13.1021 10.0059 13.1211 cv
9.9541 13.1919 9.875 13.2329 9.79395 13.2329 cv
9.62695 13.2329 9.52588 13.106 9.33789 12.6572 cv
9.24609 12.439 9.11279 12.248 8.94824 12.1001 cv
8.57617 11.7651 li
8.51611 11.7109 8.48193 11.6592 8.48193 11.6221 cv
8.48193 11.5811 8.50781 11.521 8.55713 11.4492 cv
8.73389 11.1909 8.7959 11.0752 8.81689 10.9658 cv
8.86621 10.7192 8.87402 10.7061 8.97607 10.7061 cv
9.08984 10.7061 9.12402 10.8198 9.13281 11.2451 cv
9.13623 11.3682 9.18604 11.5381 9.28223 11.7471 cv
9.48584 12.1919 li
9.51221 12.25 9.57813 12.2871 9.65381 12.2871 cv
9.84619 12.2871 10.0898 11.835 10.1548 11.3569 cv
10.209 10.957 10.251 10.8359 10.334 10.8359 cv
10.3682 10.8359 10.3989 10.8491 10.415 10.874 cv
10.4341 10.8999 10.4902 11.0132 10.582 11.208 cv
10.6299 11.3101 10.7129 11.4058 10.8242 11.4858 cv
10.9312 11.5649 11.0068 11.6089 11.0469 11.6172 cv
11.0688 11.6191 li
11.2202 11.6191 11.271 11.521 11.3071 11.1699 cv
11.3252 10.9849 li
11.2881 10.7251 li
11.2612 10.5449 li
11.2612 10.4248 11.3032 10.353 11.3721 10.353 cv
11.4131 10.353 11.4629 10.3789 11.5112 10.4268 cv
11.6968 10.6138 li
11.8198 10.7368 11.9448 10.7998 12.0649 10.7998 cv
12.2192 10.7998 12.314 10.7368 12.314 10.6338 cv
12.314 10.5459 12.2788 10.457 12.1421 10.2041 cv
12.0132 9.96289 li
11.8628 9.68506 11.7451 9.57178 11.606 9.57178 cv
11.418 9.5918 li
11.1948 9.68506 li
11.1279 9.71191 11.0791 9.72705 11.0508 9.72705 cv
11.0161 9.72705 10.9912 9.69482 10.9912 9.65186 cv
10.9912 9.48584 11.1001 9.22412 11.3071 8.89502 cv
11.4541 8.66016 11.5562 8.15918 11.604 7.43701 cv
11.667 6.46777 11.7969 5.83887 11.9331 5.83887 cv
12.0249 5.83887 12.0601 5.91699 12.0601 6.12305 cv
12.0498 6.37793 li
12.043 6.55615 li
12.043 6.729 12.0811 6.87012 12.127 6.87012 cv
12.2861 6.87012 12.4751 6.63379 12.625 6.24805 cv
12.688 6.08789 12.7212 5.95898 12.7212 5.87012 cv
12.7002 5.78418 li
12.3291 5.09619 li
11.957 4.98486 li
11.8892 4.96484 11.8418 4.93408 11.8271 4.90088 cv
11.8271 4.4458 li
11.79 4.22314 li
11.7148 4.03711 li
11.623 3.83301 li
11.2158 4.05518 11.022 4.2002 10.8799 4.39014 cv
10.7339 4.58398 10.6509 4.6582 10.5791 4.6582 cv
10.5308 4.6582 10.4888 4.61279 10.4888 4.56104 cv
10.4888 4.51611 10.5078 4.41504 10.5449 4.25977 cv
10.5571 4.15479 li
10.5571 3.75684 10.314 3.36182 9.91309 3.10889 cv
9.80176 3.25684 li
9.67188 3.44287 li
9.44922 3.70313 li
9.37793 3.78516 9.31494 3.91211 9.26416 4.0752 cv
9.23779 4.15381 9.2251 4.2251 9.2251 4.28613 cv
9.22607 4.31592 li
9.22803 4.38379 li
9.22803 4.53711 9.21094 4.57715 9.14209 4.57715 cv
9.09619 4.55713 li
8.96582 4.37207 li
8.76123 4.14893 li
8.4458 3.94482 li
8.27881 3.81396 li
8.24609 3.88818 8.22119 3.94385 8.20508 3.98096 cv
8.14697 4.10986 8.11621 4.21094 8.11084 4.27881 cv
8.09277 4.57617 li
8.07422 4.89209 li
8.07617 4.9458 li
8.07617 5.10889 8.03711 5.17188 7.93896 5.17188 cv
7.90479 5.17188 7.81201 5.13184 7.72119 5.07813 cv
7.64014 5.02881 7.54492 5.00195 7.45117 5.00195 cv
7.16309 5.00195 6.97803 5.20215 6.97803 5.51611 cv
6.97803 5.88623 7.08594 6.24219 7.27588 6.48877 cv
7.51709 6.80518 li
7.58301 6.89111 7.70605 6.96191 7.71191 6.91699 cv
7.75879 6.52686 li
7.70215 6.21094 li
7.69092 6.06885 li
7.69092 5.94922 7.73291 5.87598 7.80176 5.87598 cv
7.90576 5.87598 7.96924 5.99023 8.03711 6.3042 cv
8.18506 6.99121 li
8.33398 7.86377 li
8.37402 8.09912 8.44922 8.34912 8.55713 8.60693 cv
8.7041 8.95703 8.81006 9.17578 8.87305 9.25781 cv
9.07813 9.52197 9.10205 9.55908 9.10205 9.61621 cv
9.10205 9.66211 9.06494 9.70313 9.02197 9.70313 cv
8.98193 9.70313 8.9248 9.68408 8.85498 9.64697 cv
8.79004 9.61377 8.71582 9.58887 8.63184 9.57324 cv
8.48584 9.55322 li
8.18799 9.55322 8.12598 9.80908 8.12598 11.0488 cv
8.12598 11.8062 8.28711 12.832 8.48291 13.3252 cv
8.87305 14.3101 li
8.93408 14.4658 8.96582 14.6221 8.96582 14.772 cv
8.96582 16.127 7.16895 18.2529 5.19482 19.2329 cv
4.46094 19.5972 4.22705 19.9448 4.17285 20.7559 cv
4.15381 20.998 li
4.45313 20.8428 4.57617 20.792 4.78613 20.7378 cv
5.33984 20.5942 5.4458 20.5239 5.52881 20.2549 cv
5.604 20.0132 li
5.63184 19.9219 5.67822 19.8892 6.10498 19.6602 cv
6.25195 19.582 6.354 19.498 6.40186 19.4189 cv
6.49707 19.2632 6.57422 19.1802 6.62402 19.1802 cv
6.66992 19.1802 6.69482 19.2002 6.69482 19.2388 cv
6.68115 19.3071 li
6.49512 19.8369 li
6.47314 19.9668 li
6.47314 20.3599 6.68896 20.6812 7.08984 20.8862 cv
7.15576 20.4551 7.2002 20.3091 7.33203 20.106 cv
7.66602 19.5859 li
7.79004 19.3931 7.84082 19.1582 7.84082 18.79 cv
7.84082 18.583 7.82422 18.3682 7.7959 18.2109 cv
7.78223 18.063 li
7.78223 17.9702 7.83203 17.9141 7.91406 17.9141 cv
7.979 17.9141 8.02979 17.937 8.03711 17.9702 cv
8.11084 18.3232 li
8.12695 18.3979 8.20313 18.4531 8.29297 18.4531 cv
8.47217 18.4531 8.7041 18.2222 8.94824 17.8018 cv
9.03809 17.646 9.08594 17.4771 9.08594 17.311 cv
9.05908 17.0591 li
9.00293 16.7808 li
8.99805 16.7271 li
8.99805 16.606 9.06592 16.52 9.16309 16.52 cv
9.20508 16.52 9.23877 16.5361 9.24512 16.5581 cv
9.35596 16.9849 li
9.39307 17.127 9.49219 17.2261 9.59619 17.2261 cv
9.72119 17.2261 9.93604 17.0132 10.062 16.7632 cv
10.1738 16.54 10.229 16.2891 10.229 16.002 cv
10.229 15.606 10.271 15.4922 10.415 15.4922 cv
10.4619 15.4922 10.5 15.5098 10.5078 15.5361 cv
10.582 15.7769 li
10.6089 15.8662 10.6631 15.9258 10.7148 15.9258 cv
10.792 15.9258 10.999 15.7002 11.1401 15.4619 cv
11.1758 15.3989 11.1948 15.3398 11.1948 15.2891 cv
11.1948 15.209 11.144 15.1309 11.0278 15.0342 cv
10.834 14.873 10.8232 14.8501 10.8232 14.605 cv
10.8232 14.373 10.8608 14.251 11.0278 13.957 cv
11.1172 13.7988 11.1982 13.6499 11.27 13.5112 cv
11.5049 13.0518 11.5869 12.9341 11.6738 12.9341 cv
11.7451 12.9341 11.8101 13.0122 11.8101 13.0972 cv
11.8101 13.146 11.7969 13.1982 11.771 13.251 cv
11.7212 13.354 11.6948 13.4292 11.6948 13.4722 cv
11.6948 13.5449 11.7568 13.605 11.834 13.605 cv
11.9189 13.605 12.0322 13.5659 12.1611 13.4932 cv
12.2109 13.4639 12.3848 13.396 12.6812 13.2881 cv
13.2939 13.0659 li
13.396 13.0278 13.522 13.0088 13.667 13.0088 cv
13.7798 13.0088 13.8911 13.022 14 13.0469 cv
14.2192 13.0972 14.3618 13.1221 14.4282 13.1221 cv
14.5962 13.1221 14.7451 12.9771 14.7451 12.812 cv
14.7451 12.688 14.6162 12.4448 14.4458 12.248 cv
14.3828 12.1748 14.3511 12.1172 14.3511 12.0791 cv
14.3721 12.0068 li
14.397 11.9609 14.4351 11.9321 14.4712 11.9321 cv
14.5962 11.9321 14.8901 12.2451 15.1519 12.6572 cv
16.751 15.1758 17.3252 15.7852 18.4028 16.1118 cv
19.4961 16.4438 19.7808 16.6992 19.7808 17.3501 cv
19.7808 17.7031 19.6001 18.1182 19.2021 18.6748 cv
18.394 19.8071 18.1982 20.2642 18.1982 21.0098 cv
18.1982 21.146 li
18.29 21.1069 18.3579 21.0762 18.4028 21.0542 cv
18.5552 20.9761 18.6538 20.9321 18.7002 20.9229 cv
19.1641 20.8301 li
19.3042 20.8032 19.4282 20.624 19.4282 20.4512 cv
19.4238 20.4028 li
19.3691 19.9951 li
19.3652 19.9409 li
19.3652 19.7959 19.438 19.6299 19.5361 19.5488 cv
19.5659 19.5239 19.6001 19.5098 19.6328 19.5098 cv
19.6851 19.5098 19.7471 19.5581 19.7778 19.623 cv
20.0752 20.2549 li
20.1968 20.5132 20.3389 20.6348 20.7251 20.812 cv
false sop
/1 
<<
/Name (PANTONE 109 CV)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0.0862745 0.941176 0 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
1 sep
f
5.74805 7.34424 mo
5.61279 7.34424 5.54395 7.46094 5.52881 7.71582 cv
5.49219 8.06787 li
5.44922 8.39795 5.4458 8.43213 5.4458 8.51807 cv
5.4458 8.78223 5.5249 8.979 5.63184 8.979 cv
5.75195 8.979 5.93799 8.75391 6.03076 8.49512 cv
6.08789 8.33789 6.11377 8.20215 6.11377 8.06104 cv
6.11377 7.93799 6.08398 7.79004 6.03076 7.64111 cv
5.96289 7.45215 5.85986 7.34424 5.74805 7.34424 cv
f
4.04297 4.4458 mo
4.0459 4.60693 li
4.0459 4.83691 3.99023 5.11279 3.80176 5.8208 cv
3.76611 5.95313 3.74609 6.0791 3.74609 6.15918 cv
3.74609 6.28418 3.79297 6.41895 3.89404 6.58203 cv
3.9541 6.6792 4.01221 6.74414 4.06201 6.76807 cv
4.28516 6.87891 li
4.32178 7.14014 li
4.31201 7.24121 4.33105 7.37988 4.37695 7.54785 cv
4.42822 7.73291 4.4541 7.91895 4.4541 8.104 cv
4.4541 8.25879 4.44092 8.31982 4.40576 8.31982 cv
4.33594 8.31982 4.21191 8.12891 4.09912 7.84521 cv
3.91992 7.396 3.75977 7.23096 3.50586 7.23096 cv
3.30322 7.23096 3.17188 7.26514 2.92822 7.38086 cv
2.98584 7.45313 3.02295 7.50293 3.04004 7.52979 cv
3.0542 7.55176 3.10986 7.6582 3.20801 7.84521 cv
3.46777 8.34717 li
3.64697 8.69482 3.75293 8.89307 3.7832 8.94189 cv
3.8501 9.04883 3.93896 9.13818 4.04297 9.20215 cv
4.0752 9.22119 4.1748 9.27686 4.34082 9.36914 cv
4.43018 9.41797 4.49316 9.48877 4.49316 9.54004 cv
4.49316 9.62305 4.42383 9.68506 4.33301 9.68506 cv
4.32178 9.68506 li
4.08008 9.64697 li
3.94482 9.63281 li
3.87207 9.63281 3.83789 9.69922 3.83789 9.83984 cv
3.83789 10.3428 4.23779 10.9229 4.93506 11.4312 cv
5.01807 11.4922 5.08496 11.5801 5.08496 11.6299 cv
5.08496 11.6919 5.02002 11.7471 4.94678 11.7471 cv
4.90381 11.7471 4.79492 11.7129 4.71191 11.6719 cv
4.65918 11.647 4.61523 11.6328 4.58301 11.6328 cv
4.49121 11.6328 4.43115 11.709 4.43115 11.8232 cv
4.43115 11.9541 4.53809 12.2178 4.76807 12.6572 cv
4.91895 12.9438 5.14209 13.1611 5.3999 13.269 cv
6.23486 13.623 li
6.27979 13.6421 6.31006 13.686 6.31006 13.7339 cv
6.31006 13.8008 6.26123 13.8569 6.19824 13.8652 cv
6.03076 13.8828 li
5.88281 13.9009 li
5.64111 13.8828 li
5.60498 13.8818 li
5.48877 13.8818 5.44189 13.9048 5.44189 13.9629 cv
5.44189 14.0581 5.54492 14.2871 5.71484 14.5698 cv
5.91406 14.9019 6.08789 15.0908 6.19385 15.0908 cv
6.23779 15.0908 6.28223 15.0542 6.31006 14.998 cv
6.51416 14.5698 li
6.54883 14.4961 6.7168 14.3672 6.99707 14.1992 cv
7.1748 14.0908 7.35107 14.022 7.51709 13.9941 cv
7.85107 13.939 li
7.93896 13.9238 7.98486 13.8628 7.98486 13.7622 cv
7.98193 13.7158 li
7.92578 13.3618 li
7.88916 12.9731 li
7.85107 12.6201 li
7.81396 12.2109 li
7.81006 12.106 7.78076 12.0591 7.72217 12.0591 cv
7.67822 12.0591 7.60205 12.1191 7.5542 12.1919 cv
7.26221 12.6382 7.06006 12.7861 6.74805 12.7861 cv
5.75781 12.7861 5.00879 11.0439 5.00879 8.74121 cv
5.00879 8.54004 5.021 8.28418 5.04688 7.97607 cv
5.09424 7.38477 5.10303 7.23682 5.10303 7.01807 cv
5.10303 6.01904 4.89404 5.31494 4.47021 4.89209 cv
4.20996 4.63184 li
4.04297 4.4458 li
f
6.43994 18.0249 mo
6.18018 17.9868 6.05811 17.958 5.90088 17.896 cv
5.85596 17.8779 5.73877 17.8281 5.54785 17.7471 cv
5.24805 17.6191 5.0249 17.561 4.83691 17.561 cv
4.55615 17.561 4.32617 17.6538 4.06201 17.877 cv
4.229 18.0068 li
4.60107 18.2671 li
4.95313 18.5459 li
5.04492 18.6182 5.15283 18.6572 5.25977 18.6572 cv
5.62305 18.6572 5.93994 18.4868 6.43994 18.0249 cv
f
13.5908 21.4058 mo
13.6938 21.1748 13.7422 21.1118 13.9629 20.9229 cv
14.4829 20.478 14.7241 20.1479 14.7241 19.8828 cv
14.7241 19.4741 li
14.7241 19.2358 14.7651 19.1582 14.8882 19.1582 cv
14.9438 19.1582 14.9888 19.1802 15.0039 19.2139 cv
15.0962 19.437 li
15.1172 19.4888 15.1792 19.522 15.252 19.522 cv
15.3232 19.522 15.4302 19.438 15.5229 19.3071 cv
15.709 19.0469 li
15.8018 18.917 15.8442 18.8062 15.8442 18.6851 cv
15.8442 18.6108 15.8291 18.5391 15.8018 18.4712 cv
15.7871 18.4341 15.7441 18.335 15.6719 18.1738 cv
15.6289 18.0781 15.5962 17.9512 15.5962 17.8818 cv
15.5962 17.7622 15.6582 17.6899 15.7622 17.6899 cv
15.8179 17.6899 15.8672 17.7109 15.895 17.7471 cv
16.0439 17.9321 li
16.0762 17.9731 16.1279 17.9961 16.1841 17.9961 cv
16.2529 17.9961 16.3311 17.9321 16.3779 17.8398 cv
16.5259 17.542 li
16.564 17.4658 16.584 17.4092 16.584 17.376 cv
16.584 17.3179 16.5239 17.2578 16.415 17.208 cv
16.1729 17.0972 li
15.855 16.9492 15.6152 16.438 15.6152 15.9048 cv
15.6152 15.834 15.6279 15.7651 15.6538 15.7031 cv
15.7832 15.3882 li
15.8208 15.2979 15.8398 15.1968 15.8398 15.0898 cv
15.8398 14.8989 15.7759 14.7031 15.6538 14.5151 cv
15.5039 14.2852 15.4238 14.1548 15.4121 14.124 cv
15.3018 13.8301 15.2451 13.748 15.1538 13.748 cv
15.0591 13.771 li
14.9292 13.8452 li
14.7241 13.957 li
14.4829 14.2539 li
14.2231 14.3838 li
14.0669 14.4619 13.9199 14.793 13.9199 15.0679 cv
13.9199 15.5488 13.9751 15.6831 14.6128 16.7808 cv
14.8599 17.2051 14.9912 17.5718 14.9912 17.8428 cv
14.9912 18.605 14.3091 19.147 12.9409 19.4741 cv
12.0869 19.6792 li
11.457 19.8291 11.0859 20.2612 10.9541 20.998 cv
11.2129 20.8638 11.3159 20.8452 11.7769 20.8452 cv
12.0498 20.8491 li
12.0928 20.8501 li
12.3398 20.8501 12.374 20.8311 12.5332 20.6069 cv
12.7148 20.3501 12.896 20.1958 13.146 20.0879 cv
13.4429 19.957 li
13.6841 19.8271 li
13.7578 19.8081 li
13.8252 19.8081 13.8608 19.835 13.8608 19.8838 cv
13.8608 19.9561 13.793 20.0781 13.6841 20.1992 cv
13.4702 20.438 13.3872 20.6382 13.3872 20.918 cv
13.3872 21.0972 13.4312 21.2021 13.5908 21.4058 cv
f
11.251 18.5269 mo
11.4648 18.6602 11.6812 18.855 11.8081 19.0288 cv
11.9858 19.272 12.0112 19.2891 12.186 19.2891 cv
12.2622 19.2891 12.353 19.2759 12.458 19.251 cv
12.625 19.2139 li
12.9312 19.1558 13.0361 19.1099 13.0361 19.0342 cv
13.0361 18.9912 13.002 18.9341 12.9409 18.8799 cv
12.7368 18.6938 li
12.5332 18.5078 li
12.4019 18.3892 12.1421 18.3008 11.9209 18.3008 cv
11.6968 18.3008 11.5669 18.3452 11.251 18.5269 cv
f
17.27 19.5298 mo
17.3809 19.5122 li
17.5479 19.4932 li
17.7148 19.5122 li
17.7969 19.5161 li
18.2109 19.5161 18.6069 19.166 18.6069 18.7988 cv
18.6069 18.6709 18.4902 18.6011 18.2788 18.6011 cv
17.7788 18.6011 17.4648 18.8901 17.27 19.5298 cv
f
55.3892 20.812 mo
55.3442 20.6431 55.3301 20.561 55.3301 20.4702 cv
55.3511 20.2168 li
55.3979 19.8691 55.4111 19.7031 55.4111 19.4941 cv
55.4111 19.3579 55.3711 19.248 55.2769 19.1221 cv
55.0532 18.8242 li
54.9092 18.6309 54.8501 18.4829 54.8501 18.3169 cv
54.8501 18.2109 54.875 18.1738 54.9502 18.1738 cv
55.0352 18.1919 li
55.0449 18.1982 55.1011 18.228 55.2021 18.2852 cv
55.2769 18.3271 55.3408 18.3491 55.3872 18.3491 cv
55.5 18.3491 55.5552 18.1748 55.5552 17.8262 cv
55.5552 17.3442 55.4639 17.1118 55.1841 16.8921 cv
54.9238 16.688 li
54.8779 16.6519 54.8481 16.5918 54.8481 16.5361 cv
54.8481 16.4468 54.9019 16.3901 54.9849 16.3901 cv
55.0371 16.3901 55.1099 16.4028 55.2021 16.4282 cv
55.4072 16.4829 li
55.4858 16.502 li
55.5488 16.502 55.5781 16.4521 55.5781 16.3452 cv
55.5742 16.2798 li
55.5181 15.8892 li
55.4609 15.4829 55.3931 15.3281 55.2729 15.3281 cv
55.2402 15.332 li
54.7568 15.4248 li
54.6758 15.4321 li
54.0952 15.4321 53.4111 14.8818 53.2339 14.2729 cv
52.8809 13.0659 li
52.7749 12.7051 52.4619 12.3071 51.9888 11.9321 cv
51.834 11.8101 51.6992 11.7388 51.5991 11.728 cv
51.2642 11.6909 li
51.2041 11.6841 51.1631 11.647 51.1631 11.6001 cv
51.1631 11.522 51.228 11.4858 51.3652 11.4858 cv
51.8359 11.4858 52.3389 11.583 53.0098 11.8018 cv
53.6221 12.002 53.9541 12.0762 54.2529 12.0762 cv
55.1831 12.0762 55.7422 11.5908 55.7422 10.7861 cv
55.7422 10.3838 55.5972 9.87695 55.3892 9.5542 cv
55.208 9.2749 54.9019 8.98877 54.5151 8.73682 cv
54.457 8.69922 54.4058 8.68018 54.3682 8.68018 cv
54.3159 8.68018 54.2729 8.72217 54.2729 8.77295 cv
54.292 9.01611 li
54.293 9.03711 li
54.293 9.12793 54.2402 9.20215 54.1738 9.20215 cv
54.0708 9.20215 53.9648 9.08105 53.8462 8.83008 cv
53.5039 8.104 52.9531 7.66602 52.3838 7.66602 cv
52.2612 7.66602 52.189 7.70996 52.189 7.78613 cv
52.189 7.84424 52.2231 7.9292 52.2861 8.03076 cv
52.3452 8.12598 52.4009 8.23779 52.4531 8.36621 cv
52.4829 8.43799 52.499 8.49219 52.499 8.5249 cv
52.499 8.56006 52.4678 8.57813 52.4141 8.57813 cv
52.3301 8.57813 52.1929 8.50195 52.1001 8.40283 cv
51.915 8.20605 51.8218 8.10596 51.8208 8.10498 cv
51.5801 7.73389 li
51.3931 7.4458 51.186 7.26514 50.8369 7.08398 cv
50.373 6.84277 li
50.2788 6.79395 50.1968 6.76807 50.1338 6.76807 cv
50.0771 6.76807 50.0469 6.79688 50.0469 6.85107 cv
50.0469 6.91016 50.0762 6.98389 50.1309 7.06494 cv
50.23 7.21094 50.3032 7.36816 50.3032 7.43604 cv
50.3032 7.49902 50.2622 7.54785 50.21 7.54785 cv
50.0811 7.54785 49.8462 7.31494 49.5181 6.86084 cv
49.2842 6.53613 49.1641 6.18408 49.1641 5.81787 cv
49.1641 5.03516 49.7661 4.42676 50.5439 4.42676 cv
50.9409 4.42676 51.4399 4.59424 51.9331 4.89209 cv
52.8252 5.43115 li
53.144 5.62305 53.5762 5.76514 53.8452 5.76514 cv
53.9922 5.76514 54.0361 5.75781 54.3672 5.67188 cv
54.4639 5.64697 54.5459 5.61621 54.6079 5.5791 cv
54.6489 5.55615 54.6758 5.51221 54.6758 5.47021 cv
54.6758 5.39697 54.6309 5.36523 54.5151 5.35596 cv
54.1011 5.32617 53.2422 4.98682 52.6758 4.63184 cv
52.3472 4.4248 52.1421 4.30615 52.063 4.27881 cv
51.9111 4.2251 51.8081 4.14502 51.8081 4.08105 cv
51.8081 4.0542 51.8389 4.03711 51.8882 4.03711 cv
51.998 4.05615 li
52.8071 4.35303 li
53.5859 4.63184 li
53.9692 4.76807 54.562 4.89209 54.835 4.89209 cv
55.186 4.89209 55.4302 4.64697 55.4302 4.29492 cv
55.4302 4.11719 55.3862 3.91699 55.314 3.77686 cv
55.2002 3.55615 55.0518 3.36816 54.9912 3.36816 cv
54.9189 3.36816 54.8779 3.44189 54.8779 3.56689 cv
54.8862 3.66602 li
54.9102 3.90381 li
54.9102 4.15576 54.7729 4.31787 54.5601 4.31787 cv
54.4761 4.31787 54.374 4.29883 54.2549 4.25977 cv
53.0479 3.87012 li
52 3.53076 51.5898 3.44287 51.0762 3.44287 cv
49.6152 3.44287 48.5151 4.4292 48.5151 5.74023 cv
48.5151 7.22119 49.5298 8.14893 52.1372 9.05322 cv
54.668 9.93018 54.998 10.1309 54.998 10.7979 cv
54.998 11.1802 54.6382 11.4858 54.189 11.4858 cv
54.0239 11.4858 53.877 11.4741 53.7529 11.4492 cv
53.644 11.4268 53.2231 11.3281 52.4912 11.1519 cv
51.7148 10.9648 51.0571 10.8911 50.1802 10.8911 cv
48.3369 10.8911 47.4521 11.1719 46.4902 12.062 cv
46.2671 12.269 46.1768 12.3091 45.9292 12.3091 cv
45.8032 12.3042 li
45.5098 12.2852 li
45.2881 12.2852 45.1211 12.3921 44.9858 12.6201 cv
44.688 13.1211 li
44.6479 13.1899 44.5659 13.2329 44.4751 13.2329 cv
44.2842 13.2329 44.1802 13.106 44.001 12.6572 cv
43.9058 12.4189 43.7788 12.228 43.6289 12.1001 cv
43.2388 11.7651 li
43.1802 11.7139 43.146 11.665 43.146 11.6289 cv
43.146 11.5908 43.1792 11.5278 43.2388 11.4492 cv
43.2969 11.374 43.353 11.2871 43.4058 11.189 cv
43.4629 11.0859 43.4951 11.0098 43.499 10.9658 cv
43.5181 10.7988 li
43.5322 10.7451 43.5869 10.7061 43.6499 10.7061 cv
43.7729 10.7061 43.7959 10.7881 43.7969 11.2451 cv
43.7969 11.3618 43.8472 11.5342 43.9448 11.7471 cv
44.1499 12.1919 li
44.1758 12.25 44.2412 12.2871 44.3169 12.2871 cv
44.5098 12.2871 44.7529 11.834 44.8188 11.3569 cv
44.8721 10.959 44.915 10.8359 44.9971 10.8359 cv
45.0718 10.8359 45.106 10.8828 45.2642 11.208 cv
45.313 11.3091 45.3892 11.4038 45.4868 11.4858 cv
45.5781 11.563 45.6558 11.6079 45.71 11.6172 cv
45.73 11.6182 li
45.8838 11.6182 45.9351 11.522 45.9702 11.1699 cv
45.9878 10.9849 li
45.9521 10.7251 li
45.9248 10.5449 li
45.9248 10.4248 45.9678 10.353 46.0361 10.353 cv
46.0771 10.353 46.127 10.3789 46.1738 10.4268 cv
46.3599 10.6138 li
46.4839 10.7378 46.6099 10.8008 46.7339 10.8008 cv
46.8931 10.8008 46.9922 10.731 46.9922 10.6172 cv
46.9922 10.5239 46.9722 10.48 46.8062 10.2041 cv
46.79 10.1792 46.7471 10.0991 46.6758 9.96289 cv
46.5112 9.64893 46.4341 9.57178 46.2891 9.57178 cv
46.1001 9.5918 li
45.8589 9.68506 li
45.7871 9.71191 45.7368 9.72607 45.7109 9.72607 cv
45.6792 9.72607 45.6538 9.69287 45.6538 9.65088 cv
45.6538 9.48291 45.7642 9.22119 45.9702 8.89502 cv
46.0972 8.69482 46.2051 8.19482 46.2861 7.43701 cv
46.3789 6.56396 li
46.436 6.02783 46.4941 5.83887 46.6021 5.83887 cv
46.6411 5.83887 46.6719 5.85498 46.6758 5.87695 cv
46.7319 6.15479 li
46.7319 6.37793 li
46.7319 6.64893 46.7598 6.86914 46.7949 6.86914 cv
46.874 6.86914 46.9888 6.77588 47.103 6.61914 cv
47.1841 6.50781 47.2471 6.38281 47.2891 6.24805 cv
47.3511 6.0498 47.3818 5.88623 47.3818 5.76123 cv
47.3818 5.33105 47.2021 5.14697 46.6201 4.98486 cv
46.562 4.96777 46.5229 4.94922 46.5088 4.9292 cv
46.4902 4.76221 li
46.4902 4.4458 li
46.4531 4.22314 li
46.3789 4.03711 li
46.2861 3.83301 li
46.1372 3.92578 li
45.7578 4.16309 45.667 4.23389 45.543 4.39014 cv
45.374 4.60303 45.314 4.65723 45.2451 4.65723 cv
45.1929 4.65723 45.1528 4.62109 45.1528 4.57617 cv
45.2271 4.25977 li
45.2329 4.20508 li
45.2329 3.79883 45.0039 3.40479 44.5952 3.10889 cv
44.4648 3.25684 li
44.3359 3.44287 li
44.1118 3.70313 li
43.9829 3.854 43.9058 4.06006 43.9058 4.25391 cv
43.9082 4.31592 li
43.9102 4.37695 li
43.9102 4.52393 43.8872 4.57422 43.8188 4.57422 cv
43.7778 4.55713 li
43.6289 4.37207 li
43.4438 4.14893 li
43.1099 3.94482 li
42.9419 3.81396 li
42.7642 4.2041 42.7559 4.24609 42.7559 4.74512 cv
42.7559 4.90088 li
42.7559 5.06885 42.7021 5.1709 42.6118 5.1709 cv
42.5679 5.1709 42.4902 5.13916 42.3848 5.07813 cv
42.3008 5.02881 42.2031 5.00195 42.1089 5.00195 cv
41.8379 5.00195 41.6401 5.23193 41.6401 5.5459 cv
41.6401 5.88623 41.7139 6.11816 41.939 6.48877 cv
42.085 6.72998 42.2769 6.92676 42.3662 6.92676 cv
42.376 6.92676 42.3999 6.75391 42.4219 6.52686 cv
42.3662 6.21094 li
42.354 6.06885 li
42.354 5.94922 42.396 5.87598 42.4648 5.87598 cv
42.5698 5.87598 42.6328 5.99023 42.7012 6.3042 cv
42.8491 6.99121 li
42.998 7.86377 li
43.0381 8.09912 43.1128 8.34912 43.2212 8.60693 cv
43.3672 8.95703 43.4731 9.17578 43.5371 9.25781 cv
43.7422 9.52197 43.7661 9.55908 43.7661 9.61621 cv
43.7661 9.66211 43.728 9.70313 43.686 9.70313 cv
43.646 9.70313 43.5879 9.68408 43.5181 9.64697 cv
43.4541 9.61377 43.3789 9.58789 43.2949 9.57324 cv
43.1602 9.5542 li
42.8521 9.5542 42.79 9.80078 42.79 11.0332 cv
42.79 11.8042 42.9492 12.8281 43.146 13.3252 cv
43.5371 14.3101 li
43.5981 14.4658 43.6299 14.6221 43.6299 14.772 cv
43.6299 16.1309 41.7939 18.3032 39.8579 19.2329 cv
39.105 19.5952 38.8828 19.9722 38.8179 20.998 cv
39.1401 20.8452 39.269 20.793 39.4678 20.7378 cv
40.0161 20.584 40.1338 20.5078 40.2119 20.2549 cv
40.2861 20.0132 li
40.3179 19.9092 40.3882 19.8579 40.769 19.6602 cv
40.9121 19.5859 41.0142 19.502 41.0659 19.4189 cv
41.1631 19.2598 41.2368 19.1812 41.2861 19.1812 cv
41.3389 19.1812 41.3691 19.2148 41.3691 19.2759 cv
41.3628 19.3071 li
41.1592 19.8369 li
41.1348 19.9678 li
41.1348 20.356 41.354 20.6821 41.7529 20.8862 cv
41.7788 20.7871 41.7979 20.7129 41.8091 20.6631 cv
41.874 20.3799 41.937 20.1909 41.9951 20.106 cv
42.3481 19.5859 li
42.4761 19.397 42.499 19.2739 42.499 18.7939 cv
42.478 18.2109 li
42.4668 18.061 li
42.4668 17.9648 42.5132 17.9121 42.5962 17.9121 cv
42.6611 17.9121 42.7139 17.936 42.7192 17.9702 cv
42.7749 18.3232 li
42.7871 18.397 42.8638 18.4531 42.957 18.4531 cv
43.1348 18.4531 43.3662 18.2241 43.6108 17.8018 cv
43.7051 17.6401 43.7441 17.5112 43.7441 17.3579 cv
43.7441 17.2412 43.7178 16.981 43.6851 16.7808 cv
43.6758 16.6729 li
43.6758 16.5791 43.731 16.521 43.8188 16.521 cv
43.8652 16.521 43.9009 16.5361 43.9082 16.5581 cv
44.0381 16.9849 li
44.082 17.1289 44.1802 17.2261 44.2822 17.2261 cv
44.5679 17.2261 44.8628 16.644 44.8931 16.019 cv
44.9121 15.627 44.96 15.4902 45.0801 15.4902 cv
45.126 15.4902 45.1631 15.5088 45.1709 15.5361 cv
45.2461 15.7769 li
45.2729 15.8662 45.3262 15.9258 45.3779 15.9258 cv
45.4248 15.9258 45.52 15.8442 45.6362 15.7031 cv
45.7012 15.623 45.7568 15.543 45.8032 15.4619 cv
45.8398 15.397 45.8589 15.3301 45.8589 15.2661 cv
45.8589 15.1729 45.8398 15.146 45.6909 15.0342 cv
45.5552 14.9312 45.4868 14.7998 45.4868 14.644 cv
45.4868 14.376 45.6021 14.085 45.9331 13.5112 cv
46.2349 12.9888 46.2769 12.9302 46.3501 12.9302 cv
46.4199 12.9302 46.4731 12.998 46.4731 13.0879 cv
46.4731 13.1421 46.46 13.1982 46.4351 13.251 cv
46.3838 13.3579 46.3589 13.4331 46.3589 13.4731 cv
46.3589 13.5459 46.4238 13.605 46.5049 13.605 cv
46.5962 13.605 46.7119 13.5659 46.8428 13.4932 cv
46.9219 13.4482 47.0898 13.3799 47.3452 13.2881 cv
47.6899 13.1641 47.9009 13.0889 47.9761 13.0659 cv
48.0918 13.0278 48.2261 13.0088 48.3579 13.0088 cv
48.4658 13.0088 48.5742 13.022 48.6821 13.0469 cv
48.895 13.0972 49.0391 13.1221 49.1099 13.1221 cv
49.2798 13.1221 49.4111 12.9932 49.4111 12.8281 cv
49.4111 12.7559 49.3589 12.6128 49.2949 12.5078 cv
49.2002 12.3521 49.144 12.2642 49.1279 12.248 cv
49.0459 12.1621 49.0142 12.1152 49.0142 12.0811 cv
49.0352 12.0068 li
49.0571 11.9609 49.0972 11.9321 49.1392 11.9321 cv
49.2861 11.9321 49.5732 12.231 49.834 12.6572 cv
51.291 15.0352 51.9951 15.7871 53.0659 16.1118 cv
54.1821 16.4502 54.4438 16.686 54.4438 17.3521 cv
54.4438 17.7041 54.2568 18.1309 53.8652 18.6748 cv
53.1221 19.7051 52.8599 20.3101 52.8599 20.9941 cv
52.8618 21.146 li
52.9531 21.1069 53.021 21.0762 53.0659 21.0542 cv
53.2178 20.9761 53.3179 20.9321 53.3638 20.9229 cv
53.8281 20.8301 li
53.9722 20.8008 54.0898 20.627 54.0898 20.4409 cv
54.0879 20.4028 li
54.0508 19.9951 li
54.0479 19.9302 li
54.0479 19.6992 54.1602 19.5112 54.2988 19.5112 cv
54.3501 19.5112 54.4102 19.5571 54.4409 19.623 cv
54.7378 20.2549 li
54.8599 20.5132 55.002 20.6348 55.3892 20.812 cv
f
40.1558 8.06787 mo
40.1372 8.36621 li
40.1318 8.54688 li
40.1318 8.84912 40.1792 8.979 40.292 8.979 cv
40.415 8.979 40.6079 8.74805 40.6948 8.49512 cv
40.748 8.33789 40.79 8.11914 40.79 7.99219 cv
40.79 7.90186 40.7671 7.81885 40.6948 7.64111 cv
40.6108 7.43799 40.5249 7.34424 40.4219 7.34424 cv
40.2642 7.34424 40.188 7.54785 40.1558 8.06787 cv
f
38.707 4.4458 mo
38.709 4.60693 li
38.709 4.77783 38.6572 5.09082 38.5771 5.39404 cv
38.5068 5.6582 38.4702 5.80078 38.4648 5.8208 cv
38.4399 5.9292 38.4282 6.04199 38.4282 6.15918 cv
38.4282 6.41992 38.5552 6.66504 38.7441 6.76807 cv
38.9482 6.87891 li
38.9858 7.14014 li
38.9761 7.24121 38.9951 7.37891 39.041 7.54785 cv
39.0918 7.73486 39.1182 7.92188 39.1182 8.10693 cv
39.1182 8.26123 39.104 8.31982 39.0688 8.31982 cv
38.999 8.31982 38.875 8.12891 38.7632 7.84521 cv
38.584 7.396 38.4238 7.23096 38.1699 7.23096 cv
37.9658 7.23096 37.835 7.26514 37.5918 7.38086 cv
37.7861 7.62988 37.9038 7.84277 38.1309 8.34717 cv
38.4258 9.00488 38.54 9.13916 39.0039 9.36914 cv
39.1069 9.41992 39.1748 9.48779 39.1748 9.54102 cv
39.1748 9.62793 39.1069 9.68506 39.0049 9.68506 cv
38.9648 9.68506 38.8452 9.66797 38.7441 9.64697 cv
38.6069 9.63379 li
38.5352 9.63379 38.502 9.7002 38.502 9.84619 cv
38.502 10.3389 38.9229 10.937 39.6172 11.4312 cv
39.71 11.4971 39.7661 11.5679 39.7661 11.6201 cv
39.7661 11.6499 39.7451 11.6821 39.71 11.709 cv
39.6782 11.7339 39.6431 11.7471 39.6108 11.7471 cv
39.5708 11.7471 39.4858 11.7178 39.394 11.6719 cv
39.3389 11.645 39.292 11.6309 39.2568 11.6309 cv
39.168 11.6309 39.1099 11.7168 39.1099 11.8491 cv
39.1099 12.0181 39.2358 12.3149 39.4492 12.6572 cv
39.647 12.9702 39.8599 13.1841 40.063 13.269 cv
40.8979 13.623 li
40.9438 13.6421 40.9731 13.6841 40.9731 13.729 cv
40.9731 13.7939 40.9258 13.8511 40.8618 13.8652 cv
40.7129 13.8828 li
40.5459 13.9009 li
40.3232 13.8828 li
40.2852 13.8809 li
40.1699 13.8809 40.124 13.9048 40.124 13.9648 cv
40.124 14.0552 40.208 14.2422 40.397 14.5698 cv
40.6021 14.9268 40.7461 15.0908 40.856 15.0908 cv
40.8999 15.0908 40.9448 15.0542 40.9731 14.998 cv
41.1782 14.5698 li
41.2051 14.5132 41.3721 14.3838 41.6611 14.1992 cv
41.835 14.0859 42.0132 14.0171 42.1802 13.9941 cv
42.626 13.9351 42.6641 13.9141 42.6641 13.729 cv
42.6641 13.6641 42.645 13.541 42.6079 13.3618 cv
42.5879 13.269 42.5698 13.1382 42.5518 12.9731 cv
42.5151 12.6201 li
42.478 12.2109 li
42.4731 12.1079 42.4438 12.0581 42.3862 12.0581 cv
42.3472 12.0581 42.2852 12.1138 42.2358 12.1919 cv
42.0171 12.5479 41.6948 12.7871 41.436 12.7871 cv
40.3979 12.7871 39.6909 11.1328 39.6909 8.70508 cv
39.71 7.97607 li
39.7651 7.10205 li
39.7749 6.79297 li
39.7749 6.04492 39.5151 5.27197 39.1338 4.89209 cv
38.874 4.63184 li
38.707 4.4458 li
f
41.103 18.0249 mo
40.7119 17.959 40.6509 17.9399 40.2119 17.7471 cv
39.9058 17.6118 39.71 17.5601 39.5142 17.5601 cv
39.2212 17.5601 38.9932 17.6509 38.7251 17.877 cv
38.8921 18.0068 li
39.2642 18.2671 li
39.6172 18.5459 li
39.708 18.6182 39.8179 18.6572 39.9302 18.6572 cv
40.2939 18.6572 40.6011 18.4912 41.103 18.0249 cv
f
48.2549 21.4058 mo
48.3569 21.1748 48.4058 21.1118 48.627 20.9229 cv
49.146 20.478 49.3882 20.1479 49.3882 19.8828 cv
49.3882 19.4741 li
49.3882 19.2358 49.4282 19.1582 49.5518 19.1582 cv
49.6069 19.1582 49.6519 19.1802 49.667 19.2139 cv
49.7598 19.437 li
49.7808 19.4868 49.8418 19.519 49.917 19.519 cv
50.0488 19.519 50.1431 19.4219 50.373 19.0469 cv
50.4702 18.8882 50.5088 18.7842 50.5088 18.6802 cv
50.5088 18.6118 50.4941 18.542 50.4658 18.4712 cv
50.4512 18.436 50.4082 18.3369 50.335 18.1738 cv
50.293 18.0781 50.2588 17.9502 50.2588 17.8818 cv
50.2588 17.7622 50.3208 17.6899 50.4258 17.6899 cv
50.481 17.6899 50.5298 17.7109 50.5591 17.7471 cv
50.707 17.9321 li
50.7402 17.9731 50.748 17.9961 50.8052 17.9961 cv
50.8721 17.9961 50.9951 17.9321 51.042 17.8398 cv
51.1899 17.542 li
51.228 17.4678 51.2471 17.4092 51.2471 17.373 cv
51.2471 17.312 51.188 17.2471 51.0972 17.208 cv
50.8369 17.0972 li
50.5332 16.9658 50.2788 16.4429 50.2788 15.9438 cv
50.2788 15.8892 50.2979 15.8081 50.335 15.7031 cv
50.4468 15.3882 li
50.4839 15.2832 50.5029 15.1782 50.5029 15.0781 cv
50.5029 14.897 50.4448 14.7222 50.3169 14.5151 cv
50.188 14.3071 50.1138 14.1768 50.0942 14.124 cv
49.9868 13.8481 49.9219 13.7559 49.8311 13.7559 cv
49.7651 13.7559 49.7031 13.7788 49.5928 13.8452 cv
49.4072 13.957 li
49.146 14.2539 li
48.8862 14.3838 li
48.73 14.4629 48.582 14.7988 48.582 15.0791 cv
48.582 15.481 48.6709 15.6982 49.2769 16.7808 cv
49.5332 17.2388 49.6538 17.5791 49.6538 17.8389 cv
49.6538 18.5952 48.8828 19.2168 47.623 19.4741 cv
46.1182 19.7822 45.79 20.0308 45.6172 20.998 cv
45.877 20.8638 45.98 20.8452 46.4399 20.8452 cv
46.7129 20.8491 li
46.7559 20.8501 li
47.0029 20.8501 47.0381 20.8311 47.1958 20.6069 cv
47.3779 20.3501 47.5591 20.1958 47.8091 20.0879 cv
48.106 19.957 li
48.3481 19.8271 li
48.4219 19.8081 li
48.4888 19.8081 48.5249 19.835 48.5249 19.8862 cv
48.5249 19.9492 48.4648 20.0571 48.3481 20.1992 cv
48.168 20.417 48.064 20.6421 48.064 20.812 cv
48.064 21.0601 48.104 21.1851 48.2549 21.4058 cv
f
45.9141 18.5269 mo
46.1279 18.6602 46.3442 18.855 46.4712 19.0288 cv
46.6499 19.272 46.6738 19.2891 46.8501 19.2891 cv
46.9238 19.2891 47.0161 19.2759 47.1221 19.251 cv
47.2891 19.2139 li
47.605 19.1528 47.7012 19.1079 47.7012 19.0229 cv
47.7012 18.9741 47.6719 18.9209 47.623 18.8799 cv
47.4009 18.6938 li
47.1958 18.5078 li
47.0698 18.394 46.811 18.3018 46.6099 18.3018 cv
46.3799 18.3018 46.1909 18.3638 45.9141 18.5269 cv
f
51.9331 19.5298 mo
52.0439 19.5122 li
52.23 19.4932 li
52.3789 19.5122 li
52.48 19.5171 li
52.668 19.5171 52.7651 19.4961 52.8428 19.437 cv
52.959 19.3501 53.0762 19.208 53.1958 19.0098 cv
53.2451 18.9302 53.271 18.8569 53.271 18.7988 cv
53.271 18.6729 53.1548 18.6011 52.9521 18.6011 cv
52.4419 18.6011 52.1299 18.8862 51.9331 19.5298 cv
f
18.9229 58.7822 mo
19.0352 58.5586 li
19.2949 58.2803 li
19.5161 58.043 19.6328 57.71 19.6328 57.3203 cv
19.6328 57.1279 19.6001 56.9209 19.5361 56.7197 cv
19.4888 56.5713 19.459 56.4443 19.459 56.3906 cv
19.459 56.2744 19.5469 56.1621 19.6372 56.1621 cv
19.6738 56.1621 19.7251 56.1963 19.7778 56.2549 cv
20.0562 56.5713 li
20.228 56.7656 20.2861 56.8018 20.502 56.8496 cv
20.52 56.5898 li
20.5391 56.2842 li
20.5391 55.8408 20.377 55.3428 20.1299 55.0293 cv
19.981 54.8398 19.915 54.7246 19.915 54.6592 cv
19.915 54.5898 19.9639 54.5283 20.0161 54.5283 cv
20.0342 54.5283 20.061 54.541 20.0928 54.5654 cv
20.271 54.6982 20.3638 54.7529 20.4131 54.7529 cv
20.5029 54.7529 20.584 54.5313 20.584 54.2842 cv
20.584 53.9316 20.436 53.5273 20.2051 53.2461 cv
20.0859 53.1016 20.0122 53.0098 19.981 52.9678 cv
19.957 52.9326 19.9448 52.8975 19.9448 52.8623 cv
19.9448 52.7822 20.0098 52.7256 20.105 52.7256 cv
20.1758 52.7256 20.2192 52.7432 20.335 52.8193 cv
20.3901 52.8564 20.4399 52.875 20.4771 52.875 cv
20.6221 52.875 20.6748 52.6699 20.6748 52.1182 cv
20.6689 51.8896 li
20.6509 51.5557 li
20.6279 51.1621 20.5952 51.0918 20.4282 51.0918 cv
20.2788 51.0918 li
19.373 51.0918 18.9512 50.5186 18.7192 48.9736 cv
18.5498 47.8564 18.1328 47.0645 17.6221 46.8926 cv
17.3159 46.79 17.207 46.7236 17.207 46.6436 cv
17.207 46.5898 17.292 46.54 17.3838 46.54 cv
17.4502 46.54 17.6069 46.582 17.7339 46.6328 cv
18.4751 46.9326 19.0991 47.0791 19.6431 47.0791 cv
20.5332 47.0791 21.2349 46.4229 21.2349 45.5928 cv
21.2349 44.957 20.9331 44.3135 20.3901 43.791 cv
20.2422 43.6475 20.082 43.5518 19.9258 43.5117 cv
19.8911 43.5078 li
19.7959 43.54 li
19.833 43.8086 li
19.9072 43.9951 li
19.9282 44.0732 li
19.9282 44.1143 19.8901 44.1436 19.8398 44.1436 cv
19.7861 44.1436 19.7339 44.1162 19.7031 44.0703 cv
19.3691 43.5684 li
19.104 43.1699 18.5229 42.8389 18.0928 42.8389 cv
17.939 42.8389 17.8442 42.9072 17.8442 43.0156 cv
17.8442 43.0684 17.894 43.1621 17.957 43.2334 cv
18.0518 43.3398 18.126 43.4688 18.126 43.5303 cv
18.105 43.6055 li
18.0859 43.6475 18.0581 43.6738 18.0308 43.6787 cv
18.0132 43.6807 li
17.9229 43.6807 17.8789 43.6396 17.4741 43.1777 cv
17.1431 42.7998 16.4678 42.4316 16.105 42.4316 cv
16.0542 42.4316 16.0049 42.4531 15.9692 42.4902 cv
15.9448 42.5146 15.9321 42.541 15.9321 42.5615 cv
15.9321 42.6182 15.979 42.6934 16.062 42.7686 cv
16.1768 42.875 16.2681 43 16.2681 43.0518 cv
16.2681 43.0898 16.2202 43.123 16.1641 43.123 cv
16.0581 43.123 15.8188 42.9697 15.375 42.6211 cv
14.6821 42.0752 14.3721 41.5615 14.3721 40.9658 cv
14.3721 40.2471 14.8862 39.6836 15.542 39.6836 cv
15.9268 39.6836 16.437 39.8672 16.7871 40.1309 cv
17.6968 40.8184 li
18.1128 41.1328 18.624 41.3008 19.1592 41.3008 cv
19.2749 41.3008 19.3848 41.2764 19.48 41.2266 cv
19.561 41.1855 19.6108 41.1377 19.6108 41.1016 cv
19.6108 41.0791 19.542 41.0469 19.4429 41.0234 cv
19.1152 40.9443 18.8491 40.8301 18.6631 40.6895 cv
17.7339 39.9834 li
17.3901 39.7217 17.1479 39.5537 17.0098 39.4814 cv
16.519 39.2236 16.4238 39.1631 16.4238 39.1064 cv
16.4238 39.0771 16.4712 39.0537 16.5298 39.0537 cv
16.5801 39.0537 16.6362 39.0664 16.6938 39.0908 cv
17.1768 39.2959 li
17.332 39.3613 17.5928 39.5156 17.957 39.7588 cv
18.9512 40.4238 19.457 40.6377 20.04 40.6377 cv
20.5962 40.6377 21.0059 40.2432 21.0059 39.708 cv
21.0059 39.6025 20.978 39.4863 20.9292 39.3877 cv
20.8359 39.2021 li
20.8032 39.1357 20.7432 39.0859 20.7251 39.1094 cv
20.6689 39.1836 li
20.6128 39.5742 li
20.6108 39.5889 20.5918 39.6328 20.5571 39.7041 cv
20.521 39.7783 20.4771 39.8408 20.4282 39.8896 cv
20.3262 39.9893 20.2422 40.0225 20.0869 40.0225 cv
19.7998 40.0225 19.4761 39.8672 18.6069 39.3145 cv
17.7271 38.7539 16.9331 38.459 16.3042 38.459 cv
14.9668 38.459 13.8892 39.5371 13.8892 40.8701 cv
13.8892 42.7314 15.0229 43.5713 18.5879 44.3477 cv
19.9419 44.6426 20.5391 45.0391 20.5391 45.6426 cv
20.5391 46.1943 20.0952 46.54 19.3892 46.54 cv
19.1748 46.54 19.0068 46.5283 18.8862 46.5029 cv
18.7661 46.4785 18.1279 46.3047 16.9722 45.9824 cv
16.1748 45.7598 15.2808 45.6348 14.4922 45.6348 cv
13.0952 45.6348 12.1519 46.0508 11.5112 46.9482 cv
11.436 47.0547 11.3618 47.1172 11.313 47.1172 cv
11.2749 47.1172 11.2202 47.0908 11.1582 47.041 cv
10.8979 46.8369 li
10.7158 46.6943 10.4248 46.584 10.231 46.584 cv
10.0908 46.584 9.95703 46.6377 9.83887 46.7451 cv
9.74609 46.8281 9.67822 46.874 9.64893 46.874 cv
9.54492 46.874 9.354 46.6406 9.20801 46.3359 cv
9 45.9014 8.89111 45.4678 8.89111 45.0723 cv
8.89111 44.8857 8.94922 44.7559 9.03076 44.7559 cv
9.09619 44.7559 9.14307 44.8076 9.16992 44.9053 cv
9.31885 45.4443 li
9.40186 45.7451 9.56982 45.9844 9.69922 45.9844 cv
9.75488 45.9844 9.85498 45.9014 9.96924 45.7598 cv
10.0381 45.6748 10.0879 45.5869 10.1182 45.5 cv
10.2329 45.1582 10.2632 45.1104 10.354 45.1104 cv
10.4629 45.1104 10.5181 45.1758 10.5918 45.5166 cv
10.605 45.5791 10.627 45.6738 10.7119 45.834 cv
10.7881 45.9766 10.8628 46.0889 10.9351 46.1689 cv
10.9912 46.2305 11.061 46.2646 11.1279 46.2646 cv
11.291 46.2646 11.4399 45.9912 11.4399 45.6934 cv
11.437 45.6123 li
11.415 45.2676 li
11.415 45.1328 11.436 45.0938 11.5112 45.0938 cv
11.5552 45.0938 11.5889 45.1172 11.6411 45.1836 cv
11.7212 45.2861 11.8281 45.375 11.957 45.4443 cv
12.0698 45.5049 12.1611 45.5371 12.2222 45.5371 cv
12.2749 45.5371 12.3398 45.5029 12.4019 45.4443 cv
12.4521 45.3975 12.48 45.3438 12.48 45.2979 cv
12.48 45.2432 12.4141 45.1582 12.2168 44.9609 cv
12.1108 44.8555 11.9839 44.5996 11.8452 44.2178 cv
11.793 44.0732 11.7231 43.9756 11.6699 43.9756 cv
11.6548 43.9756 11.6138 43.9883 11.5479 44.0137 cv
11.3071 44.1064 li
11.1401 44.1807 li
11.0762 44.1943 li
10.9971 44.1943 10.9331 44.1367 10.9331 44.0664 cv
10.9331 43.9941 11.1021 43.7939 11.3071 43.623 cv
11.4541 43.501 11.541 43.3193 11.5479 43.1221 cv
11.5591 42.8115 11.6172 42.5654 11.6782 42.5654 cv
11.7339 41.915 li
11.7622 41.5879 11.895 40.9727 12.0132 40.6328 cv
12.0352 40.5664 12.0649 40.5225 12.0869 40.5225 cv
12.1392 40.5225 12.1851 40.6602 12.1851 40.8164 cv
12.1802 40.9121 li
12.1689 41.0996 li
12.1689 41.335 12.207 41.4551 12.2808 41.4551 cv
12.3608 41.4551 12.4521 41.3389 12.5332 41.1338 cv
12.7002 40.707 li
12.749 40.5811 12.7739 40.4639 12.7739 40.3613 cv
12.7739 39.999 12.5581 39.7383 12.2578 39.7383 cv
12.124 39.7588 li
12.0532 39.7842 12.0078 39.7969 11.9922 39.7969 cv
11.894 39.7969 11.812 39.6904 11.812 39.5645 cv
11.8271 39.2959 li
11.8081 38.9238 li
11.7339 38.5342 li
11.7148 38.3477 li
11.5479 38.4414 li
11.3428 38.6084 li
11.0469 38.8486 li
10.8052 39.0537 li
10.7622 39.0898 10.7139 39.1104 10.667 39.1104 cv
10.5259 39.1104 10.5068 39.0723 10.5068 38.7822 cv
10.5078 38.71 li
10.5078 38.4756 10.4058 38.293 10.0249 37.8467 cv
10.0039 37.8223 9.97314 37.7852 9.93213 37.7354 cv
9.85791 37.8652 li
9.65381 38.1992 li
9.44922 38.7188 li
9.41211 39.0537 li
9.40088 39.1504 9.36377 39.2227 9.32715 39.2227 cv
9.28906 39.2227 9.2251 39.1748 9.15186 39.0908 cv
8.86816 38.7666 8.77783 38.7061 8.35303 38.5518 cv
8.31592 38.6816 li
8.24902 38.9023 8.21191 39.0332 8.20508 39.0732 cv
8.18506 39.4248 li
8.18506 39.5732 li
8.18604 39.6934 li
8.18604 39.7939 8.14795 39.8555 8.08594 39.8555 cv
8.07422 39.8525 li
8.06689 39.8496 8.02881 39.8184 7.96289 39.7588 cv
7.91992 39.7217 7.84082 39.7021 7.73779 39.7021 cv
7.39209 39.7021 7.17188 39.8896 7.17188 40.1865 cv
7.17188 40.4102 7.24805 40.5752 7.59082 41.0967 cv
7.74219 41.3262 7.91699 41.5088 7.98779 41.5088 cv
8.0332 41.5088 8.0708 41.3867 8.0708 41.2451 cv
8.03711 41.0234 li
8.00195 40.915 7.98389 40.8193 7.98389 40.7383 cv
7.98389 40.6338 8.01514 40.5771 8.0708 40.5771 cv
8.23779 40.5771 8.41113 41.0596 8.48291 41.7285 cv
8.55713 42.416 li
8.58398 42.6602 8.65918 42.9111 8.78076 43.1592 cv
8.94922 43.5049 9.11523 43.7422 9.26416 43.8467 cv
9.43994 43.9717 9.5498 44.0938 9.5498 44.1631 cv
9.5498 44.2197 9.50293 44.2744 9.45313 44.2744 cv
9.44678 44.2744 9.31982 44.2305 9.07715 44.1436 cv
8.9209 44.1191 li
8.5498 44.1191 8.42676 44.332 8.42676 44.9717 cv
8.42676 45.7441 8.9458 46.8564 9.52295 47.3203 cv
10.3779 48.0078 li
10.811 48.3564 11.1401 48.9336 11.1401 49.3457 cv
11.1401 49.8887 10.5439 50.4229 9.52295 50.7939 cv
8.91016 51.0166 li
8.43408 51.1904 8.24316 51.4961 8.05615 52.3916 cv
8.29883 52.3164 8.40479 52.2969 8.56787 52.2969 cv
8.6499 52.2988 li
8.92676 52.3057 li
9.17578 52.3057 9.35596 52.1553 9.35596 51.9463 cv
9.35596 51.7793 li
9.35596 51.7275 9.4248 51.6592 9.52295 51.6113 cv
9.68896 51.5313 9.77686 51.4873 9.7832 51.4814 cv
9.98779 51.3145 li
10.02 51.2871 10.0571 51.2734 10.0918 51.2734 cv
10.147 51.2734 10.1929 51.3252 10.1929 51.3867 cv
10.1929 51.4336 10.1802 51.4912 10.1548 51.5557 cv
10.0918 51.7197 10.0571 51.9453 10.0571 52.1943 cv
10.0571 52.6504 10.1289 52.8926 10.3589 53.2275 cv
10.3809 53.1055 10.3989 53.0244 10.415 52.9863 cv
10.4541 52.8916 10.5591 52.7246 10.731 52.4854 cv
11.0122 52.0908 11.2192 51.6133 11.2192 51.3535 cv
11.2139 51.2773 li
11.1582 50.8496 li
11.1582 50.7725 11.1919 50.6982 11.251 50.6445 cv
11.291 50.6104 11.3359 50.5898 11.3779 50.5898 cv
11.457 50.5898 11.5049 50.6367 11.5669 50.7764 cv
11.6108 50.877 11.6641 50.9434 11.7002 50.9434 cv
11.7661 50.9434 11.8921 50.7725 11.9751 50.5713 cv
12.0371 50.4229 12.0679 50.29 12.0679 50.1787 cv
12.0679 50.1104 12.0488 50.0293 12.0132 49.9395 cv
11.9741 49.8457 11.9541 49.7744 11.9541 49.7275 cv
11.9541 49.6807 11.9692 49.6563 12.0308 49.6055 cv
12.061 49.5811 12.0928 49.5684 12.125 49.5684 cv
12.1611 49.5684 12.1992 49.5811 12.2349 49.6055 cv
12.4019 49.7158 li
12.459 49.7539 12.5098 49.7744 12.5508 49.7744 cv
12.626 49.7744 12.731 49.6904 12.811 49.5684 cv
12.9731 49.3203 13.0752 49.1152 13.0752 49.0381 cv
13.0752 48.9902 13.0439 48.9531 12.9409 48.8809 cv
12.5718 48.6201 12.3281 48.2246 12.3281 47.8867 cv
12.3281 47.8096 12.3472 47.7188 12.3838 47.6182 cv
12.5698 47.1162 li
12.6631 46.8643 12.7129 46.7334 12.7178 46.7256 cv
12.772 46.7041 li
12.8359 46.7041 12.874 46.7578 12.874 46.8477 cv
12.874 46.9092 12.8589 46.9805 12.8301 47.0596 cv
12.7852 47.1826 12.752 47.3291 12.752 47.4131 cv
12.752 47.5459 12.8198 47.6182 12.9458 47.6182 cv
13.0381 47.6182 13.144 47.5918 13.2568 47.543 cv
13.8188 47.2998 14.2642 47.1699 14.5322 47.1699 cv
14.7852 47.1699 14.9419 47.2256 15.207 47.4131 cv
15.2769 47.4619 15.3369 47.4883 15.3789 47.4883 cv
15.4111 47.4883 15.4512 47.46 15.4868 47.4131 cv
15.5098 47.3809 15.5229 47.3486 15.5229 47.3213 cv
15.5229 47.2529 15.4839 47.167 15.4121 47.0791 cv
15.3149 46.9609 15.2798 46.8896 15.2798 46.8174 cv
15.2798 46.7578 15.3188 46.7207 15.3818 46.7207 cv
15.6709 46.7207 16.1289 47.6436 16.564 49.1035 cv
16.9072 50.2568 17.0029 50.375 18.105 50.998 cv
19.0381 51.5273 19.3921 52.0479 19.3921 52.8965 cv
19.3921 53.7324 19.1621 54.7988 18.6812 56.2002 cv
18.5288 56.6436 18.4619 56.9453 18.4619 57.1914 cv
18.4619 57.3877 18.501 57.5762 18.645 58.0762 cv
18.7129 58.3154 18.7559 58.458 18.7739 58.5029 cv
18.7959 58.5576 18.8462 58.6514 18.9229 58.7822 cv
f
14.6128 56.1807 mo
14.7241 55.9248 14.7588 55.8633 14.9658 55.5498 cv
15.2671 55.0957 15.375 54.8555 15.375 54.6396 cv
15.375 54.3418 li
15.375 54.0615 15.4248 53.9326 15.5361 53.9326 cv
15.5762 53.9326 15.6128 53.9551 15.6348 53.9893 cv
15.728 54.1377 li
15.7568 54.1846 15.8071 54.2139 15.8589 54.2139 cv
15.9141 54.2139 16.0142 54.1387 16.0669 54.0576 cv
16.2021 53.8555 16.2852 53.5947 16.2852 53.3936 cv
16.2661 53.1904 li
16.248 52.9785 li
16.248 52.8682 16.2939 52.8193 16.3999 52.8193 cv
16.4731 52.8193 16.5029 52.8486 16.564 52.9863 cv
16.604 53.0771 16.6592 53.1348 16.7051 53.1348 cv
16.7549 53.1348 16.814 53.0938 16.8608 53.0234 cv
17.0098 52.8008 li
17.1211 52.6328 li
17.1479 52.5439 li
17.1479 52.4932 17.1089 52.4443 17.0098 52.373 cv
16.665 52.125 16.5151 51.7441 16.4888 51.0537 cv
16.4702 50.5313 16.439 50.1885 16.397 50.0322 cv
16.3872 49.9971 16.2749 49.7305 16.062 49.2344 cv
15.979 49.0381 15.9038 48.8154 15.8389 48.5654 cv
15.7949 48.3936 15.7412 48.3418 15.6069 48.3418 cv
15.1021 48.3418 14.7212 48.7725 14.7212 49.3428 cv
14.7212 49.6777 14.8589 50.2061 15.1152 50.8496 cv
15.4731 51.752 15.5669 52.0732 15.5669 52.3916 cv
15.5669 53.0762 15.2939 53.373 14.353 53.7109 cv
13.2891 54.0928 12.791 54.6387 12.6069 55.624 cv
12.6899 55.5908 12.751 55.5664 12.792 55.5498 cv
12.9111 55.501 12.998 55.4697 13.0532 55.457 cv
13.3501 55.3828 li
13.605 55.3193 13.8101 55.1738 13.8511 55.0293 cv
13.9258 54.7686 li
13.9438 54.707 13.98 54.665 14.0381 54.6396 cv
14.2051 54.5654 li
14.3721 54.4912 li
14.4092 54.5654 li
14.335 54.8066 li
14.3101 54.8867 14.2969 55.0332 14.2969 55.2402 cv
14.2969 55.6484 14.377 55.8848 14.6128 56.1807 cv
f
4.63721 38.998 mo
4.66211 39.1006 4.6748 39.1709 4.6748 39.2061 cv
4.6748 39.2646 4.6499 39.4248 4.60107 39.6846 cv
4.56689 40.0645 li
4.56689 40.3965 4.62598 40.748 4.72998 41.041 cv
4.82617 41.3086 4.8501 41.3936 4.8501 41.4658 cv
4.8418 41.543 li
4.82715 41.6201 4.79688 41.6758 4.771 41.6758 cv
4.73389 41.6758 4.66797 41.6357 4.58203 41.5615 cv
4.36816 41.376 4.13623 41.2813 3.89502 41.2813 cv
3.81787 41.2813 3.70996 41.2939 3.5791 41.3203 cv
3.67188 41.5244 li
3.95117 42.2119 li
4.34082 42.8057 li
4.74902 43.085 li
4.79004 43.1123 4.82715 43.1504 4.85986 43.1963 cv
4.89697 43.2471 4.91699 43.29 4.91699 43.3193 cv
4.91699 43.3516 4.88379 43.3799 4.8418 43.3818 cv
4.47021 43.4014 li
4.41309 43.4043 4.36816 43.4395 4.36816 43.4805 cv
4.36816 43.542 4.4209 43.7285 4.52588 44.0322 cv
4.71191 44.5713 li
5.02783 44.8682 li
5.36182 45.1104 li
5.46094 45.1807 5.52002 45.2598 5.52002 45.3223 cv
5.52002 45.3721 5.48877 45.4219 5.45508 45.4248 cv
5.26904 45.4443 li
5.20801 45.4502 5.17383 45.5029 5.17383 45.5928 cv
5.17383 45.7324 5.30518 45.9854 5.54785 46.3174 cv
5.83398 46.708 6.03711 46.8369 6.36621 46.8369 cv
6.64404 46.8369 li
6.77686 46.8369 6.85791 46.9023 6.85791 47.0068 cv
6.85791 47.0947 6.80322 47.1465 6.68115 47.1719 cv
6.42285 47.2256 6.34521 47.2783 6.34521 47.3975 cv
6.34521 47.4443 6.37793 47.5146 6.43994 47.5986 cv
6.58789 47.8027 li
6.71191 47.9727 6.85107 48.084 6.94092 48.084 cv
6.99219 48.084 7.10791 48.0332 7.21191 47.9141 cv
7.37695 47.7217 7.56885 47.5693 7.81396 47.5059 cv
8.45898 47.3418 8.59424 47.2764 8.59424 47.126 cv
8.59424 47.0732 8.56885 46.999 8.52002 46.9121 cv
8.31396 46.5439 8.24219 46.3057 8.24219 46.002 cv
8.24121 45.7734 8.18213 45.6113 8.09717 45.6113 cv
8.06201 45.6113 8.00488 45.667 7.94385 45.7598 cv
7.79102 45.9951 7.53076 46.1523 7.29492 46.1523 cv
6.65088 46.1523 5.87598 45.1445 5.49219 43.8086 cv
5.40381 43.501 5.35596 43.1484 5.35596 42.8076 cv
5.35596 42.457 5.40283 42.0664 5.49219 41.6729 cv
5.61621 41.1289 5.68408 40.8252 5.69678 40.7627 cv
5.72119 40.5107 li
5.72119 40.0498 5.29492 39.457 4.63721 38.998 cv
f
5.9751 41.5801 mo
5.83789 41.8398 5.71191 42.4199 5.71191 42.79 cv
5.71191 43.0068 5.78418 43.1777 5.875 43.1777 cv
5.90576 43.1777 5.94287 43.1416 5.9751 43.085 cv
6.18018 42.7129 li
6.21387 42.6514 6.24805 42.5859 6.31201 42.4883 cv
6.38623 42.376 6.44092 42.2686 6.44092 42.21 cv
6.44092 41.9912 6.23779 41.7178 5.9751 41.5801 cv
f
8.01807 49.958 mo
8.06006 50 8.08984 50.0313 8.11084 50.0508 cv
8.19287 50.1309 8.24219 50.1807 8.25977 50.2002 cv
8.62207 50.5752 8.67578 50.6113 8.85107 50.6113 cv
9.01221 50.6113 9.35107 50.5186 9.54199 50.4219 cv
9.62207 50.3828 9.67188 50.333 9.67188 50.2949 cv
9.67188 50.2715 9.604 50.1953 9.48584 50.0879 cv
9.28223 49.9033 li
9.12793 49.7627 8.89697 49.6318 8.78809 49.6318 cv
8.5752 49.6318 8.35693 49.7256 8.01807 49.958 cv
f
12.3291 53.3203 mo
12.5269 53.4043 12.5981 53.4395 12.7002 53.5059 cv
12.8672 53.6162 12.9658 53.6787 12.9971 53.6924 cv
13.0542 53.7168 13.1538 53.7285 13.29 53.7285 cv
13.376 53.7285 13.4521 53.7168 13.5171 53.6924 cv
13.9072 53.543 li
14.2788 53.4131 li
14.3799 53.3779 14.4468 53.3213 14.4468 53.2695 cv
14.4468 53.2432 14.3628 53.2021 14.2412 53.1719 cv
14.1582 53.1514 14.0649 53.1201 13.9629 53.0791 cv
13.5059 52.8965 13.4399 52.8691 13.2759 52.8691 cv
12.9131 52.8691 12.5469 53.0449 12.3291 53.3203 cv
f
17.0278 57.0537 mo
17.1519 56.7559 17.2378 56.7061 17.6602 56.6826 cv
18.1372 56.6572 18.5898 55.8018 18.5898 55.2236 cv
18.5898 55.166 18.5708 55.1191 18.5469 55.1191 cv
18.5229 55.1191 18.479 55.1396 18.4209 55.1777 cv
18.2871 55.2656 18.1938 55.3223 18.1431 55.3447 cv
17.604 55.5869 li
17.2451 55.748 16.9292 56.2246 16.9292 56.6055 cv
16.9292 56.7324 16.9531 56.8398 17.0278 57.0537 cv
f
50.8931 52.6143 mo
50.9668 52.4102 li
51.042 52.1504 li
51.0552 52.1016 51.124 51.9951 51.2451 51.835 cv
51.4341 51.5859 51.5288 51.2754 51.5288 50.9111 cv
51.5288 50.7949 51.5 50.6904 51.4321 50.5527 cv
51.394 50.4785 51.375 50.4199 51.375 50.3799 cv
51.375 50.3564 51.3882 50.3252 51.4131 50.293 cv
51.437 50.2598 51.4639 50.2412 51.4868 50.2373 cv
51.499 50.2363 li
51.5479 50.2363 51.6279 50.29 51.6919 50.3672 cv
51.77 50.4609 51.8398 50.5146 51.8799 50.5146 cv
51.9639 50.5146 52.0532 50.374 52.1001 50.1621 cv
52.126 50.0508 52.1382 49.9893 52.1382 49.9775 cv
52.1382 49.8867 52.063 49.6543 51.9702 49.457 cv
51.9351 49.3818 51.917 49.3184 51.917 49.2686 cv
51.917 49.2012 51.9609 49.1504 52.019 49.1504 cv
52.0718 49.1504 52.1621 49.2061 52.2671 49.3076 cv
52.3179 49.3564 52.3672 49.3818 52.4072 49.3818 cv
52.5239 49.3818 52.6079 49.2637 52.6948 48.9736 cv
52.749 48.792 52.77 48.7109 52.77 48.6826 cv
52.77 48.6279 52.7451 48.5957 52.7041 48.5957 cv
52.6392 48.6016 li
52.4189 48.624 li
52.0801 48.624 51.6011 48.3916 51.376 48.1191 cv
50.855 47.4873 li
50.6538 47.2432 50.375 46.874 50.3921 46.874 cv
49.9639 46.5957 li
49.894 46.5508 49.8521 46.4932 49.8521 46.4434 cv
49.8521 46.374 49.9229 46.3271 50.0288 46.3271 cv
50.1279 46.3271 50.4321 46.4355 50.9858 46.6699 cv
51.522 46.8975 52.3628 47.0801 52.8691 47.0801 cv
53.7568 47.0801 54.4888 46.3633 54.4888 45.4912 cv
54.4888 45.0146 54.2759 44.5732 53.7529 43.958 cv
53.6548 43.8418 53.4868 43.7314 53.4102 43.7314 cv
53.3501 43.7314 53.3071 43.7764 53.3071 43.8398 cv
53.3071 43.8906 53.3271 43.9629 53.3638 44.0498 cv
53.3882 44.1094 53.4009 44.166 53.4009 44.2197 cv
53.4009 44.3057 53.3682 44.3555 53.311 44.3555 cv
53.1948 44.3555 53.0718 44.1631 52.9741 43.8281 cv
52.8511 43.4141 52.6089 43.167 52.0439 42.8809 cv
51.8281 42.7715 51.5469 42.6699 51.4561 42.6699 cv
51.4199 42.6699 51.394 42.7051 51.394 42.752 cv
51.394 42.8232 51.4209 42.8994 51.4692 42.9727 cv
51.5508 43.0986 51.6021 43.2197 51.6172 43.3271 cv
51.6182 43.3438 li
51.6182 43.416 51.5811 43.457 51.5151 43.457 cv
51.396 43.457 51.3691 43.4268 51.0972 43.0107 cv
50.958 42.7969 50.584 42.5137 50.2612 42.3789 cv
50.1582 42.3359 50.0508 42.3105 49.9448 42.3047 cv
49.9341 42.3037 li
49.8672 42.3037 49.8159 42.3359 49.8159 42.376 cv
49.8159 42.3906 49.8442 42.4502 49.8989 42.5459 cv
49.9258 42.6514 li
49.9258 42.708 49.8892 42.751 49.8389 42.751 cv
49.7271 42.751 49.3818 42.4688 49.1099 42.1563 cv
48.8149 41.8174 48.626 41.3828 48.626 41.0439 cv
48.626 40.334 49.3042 39.7021 50.0649 39.7021 cv
50.2549 39.7021 50.418 39.7354 50.54 39.7969 cv
51.1899 40.1309 li
51.9521 40.6328 li
52.3901 40.9209 52.9912 41.1377 53.355 41.1377 cv
53.4902 41.1377 53.5918 41.1182 53.9399 41.0234 cv
54.1211 40.9727 54.2339 40.9014 54.2339 40.833 cv
54.2271 40.8184 li
54.1621 40.7813 li
53.7529 40.7441 li
53.5269 40.7227 53.0098 40.4902 52.6021 40.2236 cv
51.7471 39.667 li
50.9858 39.3506 li
50.9292 39.3281 50.8921 39.2891 50.8921 39.2529 cv
50.8921 39.2139 50.9312 39.1826 50.978 39.1826 cv
50.98 39.1826 51.0508 39.1963 51.1899 39.2207 cv
51.896 39.4248 li
52.0718 39.4756 52.3589 39.6074 52.751 39.8154 cv
53.5259 40.2275 54.0288 40.4092 54.4019 40.4092 cv
54.8311 40.4092 55.147 40.1143 55.147 39.7139 cv
55.147 39.5801 55.1162 39.3604 55.0732 39.1836 cv
55.0508 39.0977 55.0132 39.0156 54.9609 38.9424 cv
54.9282 38.8965 54.8931 38.8682 54.8691 38.8682 cv
54.8159 38.8682 54.7852 38.9248 54.7852 39.0215 cv
54.7939 39.1475 li
54.8018 39.2549 li
54.8018 39.5977 54.668 39.7188 54.2891 39.7188 cv
53.981 39.7188 53.5669 39.5957 52.6201 39.2207 cv
51.7358 38.8711 51.1831 38.7373 50.6318 38.7373 cv
49.2339 38.7373 48.0078 39.8789 48.0078 41.1807 cv
48.0078 42.3047 48.7549 43.1621 50.2788 43.791 cv
51.8589 44.4414 li
53.1631 44.9785 53.644 45.3633 53.644 45.8701 cv
53.644 46.2949 53.25 46.5674 52.6348 46.5674 cv
52.3711 46.5674 52.04 46.4922 51.4321 46.2979 cv
49.9531 45.8271 48.9922 45.6318 48.146 45.6318 cv
46.769 45.6318 45.7861 46.0088 45.0039 46.8369 cv
44.8999 46.9463 44.8398 46.9805 44.748 46.9805 cv
44.686 46.9805 44.6211 46.9551 44.4839 46.874 cv
44.3418 46.791 44.186 46.7402 44.0742 46.7402 cv
43.9399 46.7402 43.729 46.8574 43.6289 46.9863 cv
43.4438 47.2275 li
43.3892 47.2979 43.3281 47.3398 43.2788 47.3398 cv
43.145 47.3398 42.9058 47.1104 42.7559 46.8369 cv
42.665 46.6699 42.6021 46.5068 42.5708 46.3535 cv
42.5469 46.2363 42.5322 46.0459 42.5322 45.8457 cv
42.5518 45.5 li
42.6079 45.1289 li
42.6338 44.9502 42.6528 44.8447 42.6631 44.8135 cv
42.6782 44.7676 42.7139 44.7383 42.7529 44.7383 cv
42.8491 44.7383 42.8921 44.8271 42.8921 45.0303 cv
42.8872 45.1475 li
42.8828 45.2314 li
42.8828 45.7598 43.0918 46.2432 43.3218 46.2432 cv
43.5039 46.2432 43.6631 45.9199 43.7969 45.2773 cv
43.8242 45.1475 43.876 45.0723 43.939 45.0723 cv
44.0132 45.0723 44.0581 45.167 44.1118 45.4443 cv
44.1479 45.624 44.2661 45.874 44.3911 46.0381 cv
44.4639 46.1328 44.541 46.1885 44.603 46.1885 cv
44.7559 46.1885 44.854 45.959 44.9302 45.4248 cv
44.96 45.2178 45.022 45.0889 45.0918 45.0889 cv
45.123 45.0889 45.1509 45.1035 45.1709 45.1289 cv
45.1841 45.1436 45.2271 45.2129 45.3018 45.332 cv
45.3481 45.4082 45.418 45.4727 45.5049 45.5186 cv
45.5981 45.5674 45.6729 45.5928 45.7212 45.5928 cv
45.7798 45.5928 45.8418 45.5674 45.896 45.5186 cv
45.979 45.4443 46.0259 45.3887 46.0259 45.3662 cv
46.0259 45.3379 45.9858 45.2803 45.9141 45.2031 cv
45.792 45.0713 45.6982 44.8984 45.5801 44.5889 cv
45.502 44.3857 45.4458 44.2441 45.4131 44.1621 cv
45.3848 44.0947 45.3521 44.0488 45.3198 44.0322 cv
45.2612 44.0176 li
45.1528 44.0322 li
45.1309 44.0381 45.001 44.0752 44.7632 44.1436 cv
44.6421 44.1611 li
44.5889 44.1611 44.5552 44.127 44.5552 44.0732 cv
44.5552 44.0244 44.6211 43.9336 44.707 43.8652 cv
45.1768 43.4912 45.4561 42.8643 45.561 41.9521 cv
45.625 41.3984 45.6958 41.1865 45.9331 40.8564 cv
45.9829 40.7861 46.0259 40.7441 46.0488 40.7441 cv
46.1201 40.7441 46.1592 40.8018 46.1592 40.9082 cv
46.1592 40.9805 46.1401 41.0703 46.1001 41.1719 cv
46.0732 41.2432 46.0591 41.3193 46.0591 41.3984 cv
46.063 41.4678 li
46.1001 41.5811 li
46.3042 41.5059 li
46.5269 41.2461 li
46.6592 41.0918 46.77 40.7432 46.77 40.4863 cv
46.77 40.3086 46.7271 40.1846 46.6201 40.0566 cv
46.5039 39.918 46.4229 39.8623 46.3379 39.8623 cv
46.2119 39.8711 li
46.0801 39.8809 li
45.96 39.8809 45.9009 39.8447 45.9009 39.7725 cv
45.9331 39.6299 li
45.9521 39.4248 li
45.8398 38.9609 li
45.7471 38.7383 li
45.6909 38.5518 li
45.561 38.6445 li
45.2832 38.8135 li
45.2109 38.8555 45.1362 38.9248 45.0601 39.0166 cv
44.7959 39.3369 44.7788 39.3516 44.6729 39.3516 cv
44.606 39.3516 44.5679 39.3271 44.5679 39.2803 cv
44.5771 39.2021 li
44.6138 39.0322 44.6328 38.9033 44.6328 38.8174 cv
44.6328 38.4932 44.3979 38.0039 44.1118 37.7354 cv
43.7251 38.1064 43.5181 38.5156 43.5181 38.9063 cv
43.5181 39.1289 li
43.5181 39.2139 43.4888 39.2588 43.4331 39.2588 cv
43.4248 39.2578 li
43.3799 39.25 43.334 39.2168 43.2949 39.165 cv
43.0718 38.8682 li
43.0562 38.8467 42.957 38.7656 42.7749 38.626 cv
42.7402 38.5996 42.6899 38.5557 42.626 38.4971 cv
42.5518 38.6445 li
42.3682 39.0137 42.3032 39.2354 42.292 39.5371 cv
42.2832 39.7842 42.2632 39.8574 42.2051 39.8574 cv
42.1768 39.8574 42.1362 39.8428 42.0879 39.8154 cv
41.8052 39.6572 41.7798 39.6475 41.6572 39.6475 cv
41.3242 39.6475 41.0962 39.8857 41.0962 40.2383 cv
41.0962 40.374 41.1729 40.582 41.3262 40.8564 cv
41.4951 41.1592 41.752 41.4365 41.8628 41.4365 cv
41.895 41.4365 41.9028 41.4141 41.9028 41.3213 cv
41.9019 41.2832 li
41.8828 40.9668 li
41.8462 40.7246 li
41.8428 40.6934 li
41.8428 40.623 41.8701 40.5898 41.9268 40.5898 cv
42.0962 40.5898 42.2422 41.0811 42.3662 42.0635 cv
42.4761 42.9268 42.7139 43.5225 43.0898 43.8652 cv
43.187 43.9531 43.2412 44.0264 43.2412 44.0674 cv
43.2412 44.0986 43.209 44.125 43.168 44.125 cv
43.1128 44.125 43.0278 44.0928 42.9229 44.0322 cv
42.8569 43.9941 42.7881 43.9736 42.7222 43.9736 cv
42.5371 43.9736 42.3281 44.1914 42.292 44.4219 cv
42.125 45.4814 li
41.9951 46.9668 li
41.9702 47.249 42.0078 47.625 42.106 48.082 cv
42.1929 48.4834 42.2358 48.7783 42.2358 48.9619 cv
42.2358 50.0752 41.543 50.9561 40.397 51.2959 cv
39.208 51.6484 li
38.4658 51.8691 38.103 52.3564 38 53.2646 cv
38.1909 53.1123 38.249 53.0879 38.54 53.042 cv
38.8921 52.9863 li
39.041 52.9619 39.1479 52.9307 39.208 52.8926 cv
39.2412 52.873 39.3101 52.8037 39.4131 52.6895 cv
39.729 52.3359 li
39.8481 52.2021 39.9541 52.126 40.021 52.126 cv
40.0649 52.126 40.1011 52.1738 40.1011 52.2334 cv
40.1011 52.3018 40.0552 52.4092 39.9702 52.541 cv
39.8809 52.6768 39.834 52.8438 39.834 53.0186 cv
39.834 53.2549 39.897 53.4063 40.1372 53.748 cv
40.168 53.6357 40.1929 53.5605 40.2119 53.5254 cv
40.2422 53.4648 40.335 53.334 40.4902 53.1348 cv
40.7471 52.8018 40.9331 52.4531 40.936 52.2988 cv
40.9409 52.0098 40.9658 51.916 41.0381 51.916 cv
41.1021 51.916 41.1108 51.9316 41.1401 52.0938 cv
41.147 52.1348 41.167 52.1729 41.1958 52.2061 cv
41.2388 52.2539 41.2808 52.2803 41.3101 52.2803 cv
41.333 52.2803 41.3828 52.2539 41.4561 52.2061 cv
41.585 52.1201 41.6851 52.0322 41.7529 51.9463 cv
41.8291 51.8496 41.8911 51.7373 41.939 51.6113 cv
42.001 51.4492 42.0322 51.3301 42.0322 51.2607 cv
42.0308 51.0195 li
42.0308 50.9561 42.0581 50.9053 42.0918 50.9053 cv
42.1372 50.9053 42.231 51.002 42.292 51.1104 cv
42.333 51.1826 42.3589 51.2041 42.4102 51.2041 cv
42.4219 51.2031 li
42.4878 51.1963 42.5469 51.1689 42.5889 51.1279 cv
42.8159 50.9072 42.9609 50.6348 42.9609 50.4326 cv
42.9419 50.0879 li
42.8682 49.8096 li
42.8638 49.7842 li
42.8638 49.7275 42.9058 49.6787 42.9551 49.6787 cv
43.0391 49.6787 43.1309 49.7969 43.2568 50.0703 cv
43.3179 50.1982 43.3721 50.2578 43.4268 50.2578 cv
43.5161 50.2578 43.585 50.1924 43.7598 49.9395 cv
43.9268 49.6982 li
43.9629 49.6445 43.9829 49.5801 43.9829 49.5107 cv
43.9829 49.4463 43.9629 49.3818 43.9268 49.3271 cv
43.7778 49.1035 li
43.7529 49.0674 43.7402 49.001 43.7402 48.916 cv
43.7402 48.665 43.832 48.3789 44.02 48.0449 cv
44.1558 47.8018 44.2368 47.6475 44.2612 47.5801 cv
44.29 47.502 44.3208 47.4678 44.3638 47.4678 cv
44.397 47.4678 44.4282 47.5127 44.4282 47.5615 cv
44.4102 47.7656 li
44.4102 48.0635 li
44.4351 48.1309 44.481 48.1582 44.5698 48.1582 cv
44.627 48.1582 44.6919 48.1436 44.7632 48.1191 cv
45.2271 47.9521 li
45.3379 47.9121 45.481 47.8438 45.6538 47.7471 cv
46.3818 47.3447 46.606 47.2607 46.9658 47.2607 cv
47.1802 47.2607 47.4541 47.3428 47.8462 47.5254 cv
47.9258 47.5615 47.9922 47.5811 48.0381 47.5811 cv
48.0908 47.5811 48.1499 47.5469 48.1992 47.4873 cv
48.2349 47.4443 48.2549 47.3936 48.2549 47.3477 cv
48.2549 47.2783 48.23 47.1982 48.1812 47.1162 cv
48.1201 47.0137 48.0679 46.8848 48.0679 46.8379 cv
48.0679 46.7891 48.1001 46.7578 48.1519 46.7578 cv
48.1948 46.7578 48.2588 46.8018 48.292 46.8564 cv
48.3481 46.9443 48.4902 47.1924 48.7192 47.5986 cv
49.0659 48.2129 49.5161 48.6426 49.9092 48.7324 cv
50.7261 48.918 li
50.978 48.9756 51.043 49.0732 51.043 49.3896 cv
51.043 49.9658 50.77 50.4736 50.2979 50.7764 cv
49.6289 51.2031 li
49.3862 51.3584 49.1841 51.7852 49.1841 52.1416 cv
49.1841 52.3711 49.2388 52.7764 49.313 53.0977 cv
49.4438 52.9678 li
49.7598 52.7822 li
50.0381 52.5029 li
50.187 52.0938 li
50.335 51.7217 li
50.4082 51.542 50.4932 51.4248 50.5508 51.4248 cv
50.6162 51.4248 50.6519 51.5273 50.6519 51.708 cv
50.6509 51.7598 li
50.6499 51.8291 li
50.6499 52.0967 50.686 52.2129 50.8931 52.6143 cv
f
39.9141 58.2432 mo
40.1392 58.0332 40.1782 58.0176 40.8062 57.8896 cv
41.3149 57.7861 41.5518 57.5547 41.6611 57.0537 cv
41.7402 56.6846 41.792 56.6162 42.125 56.4229 cv
42.2319 56.3604 42.313 56.2979 42.3662 56.2373 cv
42.4072 56.1904 42.4409 56.1621 42.458 56.1621 cv
42.4951 56.1621 42.5239 56.1992 42.5239 56.2441 cv
42.5239 56.3086 42.4819 56.416 42.4038 56.5527 cv
42.3521 56.6416 42.3281 56.7529 42.3281 56.9082 cv
42.3281 57.2061 42.3901 57.4092 42.5518 57.6494 cv
42.665 57.4014 42.7271 57.332 43.0161 57.1279 cv
43.3848 56.8701 43.5259 56.5703 43.5918 55.9023 cv
43.6211 55.6201 43.6748 55.4727 43.752 55.4727 cv
43.7861 55.4727 43.8169 55.4961 43.834 55.5313 cv
43.9639 55.8096 li
43.981 55.8467 44.0269 55.8701 44.0811 55.8701 cv
44.1338 55.8701 44.2319 55.8154 44.3159 55.7354 cv
44.5771 55.4941 li
44.687 55.3916 44.7598 55.1348 44.7998 54.7129 cv
44.814 54.5596 44.8672 54.4531 44.9292 54.4531 cv
44.9678 54.4531 45.0059 54.4912 45.022 54.5459 cv
45.1338 54.918 li
45.1611 55.0059 45.2139 55.0674 45.2661 55.0674 cv
45.29 55.0674 45.3418 55.0342 45.4131 54.9736 cv
45.5142 54.8877 45.6011 54.7939 45.6729 54.6953 cv
45.7578 54.5791 45.8032 54.4482 45.8032 54.3242 cv
45.8032 54.0078 li
45.8032 53.9395 45.8291 53.8672 45.877 53.8027 cv
45.9141 53.7559 45.9438 53.7275 45.96 53.7275 cv
46.001 53.7275 46.042 53.7646 46.063 53.8223 cv
46.1372 54.0264 li
46.1699 54.1162 46.2388 54.1748 46.311 54.1748 cv
46.4102 54.1748 46.5078 54.0908 46.6582 53.8779 cv
46.6992 53.8184 46.7368 53.7676 46.769 53.7285 cv
46.853 53.627 46.8989 53.5439 46.8989 53.4941 cv
46.8989 53.4678 46.873 53.4209 46.8252 53.3584 cv
46.5542 53.0059 46.416 52.5801 46.416 52.0957 cv
46.416 51.4785 46.6499 50.959 47.3628 49.9951 cv
47.79 49.4189 48.0322 48.8799 48.0322 48.5068 cv
48.0322 48.3994 47.9829 48.3457 47.8862 48.3457 cv
47.8188 48.3457 47.75 48.3682 47.6611 48.416 cv
47.5918 48.4531 47.543 48.4727 47.52 48.4727 cv
47.4858 48.4727 47.4419 48.4453 47.4009 48.3975 cv
47.27 48.249 li
47.1782 48.1006 li
47.1411 48.042 47.083 48.0068 47.0239 48.0068 cv
47.0142 48.0068 46.9658 48.0186 46.8799 48.0449 cv
46.7129 48.0635 li
46.52 48.0713 46.4482 48.1406 46.4482 48.3232 cv
46.4531 48.4346 li
46.4561 48.5166 li
46.4561 48.6807 46.313 48.9297 46.1191 49.1035 cv
45.7661 49.4199 li
45.3311 49.8076 44.9932 50.4297 44.9932 50.8408 cv
44.9932 51.0176 45.0498 51.3037 45.1528 51.6484 cv
45.3188 52.2041 45.3789 52.4678 45.3789 52.6494 cv
45.3789 53.54 44.0161 54.7139 41.4941 55.9951 cv
40.2139 56.6465 39.8921 57.0313 39.8921 57.9141 cv
39.9141 58.2432 li
f
38.688 38.7568 mo
38.688 38.9424 li
38.6909 39.2168 li
38.6909 39.3174 38.6812 39.3848 38.6509 39.5176 cv
38.5918 39.7764 38.5762 39.8662 38.5762 39.9385 cv
38.5762 40.2949 38.626 40.4688 38.8369 40.8369 cv
38.9521 41.0391 39.0269 41.2842 39.0269 41.4609 cv
39.0269 41.5352 38.9971 41.5801 38.9458 41.5801 cv
38.915 41.5801 38.8809 41.5596 38.855 41.5244 cv
38.707 41.3203 li
38.5879 41.1572 38.4761 41.1133 38.1758 41.1133 cv
37.8521 41.1338 li
37.9819 41.4521 38.0229 41.5723 38.0752 41.7842 cv
38.2251 42.3906 38.2471 42.4336 38.5771 42.7324 cv
38.9082 43.0322 38.939 43.0693 38.939 43.1758 cv
38.939 43.2607 38.8828 43.3271 38.811 43.3271 cv
38.688 43.3076 li
38.6152 43.2998 li
38.5142 43.2998 38.4229 43.4863 38.4229 43.6943 cv
38.4229 43.8115 38.4702 44.001 38.54 44.1621 cv
38.5859 44.2715 38.6309 44.3457 38.6699 44.3848 cv
38.855 44.5713 li
38.9028 44.6191 38.9302 44.6865 38.9302 44.7607 cv
38.9302 44.8506 38.8789 44.9258 38.8169 44.9258 cv
38.7798 44.9258 38.7231 44.9063 38.6509 44.8682 cv
38.605 44.8438 38.5601 44.8311 38.521 44.8311 cv
38.438 44.8311 38.397 44.8809 38.397 44.9824 cv
38.4282 45.2578 li
38.54 45.7412 li
38.564 45.8477 38.6338 45.9688 38.7441 46.0947 cv
38.8389 46.2031 38.9341 46.2793 39.0229 46.3174 cv
39.2578 46.4199 39.3818 46.4746 39.394 46.4844 cv
39.4292 46.5098 39.4492 46.5664 39.4492 46.6328 cv
39.4492 46.7051 39.394 46.7627 39.3262 46.7627 cv
39.3052 46.7627 39.2412 46.751 39.1338 46.7256 cv
38.9448 46.707 li
38.7568 46.707 38.7441 46.7168 38.7441 46.8652 cv
38.7441 46.958 38.7559 47.0547 38.7808 47.1533 cv
38.855 47.4502 li
38.9341 47.7637 39.0361 47.9326 39.147 47.9326 cv
39.1719 47.9326 39.2192 47.9072 39.2822 47.8594 cv
39.5508 47.6533 40.0908 47.4688 40.4292 47.4688 cv
40.7788 47.4688 41.1782 47.5098 41.3262 47.5615 cv
41.4111 47.5908 41.4712 47.6064 41.5049 47.6064 cv
41.5498 47.6064 41.564 47.5596 41.5679 47.3945 cv
41.605 47.0596 li
41.6792 46.4844 li
41.7349 46.0566 li
41.7349 45.8154 li
41.668 45.873 41.6182 45.916 41.5859 45.9463 cv
41.269 46.2432 41.0698 46.3359 40.7441 46.3359 cv
39.8892 46.3359 39.3989 45.376 39.3989 43.7002 cv
39.3989 43.0078 39.501 42.0322 39.6909 40.9121 cv
39.731 40.6738 39.75 40.5098 39.75 40.3945 cv
39.75 39.7852 39.3628 39.1865 38.688 38.7568 cv
f
39.9512 42.918 mo
40.1191 42.75 li
40.2861 42.6016 li
40.4229 42.4805 40.5361 42.2217 40.5361 42.0322 cv
40.5361 41.9443 40.5161 41.8623 40.4722 41.7656 cv
40.4072 41.627 40.2832 41.5029 40.208 41.5029 cv
40.145 41.5029 40.0879 41.6572 40.063 41.8965 cv
40.0249 42.1738 li
39.9702 42.4531 li
39.9512 42.7324 li
39.9512 42.918 li
f
38.3159 50.5146 mo
38.5059 50.5869 38.5459 50.6182 38.7441 50.8496 cv
39 51.1504 39.1431 51.2217 39.4858 51.2217 cv
39.5771 51.2217 39.666 51.209 39.7471 51.1836 cv
39.9888 51.1104 li
40.1738 51.0537 li
40.2632 51.0283 40.3232 50.9893 40.3232 50.959 cv
40.3232 50.9209 40.1758 50.7969 39.9512 50.6445 cv
39.8032 50.5449 39.6538 50.459 39.5059 50.3857 cv
39.3452 50.3057 39.2119 50.2695 39.0801 50.2695 cv
38.8179 50.2695 38.5659 50.3506 38.3159 50.5146 cv
f
40.8428 55.958 mo
41.1709 55.8154 41.2861 55.7568 41.6611 55.5498 cv
41.9858 55.3691 42.166 55.2695 42.1992 55.252 cv
42.543 55.0713 42.7012 54.9424 42.7012 54.8457 cv
42.7012 54.7236 42.4922 54.6533 42.1318 54.6533 cv
41.4141 54.6533 40.8242 55.1445 40.8242 55.7451 cv
40.8428 55.958 li
f
48.3848 51.2402 mo
48.6479 51.1846 48.7378 51.1172 48.8682 51.1113 cv
49.2021 51.1279 li
49.2432 51.1143 49.3179 51.0645 49.4248 50.9805 cv
49.4839 50.9336 49.5708 50.8721 49.6851 50.7939 cv
50.0571 50.541 50.0762 50.5244 50.0762 50.4434 cv
50.0762 50.3398 49.9258 50.29 49.6128 50.29 cv
49.0269 50.29 48.6709 50.5654 48.3848 51.2402 cv
f
10.3032 6.47119 mo
10.21 6.21094 li
10.1841 6.06201 li
10.1841 5.90918 10.2598 5.8252 10.4712 5.74609 cv
10.8379 5.60791 10.9541 5.5459 11.1021 5.41211 cv
11.3071 5.22607 li
11.3262 5.22021 li
11.3789 5.22021 11.4189 5.27979 11.4189 5.35791 cv
11.4189 5.59521 11.166 6.02979 10.9028 6.47705 cv
10.71 6.80322 10.6211 7.00977 10.542 7.00977 cv
10.4521 7.00977 10.3608 6.86719 10.3408 6.69385 cv
10.3032 6.47119 li
true sop
0 0 0 1 nzopmsc
f
9.20801 5.72803 mo
9.52295 5.89502 li
9.60889 5.94092 9.65576 6.00293 9.65576 6.07422 cv
9.63477 6.19189 li
9.58789 6.34814 9.625 6.52197 9.62207 6.58789 cv
9.60693 6.9209 9.35498 6.91699 9.25195 6.91699 cv
9.19189 6.91699 9.22412 6.87793 9.07715 6.71191 cv
8.66797 6.24805 li
8.54199 6.104 8.43408 5.77979 8.39014 5.41211 cv
8.38721 5.36377 li
8.38721 5.26416 8.41895 5.2251 8.5 5.2251 cv
8.5498 5.2251 8.64209 5.26709 8.70605 5.31885 cv
9.20801 5.72803 li
f
10.3218 7.66016 mo
10.6191 7.47412 li
10.793 7.51416 li
10.998 7.51416 11.0469 7.57422 11.0469 7.7998 cv
11.0469 8.13086 10.8408 8.26904 10.4702 9.20215 cv
10.3062 9.61279 10.2729 9.85303 10.0288 9.85303 cv
9.75586 9.85303 9.5498 9.63086 9.33789 9.10889 cv
9.09619 8.51416 li
8.9248 8.09424 8.85107 7.8418 8.85107 7.68896 cv
8.85107 7.54688 8.95996 7.4541 9.12793 7.4541 cv
9.21777 7.4541 9.30908 7.47998 9.39307 7.52979 cv
9.53711 7.61523 9.61084 7.6582 9.61621 7.66016 cv
9.83105 7.68115 li
9.93213 7.67822 li
10.3218 7.66016 li
f
45.0278 6.5332 mo
44.874 6.21094 li
44.8481 6.06201 li
44.8481 5.90283 44.916 5.83203 45.1528 5.74609 cv
45.3901 5.66016 45.646 5.521 45.7661 5.41211 cv
45.9702 5.22607 li
45.9902 5.22021 li
46.042 5.22021 46.082 5.27979 46.082 5.35791 cv
46.082 5.59521 45.8652 5.96924 45.6011 6.41602 cv
45.4082 6.74219 45.2852 7.00977 45.2061 7.00977 cv
45.1152 7.00977 45.0239 6.86719 45.0039 6.69385 cv
45.0278 6.5332 li
f
43.8711 5.72803 mo
44.187 5.89502 li
44.2749 5.94189 44.3271 6.02197 44.3271 6.11279 cv
44.3159 6.19189 li
44.2241 6.52686 li
44.168 6.89795 li
44.1611 6.94189 44.1201 6.97412 44.0698 6.97412 cv
44.0571 6.97217 li
43.979 6.94922 43.7822 6.86523 43.6528 6.71777 cv
43.3721 6.24805 li
43.3301 6.2002 43.2202 6.02197 43.1279 5.72803 cv
43.0942 5.62109 43.0698 5.51514 43.0542 5.41211 cv
43.0498 5.35986 li
43.0498 5.26611 43.085 5.2251 43.1641 5.2251 cv
43.2129 5.2251 43.3052 5.26709 43.3701 5.31885 cv
43.8711 5.72803 li
f
45.0039 7.66016 mo
45.2832 7.47412 li
45.3901 7.45117 li
45.5942 7.45117 45.832 7.65576 45.832 7.86914 cv
45.832 8.05176 45.5859 8.16113 45.4868 8.4209 cv
45.2832 9.25781 li
45.1309 9.65479 44.937 9.85205 44.6968 9.85205 cv
44.417 9.85205 44.2051 9.62695 44.001 9.10889 cv
43.9058 8.86816 43.8252 8.66992 43.7598 8.51416 cv
43.605 8.14893 43.522 7.87891 43.522 7.74023 cv
43.522 7.56104 43.625 7.4541 43.7949 7.4541 cv
43.8828 7.4541 43.9731 7.47998 44.0571 7.52979 cv
44.1968 7.61279 44.272 7.65723 44.2798 7.66016 cv
44.4961 7.68115 li
44.5952 7.67822 li
45.0039 7.66016 li
f
8.74316 40.4473 mo
8.6499 40.168 li
8.62988 40.0859 li
8.62988 40.0586 8.66504 40.0371 8.70801 40.0371 cv
8.75098 40.0371 8.85107 40.0879 8.9292 40.1504 cv
9.00977 40.2148 9.06201 40.21 9.18896 40.2422 cv
9.69482 40.374 9.80176 40.4668 9.80176 40.7119 cv
9.7832 41.0234 li
9.70898 41.3008 li
9.67676 41.4209 9.64697 41.4619 9.58984 41.4619 cv
9.5498 41.4619 9.22998 41.2314 9.18896 41.1719 cv
9.00293 40.9121 li
8.74316 40.4473 li
f
10.9912 40.9102 mo
10.749 41.3389 li
10.6899 41.4053 10.6592 41.4404 10.6572 41.4414 cv
10.6382 41.4443 li
10.5391 41.4443 10.439 41.2178 10.4331 40.9863 cv
10.396 40.6143 li
10.4248 40.4609 10.5161 40.3936 10.749 40.3535 cv
10.936 40.3223 11.064 40.2842 11.1211 40.2422 cv
11.2979 40.1162 11.3979 40.0479 11.418 40.0391 cv
11.4482 40.0322 li
11.5 40.0322 11.5352 40.0684 11.5352 40.123 cv
11.5288 40.1504 li
11.3989 40.4658 li
10.9912 40.9102 li
f
10.5078 42.1738 mo
10.8052 42.0264 li
10.8569 42.001 10.9048 41.9873 10.9458 41.9873 cv
11.0908 41.9873 11.1982 42.0928 11.1982 42.29 cv
11.1982 42.502 11.0322 42.7871 10.8052 43.1973 cv
10.5591 43.6396 10.375 43.9404 10.1841 43.9404 cv
9.91797 43.9404 9.53906 43.5146 9.16992 42.8057 cv
9.08398 42.6396 9.02979 42.4414 9.02979 42.29 cv
9.02979 42.0537 9.13184 41.9307 9.3291 41.9307 cv
9.41016 41.9307 9.48486 41.9512 9.54199 41.9893 cv
9.70898 42.0996 li
9.85498 42.1973 10.02 42.25 10.1821 42.25 cv
10.2979 42.25 10.4102 42.2236 10.5078 42.1738 cv
f
42.7749 39.9268 mo
43.0352 40.0938 li
43.1831 40.1895 43.3071 40.2578 43.4058 40.2979 cv
43.6929 40.416 43.7969 40.459 43.7969 40.5684 cv
43.7969 40.6094 43.7842 40.708 43.7598 40.7813 cv
43.731 40.8643 43.7129 40.9512 43.7041 41.041 cv
43.6782 41.2949 43.5249 41.3574 43.4229 41.3574 cv
43.2988 41.3574 43.167 41.165 42.9609 40.7998 cv
42.8682 40.6348 42.7349 40.3047 42.6631 40.0566 cv
42.6528 39.9863 li
42.6528 39.9404 42.6812 39.915 42.7319 39.915 cv
42.7749 39.9268 li
f
45.2832 40.5752 mo
44.855 41.0049 li
44.7051 41.2051 44.7051 41.3789 44.6699 41.4131 cv
44.6421 41.4404 44.5962 41.459 44.54 41.4678 cv
44.5112 41.4707 li
44.4028 41.4707 44.3232 41.3936 44.3159 41.2832 cv
44.2798 40.6514 li
44.2788 40.6318 li
44.2788 40.5098 44.3462 40.4473 44.4429 40.4248 cv
44.8369 40.3174 li
45.2461 40.1133 li
45.3652 40.0527 45.4009 40.0381 45.4199 40.0381 cv
45.4692 40.0381 45.5088 40.0859 45.5088 40.1445 cv
45.5088 40.1719 45.4951 40.2119 45.4692 40.2607 cv
45.2832 40.5752 li
f
43.4058 41.8379 mo
43.6851 42.0449 li
43.7539 42.0859 43.8398 42.1074 43.9341 42.1074 cv
44.0459 42.1074 44.2139 42.0615 44.3721 41.9893 cv
44.6138 41.8779 li
44.6689 41.8516 44.7178 41.8389 44.7588 41.8389 cv
44.9072 41.8389 45.0239 41.9961 45.0239 42.1943 cv
45.0239 42.4668 44.8271 42.75 44.54 43.1592 cv
44.3359 43.5869 li
44.1729 43.8193 44.0659 43.9023 43.9341 43.9023 cv
43.7119 43.9023 43.6069 43.7773 43.2759 43.1221 cv
43.0391 42.6514 42.9419 42.3652 42.9419 42.1357 cv
42.9419 41.9395 43.043 41.8027 43.1899 41.8027 cv
43.25 41.8027 43.3252 41.7891 43.4058 41.8379 cv
f
9.91309 8.19922 mo
9.67188 8.19922 li
9.63623 8.19922 9.60107 8.22021 9.5791 8.25391 cv
9.54199 8.34717 li
9.63477 8.79297 li
9.70898 9.18311 li
9.75 9.39795 9.82813 9.48193 9.98779 9.48193 cv
10.1709 9.48193 10.2832 9.35693 10.3032 9.12695 cv
10.3408 8.71924 li
10.3652 8.4458 10.3779 8.30518 10.3779 8.29395 cv
10.3779 8.25391 10.3579 8.21289 10.3218 8.18018 cv
10.2949 8.15479 10.2622 8.14111 10.228 8.14111 cv
10.21 8.14307 li
9.91309 8.19922 li
false sop
1 /1 /CSD get_res sepcs
1 sep
f
44.5771 8.19922 mo
44.354 8.19922 li
44.3198 8.19922 44.2852 8.22021 44.2612 8.25391 cv
44.2251 8.30713 44.2051 8.33984 44.2051 8.34717 cv
44.2979 8.79297 li
44.3721 9.18311 li
44.4141 9.39795 44.4492 9.48193 44.6089 9.48193 cv
44.791 9.48193 44.9458 9.35693 44.9668 9.12695 cv
45.0039 8.71924 li
45.0288 8.4458 45.041 8.30518 45.041 8.29395 cv
45.041 8.25391 45.021 8.21289 44.9858 8.18018 cv
44.959 8.15479 44.9248 8.14111 44.8911 8.14111 cv
44.874 8.14307 li
44.5771 8.19922 li
f
10.0811 42.6211 mo
9.87598 42.583 li
9.84521 42.5811 li
9.72705 42.5811 9.66797 42.6494 9.66797 42.7832 cv
9.66797 42.9697 9.81494 43.3184 10.0059 43.5869 cv
10.041 43.6348 10.0942 43.665 10.1489 43.665 cv
10.269 43.665 10.353 43.4385 10.415 43.0684 cv
10.4712 42.7881 li
10.4751 42.7363 li
10.4751 42.6211 10.4419 42.5801 10.3472 42.5801 cv
10.3032 42.583 li
10.0811 42.6211 li
f
43.6479 42.8623 mo
43.667 43.2148 li
43.6748 43.376 43.8081 43.5342 43.937 43.5342 cv
44.1079 43.5342 44.23 43.2773 44.2979 42.8818 cv
44.3291 42.7031 44.3398 42.6738 44.3398 42.623 cv
44.3398 42.4873 44.2939 42.4502 44.1182 42.4502 cv
44.02 42.4531 li
43.8892 42.4531 li
43.8062 42.4502 li
43.6909 42.4502 43.646 42.542 43.646 42.7773 cv
43.6479 42.8623 li
f
22.731 24.8618 mo
24.6982 24.8618 li
24.9199 24.3931 25.2231 24.188 25.6919 24.188 cv
26.1582 24.188 26.4561 24.3828 26.7222 24.8618 cv
28.333 24.8618 li
28.5288 24.4331 28.9141 24.187 29.3892 24.187 cv
29.8271 24.187 30.249 24.4712 30.3931 24.8618 cv
31.8921 24.8618 li
32.1182 24.4258 32.4648 24.187 32.874 24.187 cv
33.291 24.187 33.6289 24.376 33.877 24.749 cv
33.9531 24.8618 li
36.0322 24.8618 li
36.0322 34.4912 li
34.2148 34.4912 li
34.2148 38.1807 li
32.0791 38.1807 li
32.0791 34.4912 li
26.6841 34.4912 li
26.6841 38.1807 li
24.5488 38.1807 li
24.5488 34.4531 li
22.731 34.4531 li
22.731 24.8618 li
true sop
0 0 0 1 nzopmsc
f
23.5068 33.748 mo
35.3198 33.748 li
35.3198 25.6528 li
23.5068 25.6528 li
23.5068 33.748 li
cp
false sop
1 /0 /CSD get_res sepcs
1 sep
f
24.7358 27.5029 mo
24.4258 27.5029 24.1738 27.7549 24.1738 28.0649 cv
24.1738 28.376 24.4258 28.627 24.7358 28.627 cv
25.0459 28.627 25.2979 28.376 25.2979 28.0649 cv
25.2979 27.7549 25.0459 27.5029 24.7358 27.5029 cv
1 /1 /CSD get_res sepcs
1 sep
f
0.152 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
24.7358 27.5029 mo
24.4258 27.5029 24.1738 27.7549 24.1738 28.0649 cv
24.1738 28.376 24.4258 28.627 24.7358 28.627 cv
25.0459 28.627 25.2979 28.376 25.2979 28.0649 cv
25.2979 27.7549 25.0459 27.5029 24.7358 27.5029 cv
cp
true sop
0 0 0 1 nzopmsc
@
34.0088 27.5029 mo
33.6982 27.5029 33.4468 27.7549 33.4468 28.0649 cv
33.4468 28.376 33.6982 28.627 34.0088 28.627 cv
34.3188 28.627 34.5708 28.376 34.5708 28.0649 cv
34.5708 27.7549 34.3188 27.5029 34.0088 27.5029 cv
false sop
1 /1 /CSD get_res sepcs
1 sep
f
34.0088 27.5029 mo
33.6982 27.5029 33.4468 27.7549 33.4468 28.0649 cv
33.4468 28.376 33.6982 28.627 34.0088 28.627 cv
34.3188 28.627 34.5708 28.376 34.5708 28.0649 cv
34.5708 27.7549 34.3188 27.5029 34.0088 27.5029 cv
cp
true sop
0 0 0 1 nzopmsc
@
24.7358 31.9048 mo
24.4258 31.9048 24.1738 32.1572 24.1738 32.4678 cv
24.1738 32.7778 24.4341 33.0288 24.7549 33.0288 cv
25.0552 33.0288 25.2979 32.7778 25.2979 32.4678 cv
25.2979 32.1572 25.0459 31.9048 24.7358 31.9048 cv
false sop
1 /1 /CSD get_res sepcs
1 sep
f
24.7358 31.9048 mo
24.4258 31.9048 24.1738 32.1572 24.1738 32.4678 cv
24.1738 32.7778 24.4341 33.0288 24.7549 33.0288 cv
25.0552 33.0288 25.2979 32.7778 25.2979 32.4678 cv
25.2979 32.1572 25.0459 31.9048 24.7358 31.9048 cv
cp
true sop
0 0 0 1 nzopmsc
@
34.0088 31.9048 mo
33.6982 31.9048 33.4468 32.1572 33.4468 32.4678 cv
33.4468 32.7778 33.6982 33.0288 34.0088 33.0288 cv
34.3188 33.0288 34.5708 32.7778 34.5708 32.4678 cv
34.5708 32.1572 34.3188 31.9048 34.0088 31.9048 cv
false sop
1 /1 /CSD get_res sepcs
1 sep
f
34.0088 31.9048 mo
33.6982 31.9048 33.4468 32.1572 33.4468 32.4678 cv
33.4468 32.7778 33.6982 33.0288 34.0088 33.0288 cv
34.3188 33.0288 34.5708 32.7778 34.5708 32.4678 cv
34.5708 32.1572 34.3188 31.9048 34.0088 31.9048 cv
cp
true sop
0 0 0 1 nzopmsc
@
26.4971 30.2012 mo
27.2578 31.1548 28.2202 31.625 29.4072 31.625 cv
30.5068 31.625 31.2642 31.2319 32.1538 30.2012 cv
31.2661 29.29 30.4399 28.9082 29.3521 28.9082 cv
28.2109 28.9082 27.1812 29.375 26.4971 30.2012 cv
false sop
1 /1 /CSD get_res sepcs
1 sep
f
27.0591 30.2012 mo
27.8428 29.5908 28.5068 29.3379 29.3252 29.3379 cv
30.1509 29.3379 30.7681 29.5801 31.5742 30.2192 cv
30.873 30.915 30.2568 31.1748 29.312 31.1748 cv
28.4722 31.1748 27.709 30.8442 27.0591 30.2012 cv
0 0 0 1 cmyk
f
28.0142 30.0142 mo
28.4839 30.3071 28.856 30.4258 29.2939 30.4258 cv
29.8101 30.4258 30.2402 30.2959 30.6558 30.0142 cv
30.2168 29.8032 29.7622 29.6948 29.314 29.6948 cv
28.8462 29.6948 28.4082 29.8018 28.0142 30.0142 cv
1 /1 /CSD get_res sepcs
1 sep
f
23.3418 26.479 mo
35.4849 26.479 li
35.4849 26.0659 li
23.3418 26.0659 li
23.3418 26.479 li
cp
0 0 0 1 cmyk
f
0.05 lw
23.3418 26.479 mo
35.4849 26.479 li
35.4849 26.0659 li
23.3418 26.0659 li
23.3418 26.479 li
cp
@
25.2041 25.5361 mo
25.2041 26.6982 li
25.2041 26.9741 25.4209 27.1851 25.7041 27.1851 cv
26.0308 27.1851 26.2158 27.0088 26.2158 26.6982 cv
26.2158 25.5552 li
26.2158 25.1138 26.0361 24.8408 25.748 24.8408 cv
25.6909 24.8408 25.5991 24.8638 25.5229 24.8989 cv
25.4609 24.9282 25.416 24.9531 25.3911 24.9741 cv
25.3472 25.0122 25.3091 25.063 25.2788 25.124 cv
25.23 25.2261 25.2041 25.2959 25.2041 25.3301 cv
25.2041 25.5361 li
1 /1 /CSD get_res sepcs
1 sep
f
28.8569 26.4912 mo
28.8569 26.6982 li
28.8569 26.9741 29.0742 27.1851 29.3569 27.1851 cv
29.6841 27.1851 29.8691 27.0088 29.8691 26.6982 cv
29.8691 25.5552 li
29.8691 25.1182 29.688 24.8389 29.4038 24.8389 cv
29.0698 24.8389 28.8569 25.1118 28.8569 25.5361 cv
28.8569 26.4912 li
f
32.3979 25.5361 mo
32.3979 26.6982 li
32.3979 26.9741 32.6152 27.1851 32.897 27.1851 cv
33.2251 27.1851 33.4102 27.0088 33.4102 26.6982 cv
33.4102 25.5552 li
33.4102 25.1138 33.23 24.8408 32.9419 24.8408 cv
32.8838 24.8408 32.792 24.8638 32.7158 24.8989 cv
32.6538 24.9282 32.6099 24.9531 32.585 24.9741 cv
32.54 25.0122 32.502 25.063 32.4722 25.124 cv
32.4238 25.2261 32.3979 25.2959 32.3979 25.3301 cv
32.3979 25.5361 li
f
24.9419 36.7568 mo
26.0469 36.7568 li
26.0469 35.334 li
24.9419 35.334 li
24.9419 36.7568 li
cp
f
24.9419 37.5254 mo
26.0469 37.5254 li
26.0469 37.0762 li
24.9419 37.0762 li
24.9419 37.5254 li
cp
f
32.4722 36.7568 mo
33.5781 36.7568 li
33.5781 35.334 li
32.4722 35.334 li
32.4722 36.7568 li
cp
f
32.4722 37.5254 mo
33.5781 37.5254 li
33.5781 37.0762 li
32.4722 37.0762 li
32.4722 37.5254 li
cp
f
75.606 5.01904 mo
75.606 2.74023 74.4351 2.70801 73.1689 2.70801 cv
72.7891 2.70801 li
72.7891 1.75879 li
74.1499 1.75879 75.8281 1.88574 77.8218 1.88574 cv
79.7202 1.88574 81.3032 1.75879 82.5688 1.75879 cv
82.5688 2.70801 li
82.189 2.70801 li
80.9229 2.70801 79.6572 2.74023 79.6572 5.01904 cv
79.6572 15.937 li
79.6572 19.9561 81.144 22.7412 85.6699 22.7412 cv
89.8472 22.7412 91.6831 20.083 91.6831 15.8101 cv
91.6831 5.01904 li
91.6831 2.74023 90.48 2.70801 89.4038 2.70801 cv
88.771 2.70801 li
88.771 1.75879 li
90.0371 1.75879 91.335 1.88574 92.6011 1.88574 cv
93.835 1.88574 95.0371 1.75879 96.272 1.75879 cv
96.272 2.70801 li
95.6069 2.70801 li
94.7529 2.70801 93.582 2.74023 93.582 5.01904 cv
93.582 15.1138 li
93.582 22.2661 89.7842 24.3232 85.0688 24.3232 cv
78.9922 24.3232 75.606 22.1079 75.606 16.4429 cv
75.606 5.01904 li
0 0 0 1 cmyk
f
118.216 17.6138 mo
118.279 17.5508 li
118.279 5.68311 li
118.279 3.08789 116.475 2.70801 115.526 2.70801 cv
114.83 2.70801 li
114.83 1.75879 li
116.317 1.75879 117.773 1.88574 119.26 1.88574 cv
120.558 1.88574 121.855 1.75879 123.153 1.75879 cv
123.153 2.70801 li
122.678 2.70801 li
121.349 2.70801 119.861 2.96191 119.861 6.72803 cv
119.861 21.127 li
119.861 22.2349 119.893 23.3418 120.051 24.3232 cv
118.849 24.3232 li
102.551 6.1582 li
102.551 19.1968 li
102.551 21.9502 103.089 22.8989 105.525 22.8989 cv
106.063 22.8989 li
106.063 23.8491 li
104.703 23.8491 103.342 23.7222 101.981 23.7222 cv
100.557 23.7222 99.1011 23.8491 97.6768 23.8491 cv
97.6768 22.8989 li
98.1201 22.8989 li
100.304 22.8989 100.968 21.4121 100.968 18.8799 cv
100.968 5.55713 li
100.968 3.78418 99.5132 2.70801 98.0879 2.70801 cv
97.6768 2.70801 li
97.6768 1.75879 li
98.8799 1.75879 100.114 1.88574 101.316 1.88574 cv
102.266 1.88574 103.184 1.75879 104.133 1.75879 cv
118.216 17.6138 li
f
124.659 22.8989 mo
125.102 22.8989 li
126.242 22.8989 127.444 22.7412 127.444 21.0952 cv
127.444 4.51221 li
127.444 2.86719 126.242 2.70801 125.102 2.70801 cv
124.659 2.70801 li
124.659 1.75879 li
125.894 1.75879 127.792 1.88574 129.343 1.88574 cv
130.926 1.88574 132.824 1.75879 134.312 1.75879 cv
134.312 2.70801 li
133.869 2.70801 li
132.729 2.70801 131.527 2.86719 131.527 4.51221 cv
131.527 21.0952 li
131.527 22.7412 132.729 22.8989 133.869 22.8989 cv
134.312 22.8989 li
134.312 23.8491 li
132.793 23.8491 130.894 23.7222 129.311 23.7222 cv
127.761 23.7222 125.894 23.8491 124.659 23.8491 cv
124.659 22.8989 li
f
144.927 2.70801 mo
144.199 2.70801 li
143.028 2.70801 142.553 3.18311 142.553 3.59521 cv
142.553 3.75293 142.68 4.1958 142.838 4.60693 cv
148.25 18.6899 li
148.313 18.6899 li
153.345 5.5249 li
153.725 4.54395 153.756 3.97412 153.756 3.75293 cv
153.756 2.83496 152.807 2.70801 151.731 2.70801 cv
151.193 2.70801 li
151.193 1.75879 li
152.3 1.75879 153.503 1.88574 154.864 1.88574 cv
155.845 1.88574 156.858 1.75879 157.775 1.75879 cv
157.775 2.70801 li
157.459 2.70801 li
156.889 2.70801 156.288 2.80322 155.782 3.81592 cv
155.529 4.25879 150.908 15.937 148.851 21.1899 cv
148.439 22.2349 147.933 23.2788 147.553 24.3232 cv
146.382 24.3232 li
138.344 4.51221 li
137.743 3.0249 137.078 2.70801 135.686 2.70801 cv
135.369 2.70801 li
135.369 1.75879 li
136.983 1.75879 138.629 1.88574 140.243 1.88574 cv
141.794 1.88574 144.009 1.75879 144.927 1.75879 cv
144.927 2.70801 li
f
158.994 22.8989 mo
159.437 22.8989 li
160.576 22.8989 161.779 22.7412 161.779 21.0952 cv
161.779 4.51221 li
161.779 2.86719 160.576 2.70801 159.437 2.70801 cv
158.994 2.70801 li
158.994 1.75879 li
160.924 1.75879 164.216 1.88574 166.874 1.88574 cv
169.533 1.88574 172.824 1.75879 174.976 1.75879 cv
174.913 3.12012 174.944 5.20898 175.039 6.60107 cv
174.09 6.854 li
173.931 4.79688 173.552 3.15088 170.229 3.15088 cv
165.83 3.15088 li
165.83 11.4429 li
169.596 11.4429 li
171.495 11.4429 171.906 10.3672 172.096 8.6582 cv
173.045 8.6582 li
172.982 9.89209 172.951 11.127 172.951 12.3608 cv
172.951 13.563 172.982 14.7661 173.045 15.9692 cv
172.096 16.1582 li
171.906 14.2598 171.811 13.0249 169.628 13.0249 cv
165.83 13.0249 li
165.83 20.3989 li
165.83 22.4561 167.665 22.4561 169.691 22.4561 cv
173.488 22.4561 175.166 22.2031 176.115 18.5952 cv
177.001 18.8169 li
176.59 20.4941 176.21 22.1709 175.925 23.8491 cv
173.9 23.8491 170.26 23.7222 167.412 23.7222 cv
164.564 23.7222 160.798 23.8491 158.994 23.8491 cv
158.994 22.8989 li
f
181.437 5.11377 mo
181.437 2.80322 180.171 2.70801 179.19 2.70801 cv
178.621 2.70801 li
178.621 1.75879 li
179.633 1.75879 181.595 1.88574 183.526 1.88574 cv
185.425 1.88574 186.944 1.75879 188.621 1.75879 cv
192.609 1.75879 196.153 2.83496 196.153 7.3291 cv
196.153 10.1768 194.254 11.918 191.754 12.8989 cv
197.166 21 li
198.052 22.3301 198.685 22.709 200.236 22.8989 cv
200.236 23.8491 li
199.191 23.8491 198.178 23.7222 197.134 23.7222 cv
196.153 23.7222 195.14 23.8491 194.159 23.8491 cv
191.723 20.6519 189.634 17.2339 187.577 13.5952 cv
185.488 13.5952 li
185.488 20.3672 li
185.488 22.8042 186.627 22.8989 188.083 22.8989 cv
188.653 22.8989 li
188.653 23.8491 li
186.849 23.8491 185.013 23.7222 183.21 23.7222 cv
181.691 23.7222 180.203 23.8491 178.621 23.8491 cv
178.621 22.8989 li
179.19 22.8989 li
180.361 22.8989 181.437 22.3608 181.437 21.1899 cv
181.437 5.11377 li
cp
185.488 12.4561 mo
187.039 12.4561 li
190.203 12.4561 191.913 11.2529 191.913 7.51904 cv
191.913 4.70215 190.108 2.89795 187.292 2.89795 cv
186.343 2.89795 185.931 2.99316 185.488 3.0249 cv
185.488 12.4561 li
f
213.106 6.44287 mo
212.884 4.38623 211.555 2.42383 209.372 2.42383 cv
206.872 2.42383 205.479 3.91113 205.479 6.41113 cv
205.479 11.665 214.973 10.082 214.973 17.6768 cv
214.973 22.0449 211.366 24.3232 207.315 24.3232 cv
205.542 24.3232 203.833 23.6899 202.283 22.8989 cv
202.125 21.2852 201.903 19.7031 201.745 18.0889 cv
202.631 17.8989 li
203.011 20.5889 204.53 22.9312 207.536 22.9312 cv
209.688 22.9312 211.429 21.5698 211.429 19.3232 cv
211.429 13.7222 202.125 15.4619 202.125 7.83496 cv
202.125 3.72119 205.036 1.28418 209.119 1.28418 cv
210.005 1.28418 212.695 1.63184 213.676 1.75879 cv
213.676 3.24609 213.802 4.76514 213.992 6.28418 cv
213.106 6.44287 li
f
218.034 22.8989 mo
218.477 22.8989 li
219.616 22.8989 220.819 22.7412 220.819 21.0952 cv
220.819 4.51221 li
220.819 2.86719 219.616 2.70801 218.477 2.70801 cv
218.034 2.70801 li
218.034 1.75879 li
219.268 1.75879 221.167 1.88574 222.718 1.88574 cv
224.3 1.88574 226.199 1.75879 227.686 1.75879 cv
227.686 2.70801 li
227.243 2.70801 li
226.104 2.70801 224.902 2.86719 224.902 4.51221 cv
224.902 21.0952 li
224.902 22.7412 226.104 22.8989 227.243 22.8989 cv
227.686 22.8989 li
227.686 23.8491 li
226.167 23.8491 224.269 23.7222 222.686 23.7222 cv
221.135 23.7222 219.268 23.8491 218.034 23.8491 cv
218.034 22.8989 li
f
232.596 3.34082 mo
230.223 3.34082 230.128 3.91113 229.653 6.22119 cv
228.704 6.22119 li
228.83 5.33496 228.988 4.44922 229.083 3.53076 cv
229.21 2.64502 229.273 1.75879 229.273 0.84082 cv
230.033 0.84082 li
230.286 1.79102 231.077 1.75879 231.932 1.75879 cv
248.262 1.75879 li
249.116 1.75879 249.907 1.72705 249.971 0.777832 cv
250.73 0.904785 li
250.603 1.75879 250.477 2.61377 250.382 3.46777 cv
250.319 4.32324 250.319 5.17676 250.319 6.03076 cv
249.369 6.37891 li
249.306 5.20898 249.148 3.34082 247.027 3.34082 cv
241.837 3.34082 li
241.837 20.1782 li
241.837 22.6138 242.945 22.8989 244.464 22.8989 cv
245.065 22.8989 li
245.065 23.8491 li
243.831 23.8491 241.616 23.7222 239.907 23.7222 cv
238.008 23.7222 235.793 23.8491 234.559 23.8491 cv
234.559 22.8989 li
235.16 22.8989 li
236.9 22.8989 237.786 22.7412 237.786 20.2412 cv
237.786 3.34082 li
232.596 3.34082 li
f
261.141 13.5322 mo
254.811 4.85986 li
253.862 3.53076 253.261 2.70801 251.773 2.70801 cv
251.457 2.70801 li
251.457 1.75879 li
253.166 1.75879 254.716 1.88574 256.425 1.88574 cv
258.071 1.88574 259.59 1.75879 261.109 1.75879 cv
261.109 2.70801 li
260.698 2.70801 li
259.843 2.70801 259.052 2.93018 259.052 3.43604 cv
259.052 3.78418 259.432 4.1958 259.622 4.48096 cv
264.4 11.1899 li
268.325 5.5249 li
268.894 4.60693 269.306 4.06885 269.306 3.46777 cv
269.306 2.80322 267.945 2.70801 267.502 2.70801 cv
266.932 2.70801 li
266.932 1.75879 li
268.135 1.75879 269.337 1.88574 270.54 1.88574 cv
271.553 1.88574 272.565 1.75879 273.547 1.75879 cv
273.547 2.70801 li
272.47 2.70801 271.584 3.46777 271.078 4.16406 cv
265.191 12.4868 li
265.191 20.0508 li
265.191 22.7412 266.141 22.8989 267.818 22.8989 cv
268.42 22.8989 li
268.42 23.8491 li
266.552 23.8491 264.654 23.7222 263.261 23.7222 cv
261.679 23.7222 259.78 23.8491 257.913 23.8491 cv
257.913 22.8989 li
258.514 22.8989 li
260.381 22.8989 261.141 22.3931 261.141 20.3042 cv
261.141 13.5322 li
f
297.181 1.28418 mo
303.922 1.28418 309.302 5.46191 309.302 12.2021 cv
309.302 19.481 304.08 24.3232 297.34 24.3232 cv
290.63 24.3232 285.504 19.7661 285.504 12.9619 cv
285.504 6.37891 290.599 1.28418 297.181 1.28418 cv
cp
297.656 22.9312 mo
303.796 22.9312 304.871 17.519 304.871 12.8989 cv
304.871 8.27783 302.371 2.67676 297.118 2.67676 cv
291.58 2.67676 289.934 7.61377 289.934 11.854 cv
289.934 17.519 292.529 22.9312 297.656 22.9312 cv
f
318.204 11.4429 mo
322.634 11.4429 li
324.185 11.4429 324.66 10.4619 324.66 8.87988 cv
325.609 8.87988 li
325.546 10.019 325.483 11.127 325.483 12.2661 cv
325.483 13.563 325.514 14.8291 325.609 16.127 cv
324.66 16.127 li
324.66 14.355 324.153 13.0249 322.128 13.0249 cv
318.204 13.0249 li
318.204 21.0952 li
318.204 22.8682 319.659 22.8989 321.242 22.8989 cv
321.653 22.8989 li
321.653 23.8491 li
320.166 23.8491 318.014 23.7222 316.21 23.7222 cv
314.564 23.7222 312.634 23.8491 311.368 23.8491 cv
311.368 22.8989 li
311.811 22.8989 li
312.95 22.8989 314.153 22.7412 314.153 21.0952 cv
314.153 4.51221 li
314.153 2.86719 312.95 2.70801 311.811 2.70801 cv
311.368 2.70801 li
311.368 1.75879 li
313.298 1.75879 316.59 1.88574 319.248 1.88574 cv
321.906 1.88574 325.198 1.75879 327.35 1.75879 cv
327.286 3.12012 327.318 5.20898 327.413 6.60107 cv
326.464 6.854 li
326.274 4.6709 325.767 3.15088 323.267 3.15088 cv
318.204 3.15088 li
318.204 11.4429 li
f
98.3701 44.543 mo
97.252 40.6709 95.416 37.4766 89.4268 37.4766 cv
82.8799 37.4766 79.4458 42.627 79.4458 49.6143 cv
79.4458 56.2813 82.8398 63.0283 90.3848 63.0283 cv
94.6572 63.0283 97.4922 60.3525 98.5298 56.3613 cv
99.6479 56.5215 li
99.1289 58.6758 98.8491 60.832 98.6489 62.9883 cv
96.334 63.9873 93.1802 64.7852 89.5068 64.7852 cv
80.5239 64.7852 73.8569 59.874 73.8569 49.8525 cv
73.8569 40.9102 81.083 35.7197 89.3071 35.7197 cv
93.978 35.7197 95.4951 37.1582 99.248 37.7158 cv
99.208 39.9121 99.2881 42.1484 99.5679 44.3838 cv
98.3701 44.543 li
f
108.051 58.4766 mo
107.651 59.834 107.172 60.8721 107.172 61.5908 cv
107.172 62.7891 108.849 62.9883 110.166 62.9883 cv
110.606 62.9883 li
110.606 64.1855 li
109.009 64.1064 107.372 64.0264 105.775 64.0264 cv
104.338 64.0264 102.9 64.1064 101.463 64.1855 cv
101.463 62.9883 li
101.702 62.9883 li
103.26 62.9883 104.577 62.0703 105.176 60.3926 cv
111.564 42.0684 li
112.083 40.5908 112.801 38.5947 113.041 37.1182 cv
114.318 36.6787 115.915 35.8799 116.674 35.4014 cv
116.794 35.3613 116.874 35.3213 116.993 35.3213 cv
117.113 35.3213 117.193 35.3213 117.273 35.4414 cv
117.393 35.7598 117.512 36.1201 117.632 36.4395 cv
124.978 57.3193 li
125.457 58.7158 125.936 60.1943 126.455 61.3906 cv
126.934 62.5088 127.773 62.9883 129.09 62.9883 cv
129.33 62.9883 li
129.33 64.1855 li
127.533 64.1064 125.737 64.0264 123.82 64.0264 cv
121.864 64.0264 119.868 64.1064 117.832 64.1855 cv
117.832 62.9883 li
118.271 62.9883 li
119.189 62.9883 120.746 62.8291 120.746 61.8301 cv
120.746 61.3105 120.387 60.2344 119.948 58.9561 cv
118.391 54.3252 li
109.328 54.3252 li
108.051 58.4766 li
cp
113.879 40.791 mo
113.799 40.791 li
110.087 52.0889 li
117.552 52.0889 li
113.879 40.791 li
f
150.53 57.1992 mo
159.992 36.3193 li
161.189 36.3193 162.626 36.4785 164.064 36.4785 cv
165.461 36.4785 166.898 36.3193 168.296 36.3193 cv
168.296 37.5166 li
167.936 37.5166 li
166.739 37.5166 164.303 37.5967 164.223 39.3525 cv
164.184 40.3906 164.343 41.5889 164.423 42.4668 cv
165.94 60.7529 li
166.1 62.749 167.098 62.9092 169.493 62.9883 cv
169.493 64.1855 li
167.617 64.1064 165.661 64.0264 163.744 64.0264 cv
161.548 64.0264 159.353 64.1064 157.157 64.1855 cv
157.157 62.9883 li
159.233 62.8691 160.59 62.8691 160.59 61.1123 cv
160.59 60.6328 160.59 60.1943 160.55 59.1563 cv
159.433 42.3076 li
159.353 42.3076 li
149.172 64.7852 li
148.214 64.7852 li
138.553 42.7471 li
138.473 42.7471 li
137.115 60.2734 li
137.115 61.5508 137.435 62.1904 137.954 62.5488 cv
138.553 62.9092 139.391 62.9482 140.509 62.9883 cv
140.988 62.9883 li
140.988 64.1855 li
139.191 64.1064 137.355 64.0264 135.558 64.0264 cv
134.001 64.0264 132.404 64.1064 130.847 64.1855 cv
130.847 62.9883 li
131.406 62.9883 li
134.56 62.8691 134.68 61.5107 135.039 58.6367 cv
136.237 47.5381 li
136.556 44.7031 136.716 42.1084 136.716 40.5107 cv
136.716 38.2764 134.999 37.5166 133.243 37.5166 cv
132.723 37.5166 li
132.723 36.3193 li
134.361 36.3193 135.957 36.4785 137.594 36.4785 cv
138.792 36.4785 139.99 36.3193 141.187 36.3193 cv
150.53 57.1992 li
f
171.985 62.9883 mo
172.544 62.9883 li
173.981 62.9883 175.498 62.7891 175.498 60.7129 cv
175.498 39.793 li
175.498 37.7158 173.981 37.5166 172.544 37.5166 cv
171.985 37.5166 li
171.985 36.3193 li
173.742 36.3193 175.978 36.4785 178.213 36.4785 cv
180.489 36.4785 182.764 36.3193 184.601 36.3193 cv
191.308 36.3193 193.823 39.1143 193.823 42.5869 cv
193.823 46.6592 190.071 48.416 186.557 49.0547 cv
186.557 49.1348 li
190.909 49.0146 195.46 51.4502 195.46 56.2813 cv
195.46 60.5928 191.228 64.1855 186.038 64.1855 cv
184.042 64.1855 181.527 64.0264 179.052 64.0264 cv
176.576 64.0264 173.702 64.1855 171.985 64.1855 cv
171.985 62.9883 li
cp
180.609 59.3555 mo
180.609 62.1504 181.128 62.749 184.202 62.749 cv
187.595 62.749 190.111 59.9941 190.111 56.4414 cv
190.111 52.0088 187.156 49.9727 183.164 49.9727 cv
180.609 49.9727 li
180.609 59.3555 li
cp
180.609 48.5361 mo
182.565 48.5361 li
185.958 48.5361 188.474 47.0986 188.474 43.3457 cv
188.474 38.7539 185.719 37.7559 183.004 37.7559 cv
180.609 37.7559 li
180.609 48.5361 li
f
202.039 40.5508 mo
202.039 37.6367 200.442 37.5166 199.204 37.5166 cv
198.485 37.5166 li
198.485 36.3193 li
199.763 36.3193 202.238 36.4785 204.673 36.4785 cv
207.069 36.4785 208.985 36.3193 211.101 36.3193 cv
216.132 36.3193 220.603 37.6758 220.603 43.3457 cv
220.603 46.9395 218.208 49.1348 215.054 50.3721 cv
221.881 60.5928 li
222.999 62.2695 223.797 62.749 225.753 62.9883 cv
225.753 64.1855 li
224.436 64.1855 223.158 64.0264 221.841 64.0264 cv
220.603 64.0264 219.326 64.1855 218.088 64.1855 cv
215.014 60.1543 212.379 55.8418 209.784 51.251 cv
207.149 51.251 li
207.149 59.7949 li
207.149 62.8691 208.586 62.9883 210.422 62.9883 cv
211.141 62.9883 li
211.141 64.1855 li
208.866 64.1855 206.55 64.0264 204.274 64.0264 cv
202.358 64.0264 200.482 64.1855 198.485 64.1855 cv
198.485 62.9883 li
199.204 62.9883 li
200.681 62.9883 202.039 62.3096 202.039 60.832 cv
202.039 40.5508 li
cp
207.149 49.8145 mo
209.105 49.8145 li
213.097 49.8145 215.253 48.2959 215.253 43.585 cv
215.253 40.0322 212.978 37.7559 209.424 37.7559 cv
208.227 37.7559 207.708 37.876 207.149 37.916 cv
207.149 49.8145 li
f
227.35 62.9883 mo
227.909 62.9883 li
229.347 62.9883 230.864 62.7891 230.864 60.7129 cv
230.864 39.793 li
230.864 37.7158 229.347 37.5166 227.909 37.5166 cv
227.35 37.5166 li
227.35 36.3193 li
228.908 36.3193 231.303 36.4785 233.259 36.4785 cv
235.255 36.4785 237.651 36.3193 239.527 36.3193 cv
239.527 37.5166 li
238.968 37.5166 li
237.531 37.5166 236.014 37.7158 236.014 39.793 cv
236.014 60.7129 li
236.014 62.7891 237.531 62.9883 238.968 62.9883 cv
239.527 62.9883 li
239.527 64.1855 li
237.611 64.1855 235.215 64.0264 233.219 64.0264 cv
231.263 64.0264 228.908 64.1855 227.35 64.1855 cv
227.35 62.9883 li
f
242.387 62.9883 mo
242.946 62.9883 li
244.383 62.9883 245.9 62.7891 245.9 60.7129 cv
245.9 39.793 li
245.9 37.7158 244.383 37.5166 242.946 37.5166 cv
242.387 37.5166 li
242.387 36.3193 li
243.585 36.3193 246.22 36.4785 248.775 36.4785 cv
251.33 36.4785 253.486 36.3193 255.202 36.3193 cv
265.024 36.3193 271.052 41.8291 271.052 50.1729 cv
271.052 58.1582 264.345 64.665 256.24 64.1855 cv
254.484 64.1064 251.689 64.0264 248.974 64.0264 cv
246.259 64.0264 243.425 64.1855 242.387 64.1855 cv
242.387 62.9883 li
cp
251.01 59.5947 mo
251.01 62.3896 252.288 62.749 255.162 62.749 cv
261.949 62.749 265.463 57.0801 265.463 50.9307 cv
265.463 40.3906 260.113 37.7559 253.725 37.7559 cv
252.807 37.7559 251.889 37.876 251.01 37.9561 cv
251.01 59.5947 li
f
299.773 44.1035 mo
298.575 39.1943 295.182 37.4766 290.51 37.4766 cv
283.364 37.4766 279.851 42.7471 279.851 49.4141 cv
279.851 56.002 283.005 63.0283 290.63 63.0283 cv
292.547 63.0684 294.543 62.749 295.063 62.2695 cv
295.063 55.7617 li
295.063 54.125 293.505 53.7256 292.028 53.7256 cv
291.509 53.7256 li
291.509 52.5283 li
293.505 52.6084 295.501 52.6885 297.497 52.6885 cv
299.294 52.6885 301.05 52.6084 302.847 52.5283 cv
302.847 53.7256 li
302.328 53.7256 li
300.931 53.7256 300.172 54.3652 300.172 55.7617 cv
300.172 61.8301 li
301.09 62.3496 li
301.09 63.0684 li
297.537 64.0664 294.064 64.7852 289.952 64.7852 cv
281.009 64.7852 274.261 59.4346 274.261 49.8145 cv
274.261 40.5508 282.166 35.7197 290.231 35.7197 cv
292.706 35.7197 294.423 36.0801 295.98 36.4395 cv
297.537 36.7979 298.895 37.1582 300.492 37.1973 cv
300.492 38.6738 300.492 41.709 300.971 44.0244 cv
299.773 44.1035 li
f
304.84 62.9883 mo
305.399 62.9883 li
306.836 62.9883 308.353 62.7891 308.353 60.7129 cv
308.353 39.793 li
308.353 37.7158 306.836 37.5166 305.399 37.5166 cv
304.84 37.5166 li
304.84 36.3193 li
307.275 36.3193 311.427 36.4785 314.781 36.4785 cv
318.135 36.4785 322.287 36.3193 325.001 36.3193 cv
324.922 38.0361 324.962 40.6709 325.082 42.4268 cv
323.884 42.7471 li
323.684 40.1523 323.205 38.0762 319.013 38.0762 cv
313.464 38.0762 li
313.464 48.5361 li
318.214 48.5361 li
320.61 48.5361 321.129 47.1787 321.368 45.0234 cv
322.566 45.0234 li
322.486 46.5801 322.446 48.1367 322.446 49.6943 cv
322.446 51.2109 322.486 52.7275 322.566 54.2451 cv
321.368 54.4854 li
321.129 52.0889 321.009 50.5322 318.254 50.5322 cv
313.464 50.5322 li
313.464 59.834 li
313.464 62.4287 315.779 62.4287 318.334 62.4287 cv
323.125 62.4287 325.241 62.1104 326.439 57.5586 cv
327.557 57.8379 li
327.038 59.9541 326.559 62.0703 326.199 64.1855 cv
323.644 64.1855 319.053 64.0264 315.46 64.0264 cv
311.867 64.0264 307.116 64.1855 304.84 64.1855 cv
304.84 62.9883 li
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (Eric Appel) ()%%Title: (CUnibig.eps)%%CreationDate: 4/30/09 10:53 AM%AI9_DataStream%Gb!Q;q-MfJdcc)[^Om\s*F&D-_J1b9p(4Yt64>h==A3OPB$U.kIJ-l<\($Qe=iNY?RI=bM!8VD_;I+WNWCs)<k1e)H_opkNoAB..%%K9uY?IA9MV:+MDQUX(8nQPPHmCDc83G:9g)XV^Uq:'5gkDQB:op`ugBk>K%W]`I%C<b=N]i4RH)V4/me`to,e*Z#Ho6$fc?aMWp%X3E/@qm]qHCWmUZDm%rC\TrM5D&bg5NSCRJGhg:DmM5\KeED!^C+uThbbt<gmPLQtF=%N!p:ft`XVZ-)031lGT]&RHq5&(8e4`4l%W:$6q.rWm_bF7T2XpomUQEIh0e0T9p9mt:\1^j<P>g;t)[;#A#.bJ,0id[..?Q+,!m7s_=H"ap>T40L%D*5QseN45o"Pp?*G0r/*%8,/uq#6:Y[F1Pcpk=icA=uQ;V)uMhRZGp5^NIT1hGO%0u0:c_PSi>TciJ)PoV:@SPp`J,r\_C6^jmB%p3duA<!*H3fTAS@>hDUrn%'tmdtWoKsioKPM:aUPu8>Bc&:TN:[K%2V$3oJH(DcsipPGGE,=M?E4[2I=*U:M@%TNo:d+a$i8HSmV+pY@ooF]r`#hO(]Z,#1L+Q%Hlq73h7<Ub"$iFUf#-=]bP[lJ)#u&)@'&'q4ktc_jVgRKJ'dQ*T(8L,s5Rh1ME@BKMjQD1H$)(48(5Vm7m+T=HU.Lqq?)7@#KXd^%OciaRb?ricSN;_/_k(^'r`re-]7[Vr_*?DeT8nOgI33r>X0U;5n[E5l;q&[_VTDVL211nNEZAoW3*:2@CumY/b&M/Rfr+:K)rJ[o%55`=-I32\h5.8>Cn0bZE<j>Z4MJlOrpnV*42ROGeXjnBrhlbN!H*,*Tn;MY,4<GW,TAl@2\S2gOp_-ljRd_]5_DTH#nhXM_rkp_)%,5d;`QB:$KED?3A9=Q2DM*3S`\7]%Yrkrs>Dlgo8iKt$J*ZnVF]'q)UWR\4JmLRU5@E_PY.,dsNP?6&9kIL3>G]]Idg`tL(s'[E_%+9'3MGR&NEr/>h.Iq(!6TA3k0$GVMb_k1&Jea`Y!:S'Sti(n0Clbf@-Mi8qj<urGRPW41LQhVg"N9A5Xa&WU-#o?o.cQ6`EoAXc#%B=VC)6N4k\\2oJ7\2o#,=3XN\IJ=I[0n/0Z(af/5rkp_)\jAtt[\Opu*07nf/TFnPMSqEC3F`EVJtrdbV[Rd@*CHC<A[p^Cjc7Ei%n_CC7*1_H>p\?iLj-_]71,e`q1MjRV)Z=1D%B5oU.?l*cL6O"C']M;d\&A.Ts7#CeLEr^O].BWqmK:a*65&/cTcrSKk:=U7Iec]D%fB==UB!/(jItkd8_Vb:;ZFCnRk'r)JD0&GHS,^#OQc%_Ych"[5H#d^sr**=_-fK"C\%9`Dn2L@tPh+Eq-N)-gf%7GProS]6n;mB*%mN);fIH@acnS_O%@9"o6#-GjeXB!lGs2!U\g5<rN.<X.[2JR#r?)t)X1kMXp5OJpZ>4F]_ImOO$CIB8,hqX[W?DlM"foKgQ0%u.g%CnKSlqlpa2ehia?b^>u=^g;<3nAM0tN,Wr>$gk&rht03d]=,'6S$(jVN`YnYpD*JjGeWFDj"jf<jj^A3\Q2h?-i66/))MEmoYQ`+%1ci(P%5&U&>]%a')T+EtWSkOa>n-\I2Y`L5iLXlgT>J2]emf#9o%UGiNc"[c[[8N;9JF=$YN'\O&*n%62md[?FXt*sJjL4L_4C:J%J-_f/Y+D4H"?2h5Keo'BNUmgiKg"U&Y/?[L[FBg%\DKCbDRJIYb]sZmRoWdpGru<2`0p5SppP"`2%2>`LK<l"p4P:_2WG5Fk-8q#%?-?Dk=034X[g3$c)Xi;_7;+q,:q]eKf#?K-#[M]0lWUi[:m^i;&&nTqC<CZCbgkCLLcpk;+Ff=4"RC"A#W6oLliCStcV09F>)!m5%]=Hq5TNU6Rr0gu6/\bo"ph&'PpM*\A0cep73^!)IpKGF=h<PdtB?=qLmrc-Aquknh]OP34HgFmoi?@mtmsB**fFm^:gf&OYMUej#%//_q/"ul\0)"8?n"D^I&?9nuHg.'l$qXAuA5b[<jqo]hNmOkZ3E2pnl/(YL'0CCO.`NA4d=(ionC:JEf/V0&CC=O=?qs-Z$m04CY%+MuJO%%pl;X0!P3!bqmbp&,V2inB:()XoGVAGE?DGK"lVZ+"2WH,\UO9/H'NVNsinEb>t_<?,UEM69k*Y?7i-\)=#jh-hgF?XTuo%Y8$^@Bb]c3QZVOnBtqVZ/c9NE66?9\,Si378`%XXW`#!^J+0q#<%qrNLWn9o[W&kNIAPe?2-pReOJb^NV3+#SEbaGLmOmHSd4E+"%k;#4E8VPg6qs#lLY_;)J"J]/Zr5?e]hGWr3R,\SlK;B!?/&HVL3.VU3KmTjm"."2Eo8GuJ=t/./8%EN/-bSj<C9-KS#2EkqJ$8(=%K>"d15,_&Y*ri!<HW$l="I<P-9rKQF3lIJWh+@YN`&=]P[nV+jA6QhKO=Mj8!jn86L20.;XMNQ]FA;@@2C?0l7hW/-Z%QTn,]spM%4ac<aLnQ=cmdV9mf&V'r7Eg=m8(:XkB,SG*)Ac'@'l!dA]B8$Fecfl*Z=esf3oZ$IdlLtgQbq.M.k@dtl+g*I!F(>OT^/_i<W55J%?\#-+(#"?VWFlfB4K2PAhlGbG/Yt<(*F]E,pq]m3VnB_&WV&rYC29L<[8e/i`&I3>e5kNWb^\/T\lj`0j53NNY[^!A,b?Q+>]N3i%1,ZVSbS)7_iqC;2C+NjsRRp\J4j#grn(\;2J[bo6Y6V0DrhmKR3"m<b-'>;Sf5k"i>7%];*"0/Sid%SfdlXs68g:sT,RV&%5j'9%%'HS:[o?7<44;40=BI-^gIHcoP,ps#Vj$$S26oEn!Q?!:R7R\*0N+h*?X*.ToUDA`mbunD]X$1#Gn,ct<1Qm!]]1QBOarVO,cAhV5%-TQ106rpj#^s@GNq5%[Qi?2>tkn]%-nl5F^W-;3$)bMC8$4cGUXTs?N^':r7d]Y,O&YHF->V5J8LW>^*,^"%Vmb''d,s=k;\\8'U%CPj[)Hg-<39=XP3^V[a<HBsYaKUQ#4_!Y$K%lJOPPupNYYmpOXdk:/JTtQRXMYjRI&NM$R#St]HTMq=;9m*m27oj.bXO!+H=o`t(%Pl;:.d9RMKMulX`g_K5nhj0X&I*lprTm*2YiQ9n\dCGkC)0],#-<o2dEd^EMrIe9!FAOW`8"i#c=j*?FFZ8!Sj@)sZ%X4$i<KWdm%>GB86>^eW->F.#VWKQ>0`OZ@SVU.cRD?N$O^]\fKA:M+!2204HCRS<Of<=Jn$NG)l?Xpe`:kR#WOg'%#c0KE=phc=*U^%#Z^pFg@%8#U!]]a--O>Sj1Y=;#)6aFAoP*cO]]C,&qA9C>I&U6>54e,\%TP^c=5@N@K$3ll_BUJ$ID+eP(S]ukOFD$F+HmZK(9[EK@k[3`n(%K"QB"V73*&k,Kc3+S5fQ9Y)c)`j!gQ$<HIC2PA^;OR)Id91hb8\e5@_^<hb'<_^B!(t6H.[)4c)WnJ)!(U><iU,41!(g*G^-G:VC%PEro#]$T$i\i<JcpGS7r@b/@:L)+mJmOFU-dXDHD`o9gD#J2*p/^T>r=\IOo9iF"Wb=f;+<36@?)5=b^Y*\HcIN*Mg;!ZLG[ge>e%S,&E#F9%4]l'#R/"aK0&?A3bYd#&O,JnF2pg=N1nNp(#LNO%[iF_C&,f,;Ur%:<l4!P[Q"gPd_YKcb("iR8MpZmJ*K?LY3W3hQ,A%'d@dIn]$H$9un\Shk9kPNsf1D9]#ftqTCI^p$lD>jte("[cJsr6*'h2]]3Y@ht6!.d<U*#6VT%;m5:U1_[@M@(A?sKGBNEI#*1ZG%c*u<,QXA"SjN;?2\ktSgGOCBi:Q:^qp/Fo=EO!T'5jck7?Oa.gf,n=s1Agt&_K4bLir8W>`_?\E()>e87rJp/7dl@tDXcGg<EsCS%[I9#\S'@j=IaL[%1ds:P@f-1c0b3E$Qi._TFSA>#6%#Jn<p.58'PO%$!^-C!m_)eRH@!):eR.beDNY2pGTMg^ch\K[p/Grf_Y:#X%J*0)?^Rq^!:CljU&0$n'K6jTiE:_R=qRbQt4SS8\XmrIFH<.gN[HfJq24g8?as;V.qTEaG[,-,Rl5I.rf>Gc`:^GHi#fc#u/&h`-%O7)>;%@V1t^.']8EhMr$rMA@#;LQn<Z6-khi+GoQ`-"ADp(]8NQ1`DHAb/<^T3soWkO5<<]2710C&[FP$H;hXj97fOrq=k;5#n]N%eXmf"fg=faiV=3R0:HRnrIQAJ=WZP*0*N6GZ<`RN/R%]2D^^!f5CPuM^PZ'3[s7FK/)EV[fp;c[Un$6V._NQXKjk4?L#4^Q=A_&k%SngHe5;du6BbC[&Ks\W=S5QuG'i&ji;ofd)"BGISF@A6IfCK/,7CuA@TV.d,eR5@s7K)T5%P16.]Il`QKD-LIY43a67dT:;Lhc-%%<ghCHR&c1S@VL<lO_)<W/3VeHT%$to-^IK)=S^CD58>PQlaO?%J<m#^X]S^0c;^<]Y.#L`8s`QFf4HD]WXc[pX'DE%fn+c&DdOU/%>\/h^S*!Y-CH_eKDA?703mHZN3cLY@_uDRg8`ac4B<QU88=V*@p@%1B(O/%Id\lbWrRP\=@4Nk1<a@9F+7<SDr@>!fmN8$<>E'G:%,Cq57ifDCBY6$\Ij"Kf#^Zqrp8)PL[co^G[Of!WYTAF*_XDb#DHNEOJm"B%3qnF150?ohQ%_t1aD]Tk,Gp">9%LFlI]<:H)$B*GU%X::6nPkR=E7.9fJXbX:^"%#?#KLE!95Lcm/)L2n/kH=f&,4t]GEg&OBr=<Bp0(4OhTDu6fm%;25q0!bn4-[cN@X6Ak+/]L6bC@o=%rdUThp9/uE(JEfg0H%6i*cCtdo4#b(g2Ygrmi)d]pNbsPB_e93^R/]^@nH]H\F&)7=cmCmT3[Q0CH6n-=j#Y%oum,S/dCm=?:J<M%VCgi>f`B40e+hJPe<iA!l@.p25fsae4)2L;DAnbOp)b+B+H6<K;g<2%lF3GZ$p"oK^j1=;'eYS1fVLF%QS3M$[h!E'`@u?AI<NXa%%la!Tltp<,f8G3TL!EAL+uu^O.NYr8m7*uj)HRQU.pIJ-hWe?)l`Jq$%48L%Hn!_+[JgM]ZlbmsT#dJReHCVmF"TYl,jV!jnJ[Hf%k\,XhZNGZ.4mk5^pOTZ)qG^L^g&9q=R).%V:@X@XW$F^:8E]kgSQBKdh7[=QVO\'IU(6d]]4WP:3j&6Oqm?oiEUu+_iSbQf,/$E.%]=_o:,XU1=KlSiKXe?0\ZY;Y[[\O/%k@B42H=S6+P?NGnMI.>&mM+8k+$0)\LSopQhncIP0"]MNVuC`2<kiDa&"9\BldX4fii`>j%Dk8"V@4Grur#;MR#Q#iMWNI[[W3<RA^ZYT2giQp)fCc'<b>"`NQdf(:O.ID!)T<2f-$qhZEnS^P)Qd(_HFEEfh<qY=O,ZD["uO#-%[Vd%n//D2V=KLjH4-@SKA;oNj(1K1EHDG_aV7$0"Y"D$>>@]9O0<QB:AbR@:`&d.f(qFFI:c;@'2m:DTDoaTkS2B*h'bCU`mk2Vp%im$2<&$OTho8ch<K=2[Pq/ujQV`KA8^[[uVF7U:\DMks"0#[7;0?k%=M@V@nW6P$g>X]"?<`h6H68j1NmV*F#Tdo9bMb4M_*SXi]%H^,8AK2n0H,$^L>Dm\f=%nNI?0#h]f`[Q8<L@HEs3=uJ?j6e%5iNXbj9=uN6Y24ksks4HMRn,"YXLMDN?ubepd#'H@hs.o+GL4Y$%CTGZcX)s672Re'3,e-#<?d(.Z:9g?p5IHbk1JY)1I_j0EMq<Fpf3/]7+XtC\P5+pJU8'"DE>+g5H6[PV8`6:3,d#$rZfd':+YpOp%%\HqdB6ZLR@]eC*ZZT?pS@iP,QQj\;>IAD7:CYuYcZXeLba]Tb52H.-N[`cGk,"UP;J=M[=YFp/7'+%JIOqtu*3r'R:_+MS4ke\u%R]ksSrq4\gh`aK;,dC)@m96[89H'm9IKF6QPVJMJq>(+`1UG1rismoj^TuGH#%@8STlZod2GZAkPBs-bT>]Hkn*;+0)Bf>ZCkWeL%9;<M?J82-7^Qp+u;A-4-%B<t''8He:f:-B5#47AG;hNi6IZ0lNle)Er\nqI-hHk)?0a)5sIsI03bK61Z[Hb_bDk7]`0mR"f.Mkl"%f-&."mC=fT:*,to+'_PUs"^lm"Pp`!R_Ko8@V/35%B(P3LX:3DU-,aX"sp?:&uaPQ<84fB:K!jInftQ?*l,_G7/Lqao"=R?Mi`:3%aZZWTgYA@k[KUU5?CK)b^ea@uPPE\Mf<QX3QL.o0/R+nWF6uqpbAGqqe5LNKJ,O+@3k_!<a-n;(ag[9'_qdu8i_OA]>C.rL:-BOG%.%JtnhS+I&4P)B6%Q<E,X`!;fU&YGt$Yi9=@n&5NMCer/rYe#ePV!T=/^t)R!"'\E!Z$+>D#KD[O-E[U8uR07BFur9Vtt1ID*t\R%ck&b%2I>kq/0FhpGU<J!G;IQ,Y[sA\:9ab0_bS-rC^MGI)LPL'9V+9`LC[drok;oS6Ge&J*p<d<Y.*+&^^]rRTI,@WjCfO;L`C89%&Oj01CR%URWQh($XiGU,ei=WRZd-s!R<=P@1$4drlb0`U2.*WpQSbdVj9G#</I(UAd>=kmVO!s@[,T;`%)\m,GBqgPC/W903aKIb%jEBlVlCliuW&IQkAGo"8l0WZjaJ<LR]BeVTmk!<32JdR)P<C?FZFSsfq:KQCL(U-,i'H^dK*p"DQHomQXB02aC0ip#DJa[m=p$br%p,]Nns)_n>:9H*NAS-.4B'I$>ia7H5l#>Jf*ZPB6d=[MBdaue0g+Rs9EV%)7L&0LVm<gX5C<S5VEUH>obftj(\]VjW6>9tBnaY)L%eD<-6AG6!'*rZ":*gq;C58osG4^/kndrl2&Z>`!!_qQEdWC*_'[!,r!CQI&prm+#SeMBAOS+HRFe(i8QdlfRrg[M2NH.Ai/9!-\(%_Y)(<le^gdD83dJD14Mtf:(TuPP*Mg2f7qdmJLa:@:eCeT3cME`$jd#iCnB3q?r7kj.n8n(K<;:r%W_(=/2=0X7`ar'aC)^dONf[%0-cuigT,HlN$$<bEU@pSVig_kDHl#+p*](YH^e0n(`B6*e%VnHQ7Hfj_t*eSr!gW)-[>N9/NW*,lhg,3@Ig'1mLOYnlUNsTclZbE%4,$RKfPj[M@=+c64Qr]*a];V![?:bXcnDLu@t$HYZqq*bD,8CDcD:qahbVfNcI\6b[Ed+*RPqjK39Y&CegZj'gb2TQ8Scjk?Vf9O%#'E+o%ZXRjdK]ZLD1),%*"E<k;23no>FsKY/tXEkq!rXb&VD,u9Z4_^IdB2Qd\),KfB^gI4U4[[DLC<Y@Ag\\[<uC7lrIb,:oi9'%8j>Mi;?sV%p.%4'THPZRYk?S.n^:"OTX>a%A\p/8#ApYl2q%ue"GeogcC;pkrA6RgSoD_S8V=J.Id3c/aeapa8V:b8Isj$k'LmrI%lIaKUlXTLYf(jNlp3lO*i^u^Vm>n*ab/mN/TS8Q;1&JDGZ<$/+7,r015@pZ9PudeT?jm:2mK2icD0j<0*nc65h:FtB^=F<KoiqoO%4uX>ue2c6.4Q/TX0-=tlQ$urgFtVA5Ud5Bbp?:Y2[eojYd%On.KC2LD*`<5KI_;\`U^VQ(V&df>g,(5;=:E""F-kXjNS.(dTLW'V%+&`F#]A3=sRPZF5Id<`.SP5Q!M#\UQq=&QLGCAd'%XPFU2cBrEhPb6Qd@c1k_HOFVP?2fcA^I9QP96\e<tYa$?+QV&)AIEO%XW?+%dQ(#&n>2t0hu>a&4QtZ$h=%\X:Xb/QId`L3Bi($Ih.qF&Ql/+])mlJJ*WGl!4Que8<9n"i?&]:#UX672^ZV+$!.11[VgI,-%pC(B%Cda+lWV(F\@H!k8>su%!iT&FK\*#97b1lH?<d_#6Vn\1I5p-'iR%tVOG5#eke<j@.gl)_HDRJpsJ&"A5_EhTE_'!pD,F9LB)@X44%mUCm:9qMYrRTuJEJTkY$[QhT\IdbL1Ndu?=Gin&K_Ij\hL95R(_IJ#>h&65%K@\o=K=2heVSo/!LZR_l2ih$5j.C!]F6Rp^LBb^p%Gc`&?g@k3Y!=l,P!I2p4+$Jp0DS_u8(O'c!>e_9)PfuqF:KK^;alg]+Q_+q`^XYh<Bj6o[SWp#cMgE'bn0.$Flp,E2UpN1kL/4!m%bi\SVj4;4lI,9Q8URV"];NrIjI;-7hh`'rTdpVo/3uq+(r8o?@]er!Z]RRMAR.@WUEI7$CLN`7;D=)\DZnjLJ^SO&:Y4e.th^26m%DZ;bbG>I?6T6bkAF=Be@f`[,uBOekbc?2?o`fKF%l\d2f5>@_K5FjFISd#b\=e._sCH\br]Y-=P<HZ#^-9p<lWVp.j18g;-mX5+m%r4@Bb5*PR8m.[j>Xr&T`TDpb2*ZJGVe+<#5cBnAI^RG5.n'`'RG'C]Lp#ea6_h=r\1Ljj8eubc7XDt[Ml\t6jP2H88ID;EL]eu8R%ZugV=HSRUe\!6NleQTID/<nB?_oYJt?LE8[XD[DIY!1mp/gf(O\U&.SI%OM6I/<PXIWE$lC#gX)m=H0;?^R9g5+Sj3D_Jh"I<l>R%^/ncAMuMkkDrP*Wk0JZp@%+VtVO;1%N(e/>e44-&^7:5-T)8T#o'5r7aQ1=i)uau1p1JMYDYjc_TsI7U?X$cK5/M,rQ>+!NjN=Y"%1'-P$fc(ejA0q3N'Fal4o!!'r"WH7]3g`!o.,Sj#)A<J`F2HQICT8S'nUl\bs78#c44dtL*`]bS%VndEV@P^kq_=EuW)d,Fp/;0<%5(Jpj@XbrsLQ)^grZbq"N=e7#d#F%9Gqc1Rg4_;`\,#!Do6)Pfh0=eYpq&ScFYotIpMfqd1?e-#pkNfb)!0f,nQn1k%)@[9YK;E#%kND)^Nn3X*#ZX?L-/0SS:p;:_G.:9d[%9<,C?$8eI-Om,,=rmioo\8knBQc@Z??gcldg;s=7o_C2/%7295MQ'gMO*:q]?_2g.uEC%]"]q^UL!3QlER.($X@bg/Ur4UMNKO(4Zb[1g2-44p;:6;eGlr_0G:Yl`Gb*m!>t:NMB>K[ik?T9&DEE#lkbqY%`X&_:0^c;]^&p*%@A<A<`Ri5dYAp`X%)5uVDlf5na+n&Ql'Rr5G^Eg^(Mim>lL,WL1:`=)m4BrnQ]rT-)+/gV33ndg#NL;E'=$?.G6(Xn522nHrBOnL%(`HjqqnWWjAeqSp9a-%Sgc(6(TK%splYW*1,C2qR<'*";fT[ir+6I5##K)c(2:P9T.aT#KZ0@OE\)'BJ+(&!:4CNY2qY!\4q?eNk%L%M-h[[+:QiVo6<-XV(EmGI95^_aA5&BD@`#daIhSIM[uqmUS;!c.$.=;d[#Ua(5[PQT`/?tmA&rg`)hX:VQ:LoHcleE^TXRsdRd%%ITJmP6Zj?FZUQ1Ke-WN=O6g09:Y[V?WLOa!J8il=\ka@F#SQLlg*H_)aP9P1&s8Aa+[EW8<rM-qjkt,&9"2[*uCs+[0q0DBL-Pa%Z0cY5S4[(U3VIH>VlupcV&4j]nj@=lO#%6A9gidHYE$M#WAkYre^QR\.[c9fcb;lf7#qMJE1$=A[;pr<"Cr@cF00FY*foUOl8C53%>lGnN"TIKV!Tr#3jL6rpI2F*OXFePM)4adN(HFNLmL#mFie(OL2O\WsX,l]Ha[(.(<(E<\Y6Bn`p2Y>)Q@F_(dU/0bin>AHg.p.^%U)StS";`=2FolR27sFW*go0!eB,4tJ,#"U.P;4rSO0SQ+s.$aCg""1I/M+U^OgCk&8+/=D-1LVJ/!JTIAN_!2Nu^pD;?ToOSM>_S%[i82IWedK<WR(Nko\TGrSs!e0-@\1A%4kakV<=*@d0s.qc6nB>#NOWi8=S&5T`)MbR&\R@-@>DDOf@qBG-I<*Q[f$=JZ(=M-4ePX%m6l@cHX;D(hTgH#*EhukS;C0WBfP#M,"&JM#S;o7g&W?4j_0'09R*uKU)C"EkAsM<FV@>X]moE/S1FF2EB]r4*h5SpBTr8Eh.E[5%>pshEfZC_AB&""@J1C"GNULedgO0p]I%&g'PF\OJ#TI3/pCEhmAfnfXka#N$ff46%lUFEJb@3PD$>K-qA"0bt]\#VS;bEQP0.r?!%,&uH0>qkM3p2VA*7KuS%.T&U9Sm>Ltg#ROV)7[1$0dK!Hl&bh$lIqh7lh!,$MGn#C:O"hp?lpg#!bU(ulBDXP^*`MJ"q]^[6?9iM%L;X("IH1:[ql/mcRQoTP#'h@>d+:=PY)pi!&^fZ>?_?l%IBO.dWIQ,;'mBc'QY^#ARSEd.9DbQHT'*o86LPq"lf9A^<3o(s8I-ko%!+<L?/E>n[-V!%8a7R\r3NVZ*hPJP<!`/ELAGHj':EI]N9re3LjWQA!k0[&Qb:(ZpP5QBcmh1i]GEY9.PBkt'aSD$Rd-!$dr!rJ@%o4P2QIQT3H;LB+&(\IMTLQAUb_b4X&q1#KYJ4TnPNH3S7`s7diY6!j_q.l^lXROJjV]i'4@q`.`<Md1bWcSsMKi/Cl>3s*'iJ2Wo%:?l=OTCaq=?CGg9G-BXt0ka$nZ+^A"r8A4NANMLHhgst^LElGUcR[o=NAd,`94j1f's]QB4!sUV`;j5R@?d.lHQQY$SV;c8;4"$#%,';W>jA;MmZ9B$=F]4J[dJ+/Qe_*eXh.9Mj'U+(S%t$QlcM+m%R_)<`oD5MlZUu9b@3!Ja[pj"(TKKbWHu/Uq5[:-kb7JsA).2i]%U5!2#ZO+srWLn_jOF"Hrqs5&hgeU._b!!`#:Zs?U6J.V9NLUNB6p>pRS!7#6X:ke!7udnGG<9,MY%`YTl">BX9#TE7S=ij2cU')&%4qBX,F94rom[p8NGt<HDL;;3jO7C]ar#0rLBBb18;HDpB6,Lp+_)8&=Qj?3WK@9a=&k@9Rm2u)Kd?8kneBd%mm<CU'YLLlulI":j%f'")T#^m&ZSuqt4L4.QL/a1:'@Btn+ka#[-'4:en:<.stnch;=Lq,Q.8N!=8+3DED-8F2h"5b2iL!KO'Z:+ShD"de7s6,4t1&m^;%@hhT<.ju6T0U%R8o^!s.aRqD0=GuNYi"-1Z,uG?B5'cVM:HIU5WoT#7$.N+M?GA$o3%K@m;/(89LjgF3d`Xj#$O=$5d),&k^]H^N%>8fh@H-F<.=W"CpTX02t/lgPt`n93Im'M8/<h^9i*CRZ'oHIi)5Z6r*8\\'dV,6I1:G-@K/INk[WK6HcK1NnI/B!Y>fh`HA;7^4D%hA)'(X$97?KqYSIK;ZR?N)X'_k4KtL*0#K3W&!+;J]:"eNA?9d.sWmlQAZl,BY)QUh92j\a_RX_HR\(48`l><(=?8[3mTiM"]@Vc%=SqVFL!03#Vi+>"R7J3ZF-'Hs0U3<idWqip9(aR0$E!-4L67c7\X%.%T>tI+dm0=R\A/_a4aYD]NUhh:<M?HXERCNI94+SUfNBR\%').&]*e/4aaZsqq&X+Hu\!`e`W#4'*,pW1#0ENIu"\r$;9Ie4;S3^D26l%tZ:gr:Tn:^>]DmN,d)08;[mscEfB&(\QS2YYWPX/A!%%4?o`4+j[dA*BIDFP.ORCqU=M6^O?0Q^'/T:C^ZR#$j&inGP@hfbnmcdVs6jZ8:]Rfn/\<U!(`S/!PdP6^O?08'r>EaJ$dp8(g[*%aJ$f&TMrOCKB1BjB@$s5XEP.[1a"eA_sB6PgWkb/:X9/IrmTJ`dQG2Jj/lX=gC)Vs3V'!\X`)"rg4So:&Y]"`]`=s_IU^FJchIts%dNd$5Jl?lZ9m<DdFO"F$R2etdkS[_sB<q]DO#5MGR</2U=7/L1\Ube`biq9eoZY>sDQo'KFf3HWGI5\l\U;'PHr_EV88M(O#ul>+%JhZSi"bZ_T+3rOZa,VJn'D8iA9[u:^]'5XL(6+"6cS6j0bFfndRI$5eC_O:@H7$8;.hj8O/HIOCkIR[-g=$JHY(CHoQMZ)R((J(]%Rrr3fH=Bg2g#NI-O#_JdIIo'P`'H,($^#?EG&:nE29E5/'N:.7QT'W'[r#JF3m1RrZ+0,$\)VG)gJ)_#Od&-'^([P;00QR).1;)D%'iOY=/iq\N6pGsEfq0n<*G9T.OW%Z0`a"3mX7XoK`QlopPUU1BdRbL)QrJA?I'@b(p<OiH'a*>`*oBWa[g#%gOiQ'0-RKiO,!!<1%Z_NlG?rhOCOe.uh:M3P(1*FLfHWVkJ5qMs_V!g_ZNqQe8730-\X"2PrZe1<&A+)5smP]D=0FC]Roil%hbJh"\=pH4g8^2Y\Wq28m%eD47Gb@/='nec^ZY2'Lr0BF,b`p3B`p`NjM)HNT_U0=bZ:8blq9pL(g%X"D&Ut\#r.;lh5^Ge.#Nu2A?T*c"g]*c6eOeoU)Aq0@s%ptA;'4js,^^+MqKaK8cOZ(*P5RHl(RI9ubi>BH9*;H(_3OA"Lmko!>i47FkN%&R"Hla@)kYuE]*-M*C9G+.5TTuWu"_C9qk'1Dqi%@@%?*H=b*m:+;KiN9P/,H"8\-AG.CiZ81e;H";4iVrpU.bEu3*gDrr`kB>&o@ugAg4`%\l*gn=&HZ\a*[Egiq1;Oi8&$t6jo,o*B%kZn;ep;Gl^9CU#Ud2i&3d/*LX,\.;ZJ)2+eXR9(i7dBmAoD8!uV"j`t0YJ[tF!g&MCn+atS1dKDq5l0pI/\)\GMIEaAbgIq(cdFG%a*MpI5TW:F]l;`DEU(p!Os4P6&ii`+g;6hh6#n^Uo"(ABFJ3@D==eP;/R,G\?<r&cN/8.HgNhiPZLd?J)4-a?gcIcSP3^O\;PdiC%^/-s0q85TOC`VdfZQlbXckUkUhfBY1E#]D;__"&k52:M!5Lt<J>]LPNYk-fXMGVQg&(`$mF\)=I`01G'^g?hUM-gB[N=UDT5$U2g%8fn!A2]j[2];+$3ORqFOHmN/+q/FKjW$-RVcA,&s`DV_=d$+%W"1hUK==kJCElUSf4u&S1>NUd!m#$sN+71-\SmIIO-taf9c[N/D%K6*[S@QuU-\Y%OXqAAl]BT>7MdVUoja2%H3BZHMNZ$<pfT`%P>9K:24'Xm?rS-T]2\,R^dH4;/FC;3[a>bRLTSYT1Z$6Mne_tD4E%GGLGBZuLWj&BOA=FXUT!VLGhl0VA#1r<trGC+hi*"+KQjqaj"J:]?e`C7$l%(B)0FYHOY!?$1Rt&Q^q*o3l'5:K9I!TN3gG:PY'p%HMM30)6)!9n1mlprsU%q<?JW(Oc`fhh4;gY-!s+koJ7'9<:\"KI9!*+C_G!jIPXmnIg0(6M3HurLd3^ZRbD\A&UmSiIWDlT%-K!b%Cd^J%Q:Q^&j^UYPKgU9iB1,O;Ombhp9A>flVSWf'\'1BMf:Q@EhGh#;2i+V?s%"VEU/tdeWGlSNZ(1M*aNluM+SPcpN5VW-J4+lo%KTGG/k<o->)CCtGpMoo9#BMkdZ*WYLa9U(#Y1q?b%/4tU&C!\JQ7KM+E&'`r0[$ZC8#MB1,IofmV48BrGXiFcKCAj]nuZngkU]^u%\ffK#Fn*X\qc5d=>-;sJGLft_(9SFeY!)'(;K]D<q/l!kj7C[Pd`g+jL$$]!#QEF:J<gl!g=^')esKPZ?"9FegqAS0q'7-:D/W"j%`PR9K3_>RXDBDX!%oi:',R&"(^3XdjQL&d\RWX?DoB@,1G''j0b+R#b]N"cT>-_@n%(fRsI8IRW4*=B4<;S:"(MbLh@2DR[40T0*%ctEb'>r<W2)GbOo$Sn@&1@2*AN"!>G>.pFeW)h[PFHA7+hT&^'p==\i-+dGo-+f-sl%<jnIeXZgg3"KEC&_VNSi5f!%.N\%T;2r(%Hu+60\/*oN1&bR3r(GgWpGT]]ajn\<C9_qU0Cb@^cft7j*'MTk2`p?!k_(gc>B*(g[#uaK"DTeEk.YKLD-V\sYhE%'1SV8s!D`Gg%HPU'teJRAqYO#&AGK!g`:TE+nShrOS,HtL0G*?1Z4`ZD:<#OmH\N[]G>ou4VG;a!<:ssZ;7m%^AQ[+EmO1;nI>p>WH^6F!%ElRD<%S5R\F#''f/7jqs0>AEWA5;#161jaX(5:PAFhZ\,84MC]+e%O?DdpG"=OrY*[iJ*UlQ]t.0r-aquZK[O"JdM')?oD:g0&6MqO*r!X%VafCT4.@i,Q?[<?OL",6]'B*FOM8'cP)T6b'"OWN\tjBc790mIRk?.V/p9!*KP\4F5>1X\E5Tbo9CfKGf'BQGkq]to28j=BUg1KE%m-$./l&p]XmJ]qgl&qnXs0D1QflTg_="*a<T'"+k9A7/!BW-Kfl+4LlH)L-nZK]e[b@,#3o`_UEB@D!IL#5cIFuJ0'+kC!Y?'9nA%(j\)G;?rFj4k+;ZU^d`!c_a>r/a8.D+#o`B.@2Z)]agW.Q]sZL4W,,,2I035?!P)PSkYOSN6#j=6cl4KOi]J6Cq?EI\r?O]"ucOK%-J)F3!64FC]Bc/"j@g+(M8;@6DN9+$:V"">CDXn&Y:aN]RG,Wlm]4O\0(QiXkKUFI,RpC\cP,3YTigACJ[J7?TTGW8S33e=.HP"B%\Sdc"$_NTZ`6fT03V)G+_C6pq,)a?L^o<H_H6\h_;2Zj]m.pHu<$W`B=_E!A'If>sd9RhSCWY2`7DEo/:F5K0R_*YOo/XkeE8GBu%1,?E2-.:oO-?s]]ZFK+9^]f.8",IDTglg]d]0%.Rci%5FPNl#h\EGP@Y#7.CRQHr7ek[9)W`R8H3hH//[-#*:F7m+-Zoj8Cq86IZ%YJ!;f?to4r"6]6fDWcnr!;m778!=VNH<aOu)aCf#4T>s*l$CAK(33t'V?_,%bt:@=3(!urgJ2ni`A'C!%9paq]CUjhSl5euo!b=@%c?h6NXo+1e(#mV;8&L7>3Z;Tee5=M)W#gN7#L@[PY=Ia8eA+Qte4])i^^I"<qK\^SMc`R#c_(tC]u5/>>,H9-a=cbZG@GF/%IEW'%g>EX`$K^''04[`?r*KWGcDmGL1q[q$+$29!7><=u.i";`)q-N<k.'k;6]"'FD(6Sm%<_26RX/)qWA2oCIAuWP2rtM9#"+W?6d++E%Br344oL&NCa'9Dip!.s_3'F3$;=4?Tn[hPsWLs1\3E,@NlM<p=HWLrs-aD!UG[^f=S]K1@#qtRMdp7e='7Y=?VW9#?JSqt*o.-$n%\9f#0G27-3rd1^C\`#/.)lGdcL6;;A2D_.unp6Bnm[Nd%P*_DVa'IT'9)Q&?='edrM^J>8iNC4LYI!%KXPPnkjo)2>#,r"WYtKac%Ug(%u'5Qp/=$:S4$i(HOl_E'g/qY-5BI*1h#`5sUJ!.+lqu+eTpX?<)/*Rubd*E79CU"Znk`fqBp$O4+]5VLuNUffbe24&O^@L"l%./GfI.f+4$/qFGW#52g]pV*JR==0aHj@EakC;k"kW"eQc`mg7cQHsAKp*J7.58uR!9;0M7>]/gh8PE3fR-jm%]+Pc?o-Q0qG7&OM%/qE.W3b.SN1$";CEo&XM>`)st4;Up)EKk4KLFgQH(nRWTL(njZDiX/KfmW.P)A9efcX1?]bm<WD(?I]a@>MnkBRH][)7rL_:;05R%l&+B^H+8r]\)?2r4^PThjQ4O1m`j/)1VYUYbBhIVE=JmKX44<7P/`]"ArUQ+[A9-K7ITQ*HX8,&IB/og?2M(e>$fm(^4*5fQ>`eR%e]Ke)E?;ec_,GZ;:/?,$@e[)I^HPpKjhhg*R%/>^EREV$r.0_tOaO[,O#QrM8U0t-FQq7F;ru-KKWXn%^\2@.[ZW\M<r9ISQo&KM%`:pL8=^pneIqDu-2s2]D7^L$:mJ30Yik("RFD%0#msIgNr>V;$9hfE:rR;LEn,Qo#i(kGePrn/<Bm?o;oqEtMaNFF-2Bk?;Gj\r1%ldsWPa*/Hr[qUIQOp73G^3P'\B;km^f(UdT;?leP,F94d#<ekK'oDj>85i34rXqeio3Ju#h!SZe3tZ6[a1g?NeY>!E_!QfBgi3sk%:._t'\#6C@T/-A`b=U,7.r96\^Fg>7`GE2T2h!;N2IEOScP;BY*g6/[Ud'.&`#0+(PNjY4-7uJ/q:LcqX"Mt$"08.[fGpKYK8FgY%>)o^X\s_YhXhW5_N!-B[QRC[_Q.@HP;oHN7_P^uS3Ste1ZdqpnB!3XP;)<c0EW\ISPSX(YZVghQrPX-491GH&1=)j[2E&^\b0@*,%lgn9@^<GY3Y'fU$a*QV&b7#IDI5c$l?]A:1h&fNQdZ=&ESFXJD/dM-3rE(/YG8ju:PE)aAr3#]S4j3BJdIgpqKGJV/oB(u(Zs']?%oI-h(rioSPaL0ESB?f!tGI#hjQc!&IDo8lCF1?jD3eM4I0lq`2OQZJO#dAL$5B`=QZ6P0:>q89LL55sDD"R_l6<kU([DZuB15'.e%M.BqjpRNbD'?P^A^N0tSDVmHT]p-!^2c`\Q49&l$Too2BK,iUT3i/u=V#aHpU\m;1Pr&-)X7TB,JbCa[B/-Z11,h%#3%;o/r]m#S%Em-&&?(95Ecc^h8JQU7qII]&>(ad2F@7&11mAqgD\6D$'l/b'2J9c29it:,98.`sQHHNF+Uik'@m5S/W+R]7+ZN0%_Q^.`P7&[gE%$SXYtU[)1OSQUIt<(XJO]Am;JG%csVob_0,blWi?8Oa1t=,p913!Qoj:U-&>OTh+9V5URCG$`;^kuq(\Hg:K+^:nJqHhX@adG(u+%WD!&M]F)QkPcsh@Cr<cIO)<s7iP6o8;Ed-5m-b.kG?i:WjFnQPV0n^*,7j0>^:a2A%WEk(`2eEPg9E8/-FJ>n.lB<J<ki'j)[c',%)bMI/d(TrHfY)a]V8X+;h@XUoGctJ_="#64l<X/\`NV+@X5A9=%2HY00AA"AC5M\1Y@#E^M-Kr,^(&W]]mdLGH/O&JZ6M^Ncdb;T%qW5fZ)T'1:SB7&Yc4/jXJG8nO0<P-Nb4j`XQ[Ppl]5@U?\CWB\6-0_=rSQq-\4tX`21NZ[Ib><G.Go`;676^J;/5ZaU@et;Y@"`2%UJma-h!:;TX'_K+TLuoL0AFuNM1Y0m?GE;7WUNs'Ja_V<6I'rWHi:6sU"pg-]meW>.S<,'5kk+d-dF&LUqZ/$^Z5J3H)k<=G(t4u%ldm-]Vr$\dj-8DkSg*Uqb@Y@?R-].f]mbh$1k?"M<moq#qIKn:7l+'#J$33)J#hm9^TR$1^%5RFC]MTsf`o.A09atI&X.uiY@%"f%E$+iE%Ib*nk^@i2k<1*JlIUMD8+O?Bfgj!FdC0#0l^+`qF3a[@p\JIYl8P67ZsN8?L!jr.oufO;N^j\opKkW$>Q"c9O0=TeNNE$P%#6'ubE3%kmmc3VI9BZ(r6he9CrER;Xj"Q,AldqD<&\6FFa;>ib?G?KR&o[Gi:KC[!C/-7=om*`JQC;mj#OMD_h!6nX][u$7qW5nI%*V<[QTU20mUVH8(^]%]F'(5F>IklCjX'aq:AG&p$n!p;W>Q$=kEn8jUIOTY<Vu^1%m%*nIAHt8=q39`]Y?tIZSCJ!Vq/`.i-hC3s%_"[]uB32hA?G?d+lFPMaOQ]"'?GC<8.-,L@p:Aj/>;6O]&dQ)$00:=8PfSL5l^*%#?\1K8Y'^,QPT\OcL2jD(?6*X^Hi9[#)8F]T%1V:)VHi:7(6]WeDh"UYV$O<@SiDF0s90DQC),k.XclMWgqlZ/Dk!)mKmOPGG3lOc=kNp"]B\HpSO'/erU8Ks1&[J$V<aB%MR"Gc4%-qut(5^BB94!$\@).=bR(K55sF-VU<ZFT"Va[SAZ<m,0[N(i-:%P)Usq/Q"Jf3Y_QRJ-S[V>4/afPGg3o[:_2\'^>?cIBp-m7V$_%r.d'mG'*RhXn;C/Znp+>J"8*SS>2W>=75,9cJA'Ocb95C`f]`Y?#KX%3RV9DIi[>e5!0j(<-I.oXu<.(YHFl];npZGhtt_)1EV+[%c?rjaZq<iP'<RQ\2DX!&1b0khm/H%p\"0"P)1Q7BEq.K.o+'2tl".!I>+.YmRJsq*4(>;Z5L"SgZ'Med[^<!`^7No_N=X8sD.A(a%^=@O3RVTUm02Al%B(rHJi?KPqEq.KPb_!<JJQjlrBlD`%M0mcfhgPKS<4UmWA4U0:.)0l/h-'VU>M5u-X=W.[=$Z=>JeP27^*EgH%8[j`JO2jL]DCrU_HR#G8gG;E:jd!RY/<<MdQd-)\]T5jhV1YP&cP&O([MCEDI+ObmP!`ZI0%]:ASakTf(,NAlBPhO&V"O3t0GtN`%^OU"NDaioiWfk]SdSn)nMX#la\#tHY$`/mkLF%/=!/T)\XS(&m5:=X>cLfhLDd?FFf8\$dW8%9`r9O.DhTD_eF)T(-(RAh8fU(@X%pWjp>Br/i7q91m`24^`uDOaJ]?^!9]Z_b.bjQ>$Z^A_XA;k[0=W)n)rS<ro<a$7:=3I@8PXu:32[7^DD*6S%2N/3k=[m=CS1`su=%j3]W).s_#I#r77BMJZ'b&KnO;K];n<($Vbn?iE=01A*F(4Z6p:06?L/Vk:AtWJbW\f8o%*jc;JJ/XZ:@3mh*tj_+'j>('4!>mClo%E`dU/XPX5Cb3FVkKjVXu9mJEO[WO5FlqPl"oo5NiH;HOfN=.%M^@@tG'0M^^qUp+af<DD%7"W+M@D^I!^?Ou$=>[PVlQ;srn&$#\%ErE#u=#piS'_sKga>/VH_]4uQd>_)DIL\73CqP5'\PGZAmEN*JS]heMEaG67llJ<YnFZ#t4Z0+,q#DsQbAn;6C<Y.cVk_]:X?ZAf%q4i*gVP9k[a(,Q6B"c3c:?],!la/@9DDe7p^%.lqC$,2#b?6s9p/]u;\!(WdXVt-qN^a-uT3iEcccr$Sb4b)acOeK_WOLVP$&$d\%E9iIjbluT':DqK<[;T81'>W>H^.j(X-EfQQ)l!&niWkUZYs)1&lB6]Hfp&SkL"DL)!!<!j@K;ee%P492!SGsNq!6Dlj\#DmM7C@T%>Q%qoOTEDgcP<tbq3aqj@*qo#@Pn@;ln_N+N,3V,#KV2!N-d5b`QL/'Xj!l=S8BGu01A:8X\[A&Rrfl%']!K#rVG`?76RDg"$B`Q%#1,O[>GFs`%4(gBMp\nOi-o.tq<N;),1/CPSDd@R8alg(kd(rs'r9lh..-mPo_ECN"B5:0PM1UK/lmi/9S-Pu]HfJoi`8LSYIBjc%+"XuNS(4-l/%;05^93>?)tR"<3P/fJmC3-:NtFb:31fbMJ+*)@VeSd1LoRh(g%3)"h47bEnmJ0^Rrg<p=BTEug6GK`;B=V;HRK$m%6>K%jGc66j91MSZ>F2[-e`%g![s39XNA8F[3iKb48(,C[V>1+6hA`LZj55gAMKn.aq+plr#P"=.lJaDD`THr-W6uh_31h79#l*lT%ScN;2&bt>Ojp_5h%dGN0*GjBpd3$jj3g2-b1i9Pr9nBr^21=iMVu3F.!j^&+(O@c\4ndtM&B*:YJ*[0#7BmtNl9!g_/@?Mrm"&,X%VU"_J#GD>b*UcE2bjf>N0<8%+JTe<o]fc/gQkTqX8!)sW1hek%;WP]*;G%b').KJTs!SNRNAhj_*=]c(JMMUPc:5qNT2n3rd5%m3%"MeI8qW\Ut;q5fq59pf_EtKNsIf^bj:dJLE*<mY]VLh'^F$lNE/p8$1oE%AXdp<:_oAW@9ifVX2TZZ*<ri#`-72?HW+nhOf1b7mN%#HcPJMgTcRr'k!P6LD7E&-sL]qdMYf_H@'an/&5FMO/%5FN-;+ecd)?pZ`s'K9IX)JF_g8?(AZa'Tl*#_7mk"\GS/@19Oeh#O,3U%fu8(qmkVg%gtc6m3Wh"pr[ik&d]UfT<)4b;@qESo]m+MenkSJ9*Lo'P3e4X!n)En\:_%PcQ,9?fm`*(c.s2>U;SH^!g-'XiH;*R2%WVWM13>ks^\/u9]%NaN54(-dgm%QMg)jHa7Y;I5;9C)L9lpBI^4hjiuSmM]3F0<_fX*rlahN*'W)F.>)ED22,*.U%fV!i4s*':oR%&%4L]O6O9Wi)jS-05lK)/)?3AH3_oTbi*CqHOc!E=ep(drEbAJ*Se+j*.)<7O*S/i;^,S`F9\F`khseAHR855BJ,d<QnUN6rEp<)%]NV):m#e:_fYB]q<`4A4q3(.(M1p#ZDUCgGDOELnBEbi:YREGm6P;ln>6PO^:r1qW-Bf;X/Lc>,hOG;qeM?DrS)rQs`K4&9X@6n[%R-8b]G&hV05+%rP+-=s/*oQH>0$f95N/=C%7JT]\X??:Wp1%5hf[7P@0b]W7%X$iljdAFaKO-Vr4K?Y[%fh.#^g&d@.`/^Pf[nJ*%Sh\:`B0_Q<@fuT4o=3ZI70a(J)/M&95MR&[bJDc"1t^Z^Kgg*f;l3#<^_u(q_&!P<@3'gP@e#Dh24)%/!_`DL2--<3cCZ]B8Jn;(%IgdHC^0da7bZ3!]4uRj`rMn^9[JeW'mt7O,Tt#5YKLun`4nXP9^/S!WiU`D+r>]T]5L/f9I!+Oqr8Z,g]t=6Snoa'U'G9(Y<\L>"%#g^c?f`QM;#fjZJ!@n%Ip[WVX7#O)ClXeGUYJ61BEYcEm1<"an7o.2FJD`SZk.as3R@EEN3<uAUZmEJ)MC([ReKmkRc2[#CDaKhl%N84_5JHBJF1QnP_^g90aQ7EK@#NLaT@%t*+=/:f3dFGSp3=5d1(Fjc3!Z.lN3VIf^8LgAQGiM2%]#)o/b^V'?J.)3"^G2-FUV."#%][nLdDH.._[`7D2o_*g3(AG;$>B.)TH50?_WadC`qfF'iL3GniY9-i<7UKp,lt]U*qu!Fm6)/ikU_f%;@MIHsR$R'mRirO_]%$cK%@_pM%\*+]a?*&F!HYTq]>7Yog0?)V]a$O?K9@o53DO\%7U[bb^n'5,.k3]_LdOEHX.k=-?XY%k*CYUab)b"@15@)5Tk0X@,RV=-4%+7V+je[8c``oH3:0+7H\?eY=MK&=N5Vp*Bh49Ycu4u0J>ph=8Rn!cNsHiF),If:gXbe21BNQgg^Xc:P=]*9+UkD<iN$71(@T"f]B%qcR^GVl"X,i#H!,\6bSOh>=jtmC*nFbtk8!>4\5+ZJN1jVU7mokl?E^9D=;#Nh:X%`=&.6?3>6b<q-!&AG5*)3_]PFCh.Rh5)S\'%N'BLdbcR6;Yj1a#,?#+KM^*9rLR05A2e='W<@N\SME')b0j-nTK=h/Eas*Pd79'1@ZA9F:.0$A","WIORf?<lLa8*"V3`aMXUSi4%4M7Ph<%=-hhd_-2"IL0o;#c?!6;\>W;";HnBKus<"+)Q?IQe"i'@A&l#@n@hC_F;5BB3P-8Gel$ZVsM('?GVR:A0Wt_!bB/Y$\?Y%+lmb78OWI><A^`U5p,;NSdAM_kflOg^$=+uNEo<k4$!rm^DlCjhje/rlE?%/<.l@V9g4at-C.09MZ^q5R6Dq*E%jr#W]Zeoat3'(%B'3gjKZ5#/\GeK;Ad^M5D`^p&K^LU@HRqoV(>UE>lj;BK>aUXPhOYIFo2mXn*(!]%ADGRais/jQ7U5oPnAt`&`bATu"Ta*<p#'jZ%PopsBcQR2-G"!\!J6jgRm?_o]NNN5bA)@.IEPS+0bJ3SUA&eTp,Furl+4<?/F[-/WoL@Nf>`o$UL$!LO\]*?Akd`PtrGsc8C>jOW%.BSW4aUW4.@iaJUWthH=]lpiXLW=@cpeW00N`UL.4C0Be%M<66n5Io/r/l-bXieQ\b=m/RM!;F"/.i>2!&"@m-Os+K@gWg/:af$k%T2+#"R/nIrE0nU@$rDG$kD95?mo'>"bOlq-I;]A,U\?6hY\_TQ^=`B_K#"C>+McYm.OPG!;+jSX"iA^cj,4&WF=DNF0UMOpLd(<p%"GDKc^4@gt=IMJ<KSLn.;NA)Y(`m(n`.Wdf*VN#PWecmbpk0'"ZEGml3hVE#+s#$Cd/3$Y0Ce>)LhqB6%lcu^_>qd;f]hf6@T8cK%"^O.9mkPMBoEJI<nU)YU,S!$bQD9?[b?A7#R^!>V"FT3XEY.M*$[!r2"$5Aam)&3b%lT2XBgr<Q`Oa.$)uApHb\W;"'M97L37d6s%3EjsGJ%1G8iK8*:b5cB+03/G6n*8o?Wq?L+QH5O7gX<'Rp?9NYC<.ut%s[=:7qi9eeWa`MqlPY@0SJG`g2:PF>!eP9Sq&@"_uRi`%!423jS7d?#GB`)mRL=-%?(81j3hM1=W&PR]@WQ@r1=.d7kA$I(Z1fs^%%br>c9^AjHkt<u8qU"=orG63V]q8pGB#G$c4)+_op`LG%nj!n=j&G("RStD/@$@]g)QW&t(;1RXMGEFmO"OacEW/>Z^q27NQ#m0@$g_<+hk&K[Q0t2a&J#Z0I_mkIb7jG"I?JC]@;@:mB,KB7%0?hRHe((c4N)-L?jbpN=?q@:@T-/ol!_;EQ1kI97c.nmf+7.5,KF[3_2=;+pBd7l#U-<h(L2j=M'+b%AHYQ+;`pmRNd^g5(Ba&)[%`,>".a\G+LeC_88)FL%Oe(O$A>l'&k6acCK],?:gTeK.@([$E<_:`*TQWciM6C^$:Lg\]./Hjh%kk=0.R(C9&:Hj1LV[d$^;\C^T%3=Cu3Wra&HC2*Jg\PggIqV(bNqGb1u?9,Ok[Bm<T20+phL/t&ub->l<X;Y$,[82?p2VoP/aF3f-\?caXHgT+p=C^Cg2t(YGk\]Zp%rS-]?]%Xpa+nj>aa+5K(r.c`Kl`6k:P:jC3M"'Z!LabKg,'u;O8@1U8^9>;H_0)bN^Z6j*5Vref:/1RH89V5fPEk[\3(J+L(O'3h%`pYj`GtS4j&`F*dEhdoYM+I'`ot'WtTs6l>d7JM`JDO&Xe'OLd1"PJ>Ar+e8C76Bk+^2d:Y-T69;dR$FU_inr6LZQ:HV;8@T0na.%/$j<=rJL;Q3TbU`Q0R["DD,\?8;hO_K^<=PqC@dE$4K9^a8Et*5*C^*H->f6<L!2gZ+c4Z)2e-PZ+TK(]3#("`T)]Rop8nUW1d$;%6-W9%oCe%Nm&S[Vh8@E2rU34VTGRER)Z1+q\pdL8]V8ih:p@3JkIN?=D2\6iETa/p\uMj=3bo6bSVQ?#^%HSh*imS0GE0/`MXs8S%HNe7N(+3NKg(guL7oOZHE<S/2.VQd9q![QVKg,`8$k:1jU$rs!p^L7'.U'gIil-,DG`+/g'X5Pt_1\5mK]oo*_&jTpHD7<!L&8`$%i<B5;L]?cL\ln`$;_L1LfecEJfs8f4@g*T/"j8@L55#*o[]X,"?ZmI5#\oq<[U(jS1T[k+ZKjO#M.N&\d=uu'o!*#CRTHR+Cp32m%(A6r0%X-fr/PCjG<n[(LUPNIjLGd6rp?7c9h^LSj%,gs:JSG"1dC.3/BB-@0NN&7m=*(oJWmTY.n**m#L:-h2*E]ZLo-mjH=kE#7%%?o<O]6I7.rN_.+/R,Fd(OL0S=GC.*FMfYu>1pAAkcV#!^4VW")Vp#H['K#/VIdRp%-U$U.as(T+9W._m(%T?hG_7pap83HlrcCI%d`[s>Gt"cMC8MBVH"Gmb!!Hlf`$;UX!q(oI=b(Pn8!l#iB0)XPi6$-A?Vm&(Y82_i&3s'gBtA4-0QkFo.`X>e_[cbEKN4'$)[>\_%DaE9@ASM^j*oNgr,&+8YL?IiBn#?NkP@NlaYe:$^!3kinMu^:f":,ifL`\h=QD'^4)7hL%#)j],b@6jL;lB^3hD'Cd$Xn;bi#lF>%>rE]*U$#OlKl99eFC>jqaKi['i@e;pC&4E!@iDR!Sh"P`0<k^>;UdZ+F0*_n#8%Ap%<.6VQl7LmC2eGt@3EQTKp[h#Z,##dCgVGo%C(/]jqS`ftp;3LJ'f8"N!?<lE2$)8fVRe+pJaPWf!<gmPAr.F.*Ru!mMt8aKZ4.`oXYDu`=5JNIbB0#077B0o<f#Fbq-bqFX".rc%e9#ds>3!2SkCerDEJ$(_=L&->mMY:_!R,,iiO6h4,;jMV`U8U0+9F6ZMBr;tnJtg7"5jn,KE.:r';iT!:D/#1N/47EABV^LHQ#eB%kA%G\b]r\dAaesahKn]bj0jb/Xe&3PotLl(=gMrj*<H0&@!s3n,n-G9o6ib/-XcLk'U62(d0>htRAf%uq&>nQC973=M7:?m[@Gn+%gQ?\(kX#.s-kol#!X<YuGLVm%_O=dF4([#QTdl?IY,j?@A]EB+lP[jFJ=^-Ne<MO0-f.bBd^38e-=!Nt/"E:!3F#X5<Obq`3J;js%3,q`Bbs_p_C*HaggrkXc\tPT*g]redD;_G"!X/]\G2T?MFstUCh%nS9Ck-*\8.O/Oa;*TR;4O&Oj\*HUKLO/lTFneMS&cLb`*p48%`%53Kp%0Z3ppO=a;Ni?)-aI9fiO3AL:_6hI^85dW"/_I.WD/Z?7(4j5J3-ajTHTu81i3mC!XKm8*m.7mo,=])m]8&%E589#5_2C$%R0_KS&-iPT2aREhErXbnRJQA;p6j!h/D(_G=g2e5=I5%*)?:Z*$NiXeAHQHrWZ*j*VnmBqjh5M]0Z4=C-Ukhi*^O-5p^>b_d.UCJ%OMW-jTuQb2m*>,p,^_"E#/9JVgo&aE6u75QfFq='fUleTIl:*J#=1_jfpX-h40D>bYoF_1aTJZ&hB7den^%;R$-T2sL^,`?1n@ee%%dR`2,6mm."@P,E=GOocPnei2N_`iTXO1.oi'8o&Xbl<F+GU&h)0!9&HLqFNN0p95bkB1;8RJ<N75X,A6u9XSXKZ!1cn,>Sf*`k4%=:]O@3/HnJ\JH2=LaPi"AcguE<7ZI*2ENGlo!lF)#%4fh]-2NL.\L0(H":-'M$+jKEG6aJGAIA8LR_H]?I3Q<e&/_c8DcN:Y3lTH%1tY!l^o[Xn):4fk33\fcfnU_:isfcp[QtdW1oUo9;a_o?fFbr%#9:Zb!4[9BSjE6aiTPe'YV2GWdEI"JJ`2q)_]`KtIH5NY2n1!\%Dr;'i!Z2)a(0"g4+jC&k_(m\G/gGArc?h`"\HY)M]`I^l>gP>5HdDeeCd_L`-(5HX6pd8"cna+\*cl8LqXL*fjZkpF&Z"K)$P?HX%Rm_.qEJ_:u!l=P^ET)Zu"D,V39M&Ti7_;>k!W@S&iF.,)'RefdFCkN[q?R2&U?7AM.)Jr**8V4__4p2X6'jVf"-r"kj;1QVoN25C%-Dq8@12Z*H80J5D<u2?(%Pl`L3&IS5!YEn,e+Z3@@tfi^*UEjAUa,UG47u!!W.La(VJB_6l%j,*@D3-I)p41RKlhcr[K223C>ij!%(@*;O;M_`@&LgnX]rW>L$d0HL?m434Iu$7n>fAXX-j*Yj8NAm>_']d\(6bNO'*oa8KG:GQbEmTB7nEq2U6IN_=*Xo$TBW>gl=IgJ%ARq@aNA<MEV'4u>MI(hp$dO8^We1diG_W<H;)`Wc0*(Yq73CbM/<`WDQSfhF<!"W*@RHM3^j&CS$<)Hnb69F_VL[DqX.Z2iTe-\r%oPd;%Sq*IV2Q2no$9$N@5b;B*11Q1!#uos]!De5$&Vn:U/Gi&M)Lt&(NJ;9S#YW6p1)\7FH$Oq"0O`=EJj'@\dk$%-M"3eoU0.Kf%@NNCMcqG5C6o>)tca"d[L"`3&E"m+tEZ[uH#VCaT6*\n,b!PCE1tN+G5*d3>:^I3U"\JmB>'C%=!fN'Z-l`8X!f[=ud,uWr(>TPa%S^;*1$jrDgLPgfS0acR3nH2((VT3B0OEoduWO%!BIH1T/A!(kQCaaoA+\e4Mh8CMa4c:]:^gY"[Z[??g_E\7k^p[B2!T8)A"Ka_d%d4Lo)TNC#>3[A(Q%Sk9R=b<COjU+tfTu+3R7-U?KFF@,e:^o]R`3`Z^!Ejs4%BBR3LiU(aFC\RR-@gp%M,;):j:J()%<Xh8+ZG/e%k)A`U4(Q)T$aSEQ644uN@?!VW+$eC&LCdLr#*N=q"uOr%a=Eo;"&-UM4^g+#6bCEbGl^#h(YPO[0#0nU6?B[A.0s3CQ7'kK8$cjN%@ad[rK)iJ3-l(h4K@`C)EnMYgOl^8T>sR)pEQ`>hd'I>Y)'a=EA4t$Vq[OAPq@DtXKo@N1MnQ29GUsLu%Cb'mCL*!/KMC2@@SHj-%!4+e\EM#6;@387`[LAdC*!8aX,7ba,j+?8eN"Z@dG>u.*>p0p<@=jb_6.qpu'YQidesPFF\5dpo@QG*"_cN4<MqM%$]"1500j#>K%&?*J<'q>eLS?coSG6;&O7q%&tMN1-G[YY-/oDl`j>TnuVc+t=Q-`eL^$Mc4Z?Q:(TOXigi82Yo1^@*ROK@3Y!M$CQ`X:Qn)S=PPH%&fLdc'**Faqf-$m.g#k#D3bKCKoIWiGmD$%L9>\-)Pca<lH#nGRYERV1p'1[0mfk(D'PhnW3AD5QPEUZ*%rEP[>aDM9gPb`1f2W)%Ci^3=BH.$NINchkXAD;7]4/*D73htFTM:6k7_k_C--H>.:lXllaC;K">eqdE<./&k3=2r%/R_o?o+[(u)P=DaT"WC`Kf4NOcg_(&%Im_,(E+#)Acs-Z7&6UuYD-!?d93/sD%HL9SjN,#nZ34`gW+>duQEf3j-/6Im!&%<WrA*mO71T2;5YWmCe5.FZMNHj&0RGsWAO?RH%3)s5a'I#C2'J17oAIUt@fm]U\$S<;ICt>S^?3<'p9o>8(UEcE'/)>;\0#I#[d/jKe;+"3cTuOE%5>\ToNHG_/Z->he'('66WS$u0%W[q&E`j2G*X7ulb1XKTN7`%P?7J@+(FK&)P$pL/GEah344=!:n.TZ`1.I+:dO:N%CT1DX)l:/]e8)KbLkb/AMpZRi/dCqd9<r7dJ%c&T80q=Xrd%?te0d.L62#(j+JR0,kT8D1IDV[R?W_rE[$%?S"%*EoK>mGYU;Y,^C+P!J+bMq>pn)sZ=XD[7/RU4#Bjh_J=2p'J0<%mZ@/0X$s"8qlDMEh:lT2CS6#A)1,D+Dh`WB78;a=$F#oT;%[*c'RQ@S=>RGrSJ0sC>dhY?'7,3Q9*BB))i@`amOI:>!$eql/_?X3%aGLB(?20"hLUoE2MCelRBfqo,@l2MdMU]=fk'hmP/R]GFhb`?SQ_]#H\h,h8=o/tr$C,O:\8A)5%;!lV6KL;K\59*=UJ+&nX94nV%pFGeHQW89i4f>O_(9b]pF4)G;nP$A1CfXFr?SFI34Z^M=Z0[o#T:#J@E&<sK_-nDs5gT&DK1!"rAON=D^#:\uZd9@Ue*mcS,'fKQ%+V'MjQ0F)C'#nIKl"UBh7_YBSf4][A-4`iA)c>@dWM(sm&.:E#W:<S_eP'l=iu'*s"4*$md3>^@$a/DX3[(cVWTDRHTZ47mYiZ7-%a=/<KE+67)>_+4&=lZ5d=:?A,-tH5I.i)pSNZYB34e,l2eU*6;1g+1i%cJ&95uHM(FuY=nJY][9.hae&Xm"^o.+h6=i(H\q[W(]#%ZHk39YCiZ"ZiD78(u?Ne:"F_57PD+LBYt\!W$lhR!+EH^AC!P?N1gDo^^04u-"KNm$OPYq;355J0[^Ss8gZ!L(sAk_7aN+i:5'16%M^igX(^_EdK,oj]>D++rj1s:Sa79rhKc7uJUs8?o%BRb]qM#p8IYI*KVFNMT/J_l!ZAlaq8Upj=nNC4[Psnl_YCI9VG8YW6EN3ET%/uU>"JPAN1!JgB%T8*[nO@%FH?+2ri!!Qm;A]G4Y/1_,PK*q1OLI;pO.>\J_;U\N`f5a66*>'1597#3@aDggTmtX:X!?I=;e6"&m%H!"QY$B82]1g966,MI`)T0.Jela"lY.gX-@6&s>LYnicYAkC&TQ9gm_r._:m5cMO/Ui'sFOUnHYkb@cEb(o<P!0/;r=qp-XZW9Ij%ho+Z;35lLb4Ldf*-Jeu>JBqds%qq-_+E/I$duYst4rOWi+Hm>PVE7)++Nm94J2=bi:`.-0+joS35qN4&:Vm`RKqO,ephkVK4DT^D%R*W/0e:u&loK6<R<!%`7_$265Y9f%`+g,CTA0g?;P$3MYM+$;OqETlbkX;.Aj0RUbSAsW(@bGk%kg5(Zkg$]Sp4g@_cX81s+K$f$%(E*K&@1b)-HGMFlnZV78*AWlc#@&gCk!GNHVXk2(-3TUM9F',\,+/c4.i>rpg^+peN+Cq8+3/>'K+o]o3),Cc\>C4>L0SdP8PLht%8mT5$Jl_AubML;fWj*SM1.bGIkdY9SQ]s22B\B&U'2DY%BF5FC>8A;8O:cAUOg7_pITXKnOCl(&:c^IN5-i!\.m'i+H-t$LX?dD3%m.oX#)jAfFS-Hlh<bep#!^.I=,HfV-3kOJBW1ML3:!Aeu;qEi\"^RXRG[VIjXp=A!fn*Z]YY59V@@>a^^EIB+T<SXp1t_#u_(g%T%$V9L@iIX?QNZ\k.,:M"!!/^tcK$Csd#$8W(,$3_:B(SQ\%e(m4O0VG'KjKiuFC[a"YAFCZJS!.:b>j->H"KAo_QtZH=7?WZU6t=?%9U*=&YuMc4.2\&-01:-?&mMS]95"S6(6Udr9fnfJ"WcaE#+ag0jU0l'1G_M64jFsBmC%k4.bk(TkR^^6$S8oQ=(&l-+U,3VnZ:Ks%"(hRFEH"@Z!fIg5Jq@-5NQYX#@MVeK%H/;3Gs$,RKr`'/b70bs7GmV:DIJ='!!4.Ri3Lgq!])]W+^l7.$/ZQu*/g1AcG1[m@fU`8%$*h%B]A1.QNi$LYGR5;[2i`sG\19+/Hj#[.44nudP/7$I1keAX&(u>s<s6t)P6b,>"CM^Y9Qh:-.]i-mK1q6HegM"p1+F569='&#%P\^a8oo+Du@G,W%5,As]9jn2cV#iiWoI9PLe<m,r.sq\==T"'qg'Z:>p_8<TZ:f>6!F)k+b9UUt?u?7)8W:fiK9^s_JYHNjI`R5i%HIdJ/:O.Mp<A\[I>L-P(-qYg$<Y1>_#aZfl6K?g]n:*9u*BiI[kS%>nbq.!RV[FZ/!_p](!u?S#36qk5PV:7TO@=j\bbEHSk6Ir9%!)r\l!'h9C1ihePre)"i6r6JeL[5>?m'nNhni<^R@8B(60*Cq/;iG\2S^:Eh%@'#k`;/VaR$0+2.0O^L0d>UO-<i-s[/i-NA.kq.%:d[&RW_"$lCmhl/8jSFK0fH7&6l65?")9ZV_^:&AJO;GFl7%Z$XO2F7U^npV@j@oa`eJ>edg';tfXB_RJNA`5hH"=<;oH.a&YcP(%QJ(!-)A-3sX:;")@;XXt+Fo-Q!B#n>L%Ya<^p*s)*g\NS*jR[LTL7JN7NKbHUG\ph]Um@WW6c5o_a\-7p`7bJYS#SaBNr:3q8c]Q%@"bCH:_JLP:e!6nh@uiI77G[bR-qE!Sk*R.i++O-?.^#kA;@"g1LTVrCPA1-+aH,\</>@UZ7n)=L?qK?Amj<b"1&'FL%>f!%'9!O%_^N_;`,Em1XUK%)l<[k1:`o&K-SkkJib2ZN)*"SaAf7OSi0O/Pn3>@&Bnms7dj,3k'[4VX,K8D&28V9pl,VkH`fS.";H,E1O=GsL%3ip:=W4P*XX'qYMk#77t3.tkpVBSL95`rqS0l@jTmL?m\9G6AE*AF^jkb?PW&?s3\Vbn=A.FCWr24@aF#[`Pm4i'NAYcR/f.$LrR%T[MtY)NmAj7MsMr&@Tt,Wc8H-Uip\W9RQ=]'2]c#n?g!X8M8K9I<,,;5c7`X`?BgC[#$;Qg$s\b0Yj<=:o:QRl0jB_8Jj"RYCtbO%/8el>WaaXoB.=r;.RhKbi"ncj0.?1;lo-=s-D(?:R3uQ[HJ$)C<Jp^`/hM]]j033PTo5s?Dnb\M$l9B7TMf905^N4R'@m_2BVGb_%S)[1ijs,W=?F!hTA/!s/ZA-h(&4(nlTSu/hfHgPs.:_<*9gPb`1u(*L%pB7+-M8M%OPn-74e'dA1u4j>qYUO?YDHi]=Y!]k;\TW]%$Xp1G'Zk93kj7\7b(f>@+acBU22!H6ARrdnXUprBjCPk?^c-k%AB[QJQ/;p'g?)m/"m]Ts(g3re"\.T?O-4U0T9+-siduC$&."*<%Ae6HA$0,DE3nAOb`MaS?fs)MYKRh/LkmRT^=TV9Y&<=El_uUk;!5)VL5Gfqj!!^MR"YLUL(=BTE(dNbncp<7Ln\,@bJJp@E-.al6%CY=0PG+_O70O,IGTWjMN2bd>*,\Tl8&"Q)%K.Tn5%KVLqXKDBB-IB9"YA=nJ$n3se9WTDW&SsF$*^LM0*pcDkFNJlKZ>RI'9\^"M%=4#G2/e#jI5Vj_a$r.]q9\8tP;D9i=`V0GZK=\?2=V7GPMh:OK26>)Y*>lY?JeB\H4?+]Ij?s8:h[8"r"C9)n&-rc<KaBpF29=u+%(#k0Pn/VqcGP-LRQl(uuL-3CbK-t1k:dN.r!S;l019m'&9T*%5E?2I2>Xtb:Y!YA9HGF[?+XEk+c39>(#LhX*h$BAXXF]UZgeBmi%eGXp`i3I2h#23(R/@Z2?pj0_u9]7mk#_chhEC-fQ?lQpJ$I4Oe.DM\<1*(Xqk\dV<$n9'Oj78;n:aQ6B-I\6rLCaLB)%8``1(D[;%,fd_e:$*81EIu^G*!^7AmZKO>:>BAX-B9>&)DE/40UZY&>-[ELg[iB(,O>S:%]37ZS?N%8Lk^fGo;NMT!2<EOMU0R"W1dU7Wq"G1%Wk4e!Y_22.A;+DV&LdJ1`WoJ\J0KnmQ[BE,(f5lDh%Ndr5Ub3V2Ml!UM-/>KANh1<4"P_rn-)='VudEAS1,M(6J:sHC/9^;Q>M7r%.\FVL0m60U1WMT_N(G`P?iV]n%cm.7'*3MP('R$GClp'=_G$!Y\\XR-R`7337Or0=6dq/2TJK%dA,[FDY*.ZOCGa=\KO-rgf3*0m%1'TpMg#7;pNFQP].o2E0MD>ZWFCY^s+7*Fh,Zsi94g(t,5[2HI-\MY8N,a^f:d;t!7qu/,$K(D6r`F>;23,e0ggW-;6bG+C51EF*%@^&,8j"rQl+L$24Jh/A[QV[UckinsJ2GKn6"Vhk-NUL?c!UTsR4Q2**T+$e0MD2]5a@Lue:k1TC4g'DmPUQWrYtHkY&V,@V#Z5W:%+_(5*D-TQBQ4,XI`l9hE"-4eB!4T1gIV2fdL&b<&Oci*Yb#/\`-*Wt""W^O)E0O''Ba]uK2(qRN/1Uf8%Ap1h1!^(qh=kKHV90:$%0goGc3qJd&_!KG@Z:rkl3.M\fcOF38_\#C"8UAd=r+R!F0+oBJk/:@8QoN0D1$Cd)E(FitfE>fM#C.6=(l#(.5s"l*F=Va\7iLu9%@Ig'N`!B-]4#Cq*4P'$VR1/I!eDr;E2R%ES._m>nR]mB@3=KFBoiMta4Ip01AVVM[\=C&HFK(J)NbV7@Sud2]$cWQ)E)N(3KmgH`%9p4:k0%-!OYsrSLd[>#n&>7OFPo?.J@Ic"uNR9Wi\u#=J)V'!_1aXW89U=B00RU9ZK4iJC!tq44b(cV#gg4$k#&#[+qkiM^I7%mB%"h5>[*AM^TfEPJ/Y(LZ&3ZajNKTRQW>a?^q&(eV<@`uddFOJ]&N'-7X+'GI3#La<s3nL#Ujq[q*M%BqNJ@$l5X[:,\.LNG'.+!ol%#U:t+_R=m\_rWX./;G4/&lEoa\A+EgiNZ*D\TX2X_DV_fPf35E=YZl+l&+^mJV@2.!_sS"ka>DK8h;hdH+XuZ3`Q7<;(R]gW29>3%^4sck#4mLRUV:V$REN6:@8;JSPibBDN'Ja+.jZu:`s=[3$QP!Y4p7s_\Ih/l9F8`I^eJ"?i<S*\bn7KneSm[fSk=&Lj9sBU_5%7h%QM(T5%Dt(jHR)!IBofb<G%:gN8/R(Wk"(<od[G,(D:K![%jXqKqSG!J=[RN=ktNsf4lU_fS%p1%01_CC;O"s0Zp<64),e*MJ&k0V%8J8<<Th7d(U20t_H-ZaXeL;(`*0a/1=U[ueOPNKl7!XCn%U>rBfLjiDn:MjW8V1apeN.E-+>D3P(^q!A>F6ZgR4MrXOs"DRoL*DV%-lXX0&r_+TYB<A^S><,%Q:'4I9bPQOUe)bm8m3#SF-5UVMMG`*KHa+('T+nZP(\E`Qm<#=$'RcN4CN8`bX#!2TjTUCON:pj?q7I.%:rT7!IRr!$eUCT-#k5<34,QHl3k2=0"K5i*\e>tb=:qJ[jFtId1>Ph:!j"]e+:SC)_EOeZ5amZERKEa7pKE,.J7V7B"*4IcL>s`F%!31K5n=_jmg*N;A88A4%0npgG*f^7IaEURsQKE]`EUag6"!4di>;sZQ^ih-E>fT^"#$ZXE"Z[^hD2heWS@t^)DjMm$$RicT#!2XZ%9EB$t4cu&2]BU"\#%=Ik7;>B:QZ&!Ec;#tEXiDM1TM`8D?<0q+"rb4W@>u<klG5P7I4U&oZu'7)_C.77du,-u0J@B0g)=n"*(']F%k<[rVRh,"a:+q='eEKQa8K>Q#)02lAHD&1q'XMGOA]*UQ_AYI&&5'XO&?24Y@]7^F:l84uM0>Rb0+^(lkU#AH)SJHW6DKUg%tdB8%=>3a?$@+N:TrOn>eTkGuY<D\p#<fDB!3:*!,Fr)'oV!IKP(mOY2,JIE>IZSRZ!mlc56HfRG:BMH3"_GckmJe#!GaN4(L%^klBn)[%Mg@TC.`Z'nTGK;gSSIXJ)JoYr=i]U`13$LWO>Y63*.Jb2<>72nUeTiVj>ME8$#@Jdl'tnHiF#OC<MH:3%*gAs3>`S>ieU\NK@@K;%a9jtR$651tbR-DIacIAM6(]?ZPYDbd4I=?]%6/;(3YQt[MYcs1l#tF^2qY>g0I=g6fd8#GJNUZTaH%LVJr2H9I<\S?K#@<X.g0[X%TRa=rq=PK!NF=Oc\bo/VXDppB=nm72N&AI-'F(+&dC'+j\2.7GS&1_7(aaYrN0;@e(Y,I9<)U/#E;@XL2FkuFrS"WTb/b?HJgHqV%,n;uTr99;sibE!5Q8'p/bAO+H+.$E27FmjM/P.!m)+.Ki%#1*EhE<cT9V+44>G,8S["3`TO1`HB$?E&c!&.*<Pc"m!Nf!86:H8rq%DTg#$[cpU(,n(h#3h#hA);5<d6TR^P8://b$0chl@@LA-qokPo#XdSiQ;L):jf7*q#^W6=,;GRf$-NZiJ1V8,GtCH`nV]_J2TJMt%@c[+tjLPAsg3ePq&@9V>UI+B,43`SVfZ_\SJ$D[/)Ilt9Bh?Ce`+b'U8Y26h:??1]3354oOV<qV-$&"n]F!5LZu3b"9D(=KOL/=\%+A1rF"LPO2_S)&^8]WBc+6!I<ak=Wk>%9H3oD=*@+UO]V%?+Go_kR_>%\JeB^P5q!fPCgC%,VE<4g8`1]7WGm7(HJD@n.(J'-^,,%&tL;IdZc0qMC@llOnCBLRc@!O-FSN[_];@51'.SDEnH\T=]r3<12W\]H08AFNdpHt12d]GZ3#gBcNbMB#S6[!RjM3$ZS(M8[:`8Z%^\6E/kC^H.flKW":;./nK6NqTesf15+TLEDAeN2ij`C%M4hQuO)T7Cf;^0/GKp(S5@70V\#k("#,g_o!93RROBV%qc<A&2l:B(C%%$G.S=]m"qWSgBTl*Ju=+%5_i/Va-Klhp[='0\R@"D9VDgbEZdOoY#m&V[^$>b?XWC4.,3uGdSE7kDak>5PcikQp:GR:\sd14ib22%l;!h(:8;L#)q:g[,]=nhS/PQ1qQ&I:_"[Z2:,!H?(Y&^<A+STKP1bIH.@E?/qt<WspcBd#?:^o'ihYpB\%S0OaHW;q)4C&Jl:#PS%WA66j8QA6W4K\XS_C?eZkl4@+/FU<[O-rg[B%+V;GA/eV^.E%Q8IWl@1qDQ9o"6JWJ2#[H`u]CU57NhjBko&&8bVX3k5]5lj!nU"%6sl%(e/e[EPj#cc$9Uf/Lq)iT?nt,?C2r5$IZtrCm@o-;p+$esW0T$&:d%.'oue9q_jF[>QACT04.81B"4Ir3B[>]jOrS'V8E\#c%IJ+P5't(-.gf7VmPR/q]Ybd'G$fqrMU,Sh2Rd58596;*qPeFnZ<qXqm5Posq>2#&3=!t80dT0CM'kY/bTEo#m@8B0%W,1prR'l48%b:sOc<QF^=$i9@,+h:cQ?G4(.m5+8-pB>?aj[[9=d\]Z71OTkcWbLe:9b#lfNi,?Wb)<j$8J-o90?X9bmH:"r20dG)r5l/(A/6V[%\JuF8Mn?FZ9p\\tIrlnNR-JF.,95@.#'LiPZYtR(^h;?,mEY!D=RP29nec-?0Vb2/gA4e5n*GRi0`2?9H]PbD+*G+4FoL1F2mimn%rVLAC1g,fL0?7/lTH<sbV5Om2(,eA\V'OND?2l^'r:4_9d#DFf5>.0'2qk_<1k_nf#dN&'$k5PI_!8tm2JO^Q.RRWXeW4jB:KBQ0%S"mrEkk"0X1fq2n`u18B1EA#/ZLqOQ]j$?URFtf$eS#Q9nXkf^;o?06C)OAuCLhAFQ6Y5*%!4b,L&TQh8s%VD(FO_k4obe*"+%Yq%lE6B;N"&Z;Wet"U;mM&RZ0quNYqeImT.eO_hHo:\f(=IcSo'R6bIp,\<7GqiN1Q@k63?-EQ,(j`\SG-`Vc,J')"G7E0`>k!"QKEN%Pq9f8atq#on#m77W'>Jc4=>TL@K8lq_#^1ecW`!,KaGF*"F/1h[SU\JH8]KQc@9Yi9K$mnEkGVlF?fZ:c_h*2Kg)-K\/tY#9g=20%`i]e;7RcB^hbFhifA!J1%BHZ+H\9F>1GBGW;QrXHocTU>l`At?YO?8;5AM$u4iZOM:LnEhoIrCJ]ZV/ii6tcULf3t@*iK:1[t^nN%A,msA,_qTRl0+`ha_LnVg>1bL1&d^JOoi4dq_L%L),[<_o!Ibb!-A4SI,-m);HMEB$0*.LEb)H8?eLd43pqj,<]g3t*Ee@@./WYn%Cj:?jWCb,)bOA]BG@8I^f,!Gtqd.sg*UgAQB&dQOhN=A\Q?e6Je9QQ+*BdnJhe?[eotb26fq>8DUh-1L>s>NZpH6^>[]I9uWMQ5"%cHtG5c<0h2nMqqkmH5t%S),Af]<.B/mRkioC3Pa*1N\*7kc``jB8CTYs(HDghrPgX^:K,G(n)I0f*l9C7O#rAW&nE06P/F%\'9#=%T-nA^:=p3cqkIpca?4NHW\Zj4F4U=?/^?YQe!'Al=c0Y'o6r%uh:4['Zb(B^&6.F3A8+e-O5fg$(.<j2=0(-l?f;<2;E$L+V(j4g%O>ZJLgh+]6i8a-H8CLN0ioQ0?A7)`L[C(>s)r5Gi,H/.c.s?:&o4Nh9.%lihTpG+h1$`iHSG(%g%V"deeI=)0N4kgUS4<8DSI\1K%j5kcf%X>D\o7)VA"!3mK<mC[D(&$_HP=$e)-n`%OF.H-Y4bnY/77&bbis+K&kdS_;N(:7)9K3<DRankV2pOGN^"*d=2GUH$!Zu#9%6)bjZ32S]!iSa_F*=kosC$b4q1n=tJ[$q[)c@!(rYIL2r2XCO76REMA*4FtZl4N1L$,i*O:V@^(cU?="V9"%Oc5E5occDMd%[8DY%N]u(@E?CBQjQ"^`g29Z8i_(lMP.H^B^nQnYm[3:#SGk5&[:d2H#U;oi^b(2?7<@0r4=2?&"-,?I#F/[X6KS'4'V?*?YU<$%hQNp/%`5eLA:djL6=(KI+,uQu+JlkUbAM"#!eAH/?X?-2-\"0A4ZBpQ;mdHGWf5S+d9s/#U>+ELl9l`GQl,iSCF)i)?V2$.^c(`O_Q?K0E%/1UIp[JTk+p+MUq9eMk#dG[3BDJM4eE"KV0IFETSmndOZk9doHU+$N.&G)kR0N0qbbpG^67smbGiX?/9U#keW[K</7]bEi^0OOs^%2\f*g*[WfGK=SWP*6V2-8=!H:2RH,=k.V)Y_[RuZ4sn*b+5a_#OcYj1.OoRs+0S@cj1ND?Y$I'3&^t<h&7F;8;D:)#'$Zd`:3-"*%]?%3p&*Ocq$eYcFAV9sX59Lh4LkhnPJ_<^"Q>3I+K^-#%-\'VE7cOO)b"C@Ym2WRVrEp\gP\G/&\4[ooA!$N.33NA*:O%(87E[5\%='1'=*'DKeY,%3f-<k_t:+h$W&Rm87K</CNXnB?VAN&Sp't;NkQ<Kc`TbF6&<=>V;]#(cAF;k;mBeQ<kb7=nPbtOpuLSU-6-"p^U%ZY+lTHmd6ON*5!e`M2o[NN=CMKId2uD!SJhT%WQq!4j]9d.K8q+Q<*1&Y;@+LL+l_5l-MMpTiEk:JCD%`7)B/)Sc/ZMc+"r^>_d+%hEJ11LU1u4VPpY$2TN_`q`.""!>iC4(+pQpfMSQ=q>MWE*0*N(34CCkh)0FI31;Kk_H?ncH`8Ak^ha3KLo$7f@haH3<7.rt4FphH%#*"kE(U]pUA+Lt@n;j,43:tttnq?IXE(3RlV#*+R%i^#mneo[^hpMQWA?Jrun^AJLqSF,LAO;N'@<jLZ&l]U'X)[qoNp.TI9_g>4%q/*R\iHYbH]8bUA66&Mj+\ft_S3E%#N[QG9P:a\5m;`QI8b<@'q-b`fhYq5*K'^:kRHR'f,8Pfq\7XE5CpQ*KNp&g+0Uitlh/9D%%25=+)^g0dbgeQ2-oc,/%Da'qf9<nHUrZ5JP,NXIqgrngo>-96.nbMOKP[QV'Cme*b[D94e_Y(8AnMd-M)?E3W/cXW$Ynno+L*IGf%Ms+Jof1(N_`<,sj>K;66ZQ1KQPhe^&j'(*-(4>-S6ise=)mK*QP$cNAD@t37K5uMq(]&"bXES)e*_LHp1t)c6Fa0DbK;!:'7uF6*%J_ddn+hWsRG,`MtD@6j+E"WN;A,'aq(=s-"El\`+D%J)KktR*0[U4BrjD#hMdS)0biI:[#"%CU@d9#.7:S\F6CeMG=+MnMAp9@=j%@"812m67A6?TjBSSO2OnW'UCRqogMVI!9"F2&\1D!jNVrGl.Ao@9F4+JKge!F2+;gh\P@=-B<ebQa4X2Z8qPr9,ItcmV.4l@N2(l%D4gmCs0V:p;Bn$9fqSRrH;C:(iu(.S>_Urr-S2`gd=I#/HO*_!5;n^<Gl$5_SKbC2[OoC^+jcXAm5[J2omK5F=*;ao:H:`:Zac'R%$_:NiVt73de8m3?Vj@i#,A6A/")'Lc7TJ2=".Mkcb3kB=K;3o#E<A`/EOk@?LaLd)]eP6#oP:p5h"GG*-g'D(=4)4j`fo("$=\m;%^SaK-9W+N]&hZIkq(k,!\HdcbJQ5X)nL3r#AKQb7GCqlKERU(uf6CMd,F(fEamQ7`"bVP27Qo*t2,%eL%GEXV>-eTf"9Y)ed;YID%s51R4Mo4Mr%D\ttQG^`t"GA^r]*@oe#F(?g?I7q4RQ9G'5_[#haJ6cVd.+dN+j_;=M'apkL9*j.XF@kcP.UaOU&IA>kB<k(V!6K^%/T4ScWnm7j';9*WO/FKj,W$)EiX;#4epd]l[=a!u?cD$A*a;Z:)kY*`q2/8]PP5XVpEYh\K#,%`+_'brhQsW4&LN!?4ec].9IJM`%rVP1R5Pg2f[o1]uLI)$$Ko7jtXY]$QNR&2R+B`_.,Hs91i#T0AbKldWBB\QYP\gc>\pdH(Q0.D%h;[6m%8$UibOg4VQsr8.Q0"H"%UE9O)]:\P?9=j6J4usrBRX+=R(;m6&]B#Oh*q7X$<TFlna"MADlgGL?^.q0?kI#<\If4CU^?(\tHCg>AJ+oDSYh*D4$N1Q6_c,tp%Oon7UaCRQJf6V<bp70[J(i@jH\Xc#O+`dqVg<>3Pe*:]^7[I.N=rqTP#2otK=bNhNS<'p69mV&Y9sE"6Xu]0XZ=0q_D=Vs5_(CUG%*T3&>UV(RZ5@nL19\2GDQUtut[B9i!`=1pNM<:%^I*Wm)9L*OLPA)Y8:M.2=/`lU\D>a#,rTM-5\<shNJV>eR`'*SNgCfU+"nCBV%](ONOe6=M+"<6K3i3\*nc,!,G6PI=VT:YAfp\?VfDmG$:;!,fWA$fHB96A.n1!7s!+@-kZE@r3@K7XToLnb5NOF'm<7-,d0TTu*W%mF;H?*GIjtK=3udRs;L#gh^G1K[U)_&aqYG#h'mPj_c4q-!0ha>2iCYDqXZ:V7Wru;73VY\06_q;76&"FP#&[(O0XS#KeEMn`b$-%Q/p-(6,XLGBHTa_@%!57XP=<lc)+tQgCB6FA+h,)>T%aFckHA]R1uX/*1-9Y!8G[rB%eOnD[S:O',KnbgapMm,%N+!Jmd"ELUC[]%PQco)g6a^P)5AE#4P#MA/]_1:m%E]2XR,,,NW\2U_!mu<9Vn1NW06I2U8=(QR,GH;g!AI)!3?s7@&d7XiL/Wc[=S8>N87r4"F6(6%po1#C`#I+!PlLf&Jh>MfTc3o5!doO/J%#a>MW</np,I>!5EGGHP6R7QGoP?A<(pZbK\:89g>SZHP<GFC+qcbhdj.YkXn>K)\Jp>f%T@O.2kDE6,[:+_m3XdD6q3lo/NKC@o,lTSRf!&q77XJ_V4F=do&d)nd[fQd2Vapa='/%+^I:lj>/S92?YiE1jcoW/I-Y5(o2stu6%EPjW1Rh4as-H:04>VY1>*+7>=B$-a<^&bsQq4E96(`Be&d[U0.)bW-:s"b"qR>"Z!fg?lW(!J6_s/5>E0YlE>nL9t#\8:h>1Qm5k%<:(k`#1LJ"7CAC1e=T#."o>DSWi(EFaIgu\:_O%!M=+bP!(C3*GhY,QEHD\kKb0H2jO.B1)?(OCX-T,Q/GcE5[HYKqM?JqN4m81%%94Q^Mc3b=dK>P1am;k:E^?s*0C8>OCL%*2KZqRSo\*LVSIp;,[$6=u7>70!2Q!iZj:nZboDPr/+A"YH3<P)Tj25jZc*c&XV/oEcF%R:6)gAK'$Tht_W.!99u#mq1mg8`r-?GWZE--5rSYG#/I5<S$7HGhpi$SCBm-^ami=*ufr<HBqc%Q+?JP)Sn35\LFJEp3#7)cJL"W%-nE*</%VSC1`%G[TN\",qu*r3M@f(/r0S!9rkX1+o+ro:cSUT(H?F]o6<fKb'Z4C18O>RT0S5$\NSiV/`Ybe((K[FhQ>Y5FCepOc%'0rKq[cKV8.&Ctf>7p.7oHqL!4hSI2e1@^nV"B3]CriEZkK2Rlc#P\5FM'JjPqjJg@;ERdmJ^!0PE4%jdR[RTgThNllj#*p@dmt.%C[J.tlk\8f8^E(Q+uR4H*'*'"Oe@C7UKN7<O0mb,VVZk;BGGk](#HNEXDkId^1*$OU-%6+.WNW')J)";P=LEUW/TbqAA_Blf_i9#%fSNLt548B^@X#-TR/d<#LeQLg`SE[D2aB2s^GrD&^+K'g0Lfm@[1cTYm6F\-1JDtL5d[uEIk:marqJQ*km._h1F>TbYpq/B]$jTN%,l@9j(:&p.4$,p2]?/N/K8^['o3Ota0u#<'>E5[(#!Kl-pWp;PX>qGeB*52/JK^be(!6@)Pgl&;5-gYLC__AF]VmP*-oa^]M$*CM%m]@`(N,F$.VR&"d.E)(*<sXPHgN!"#J;biCK30+sDI20++;mRjE10iO.5`2%bqdb-X!H,pbZ4Xi-MAa9T9fbfG?2:b[5.EDTt<5)%;FsUFrNl?jc94dEkV-]'l#F+E+:/p3(kU[Zh.<JUO%jkM1TG#>qebG?m`WO0Dj;$Aa=E11#u-(^dG&Q9Og,q:]>Kb$5imS,k]E[/%X3W>DC,&:NB`kgDI^pg^bR_"oTG=IsUE0Ml[e_P35aK<!+ZWZ$4=Jk\L0UcQ^G.<^T**.t1,G;r:4Bload?TW*p,u>[AZ5CrAn`n%:4?jNkd4^BjH_$HGj1A@m09r6%%hW2:T-udb5iq6V16?=^=I7@WZ!&h_o](46-)<QOjlTTPcB]?i@9c.HP/#o?eAP$/Rt:B==?c8%!QiWieC?'fWO.4k/u$9q2ECT-$M-k6N*SlZ@jT&NmalW2NA]l^JpjsH6G($o%=!L]WeK4OqI//:)c?RpoK?QH8gWq\\(a8Zirc7H%;!LsOW@O.24Eg>YMR7;[kc*^5a#o7_!EZ!=]NFa;Wd4^nic+I*0o0[RcD'gegp01\p[$#ab[;o\eC^?#TPT%;5eCTnd,b47RR6FX%AH0Y0.<+1b#O!ubdb6saR@IUbSYfQN?C]KGlDid4i;"BHN_(&8jSL-loODaN/\:!,-icdch;*@*J54hbbMCi:-[,O(-JP*UboJbj%5G!G0Z2$u_+2:<F.=i(01M%hcFIG(n-Qsr92K4V_6BM326qOUXHoQaT*NN?=[lNOCZ&Q<k1rr&BHme+if?c2CNHP*jfD`aajL]L<%'X`].Md4W%"iem/<i!0QdSL9q\TQ0;2WJD(PN@K_n_DCk:(BLc;hEJp04c@W`=KJt<T]el9K-s^]]K8[nS.HJFl6*4XR%'B^e9(B%a*DB;:$8"D2F_VSG1OAZmIRRjWq?+@5aTuOLc92;Ot&X*Vdk?bRY+&<YY1^;-B)[*Os3js>R.ne)X<n^ooF$a@<!T1D;64I+?_$g%=e5S7\DA>n()Ur:3@$2%05O3OU"*K)Os5>+O[T%fQH1M/TLYk0`]emMZ;3]0Niu%*K]Cl$qBqhpr5r%#cU@1ZCe<H3>lO4&!Nm6(%UbQh[Df0hihsL@ulkqQS_`ap6X[+OiWO_?S0]']OoDTZ?),u3H?S=KlX&"Y#DPIbA!VUD%$QFYK/9(a@B8)\C.FB)7Yh!).r1]:1%_0LZp1m8hpbm;m*V#nQO+FWTaO?P7t`C*-(60aI6GGB!`6...-SGbd9'Y:u;cNgu;]q7cJ^jpPa`*N]^PlV*U?_2R+XYs:ZB#-M!%!\8D@Xr"qW)C]n'pcTXP)eeC!lYY$jBP\tTq(XO(9n$88Doj^T5qEn/"<Un%qukMUT-I/ViQRPV9S9^(=Q7p@c$,"kj`Tm/R\`P]%b`ZkQE:l3m+O9./asL?Y1G2&:/n\P)EZa0!:n9ma#&SEB[h5?0;53Pf]s<Vpd`"dMhU]27#,Jm2'"hb0G="#$-2"juLa+*TjDeo]%`Yom_5q&]9[!`KXgn)tqGY06E4L#-b1eNBW#c3YUi'JiW#fDQs.Z=H@V'i<=^GePpK`:+fnrR<TQ&sG1"(gMP:`B'tncYX3E/G:S%Khqi`17dE?bAd8-!2\-]0:j>qFi^LAW["ZMH[#h0c:luDq1.E_XpTQ>m%eAtnp^2A^A+K9MS7=J8s'oP8ae;l,GUI0UceTE*a,A?%;PQ]/Ohs6;A&`%^!M)'K3HbO`PhVet3NS>j$=`VZkbI[NI_>m&E7sOF,L_#'#s\,WAuAfb.tGp[$XC'Oo&;I>i#t:GOfH^Z_A9$j%UP/'Z)`)NUGQ51hTWB$`R&fgiZ5<dJA;R]BKb.'JEm9UT1^RODDXF?50&KRQ^lVNPDCM?jQhhQ#VBu-p,/tYa:tGH%.j>EdpKoSS%JV#DpQpM*p",g:GXRJN!&soY\6n&8LY%QK14%abb,G%'!\DefXr?gR2>!,P%CR*+1Z5!Xgj,8!ql[EV/\4`0%*qg>kUs:NPi>,tN%C;E*9_l'EB?/_:\?I3;jGqHBF3g)#46iG`q_LG`?X"<D0o@[LpOS\9q-3C/rp\+Y^GqPJ5;E*fnpT.3G=:n`BKUPB`koEQFHt<OJ%rGCf>MqO;`(FLob&OmGu#Fas*!\7*j\[)5hJpuj4iRq\p/cD^gY/'h#Q=OX`]2m9l,#/,\NT7P(?_\]@,<ZqdnN]UOdIHTZB![_b%-.W@dEQ/DGdNl%i(d0<"09G!g[N3VCNIESb<M`]/,,R@CKcg@P>7>GbeRO^`*8,s^4HWV!N%V%#mDlTXmLu/7OcHp@6pE9Q)ii@9%*G-cA.?bj-OtArH3*jJA3:#DCHX<c@kjc5rFlS*Hs6R]0Tdb;`>1X*p,HJ)Io5=EI(EkVo4W$JANu"/"^jfn(l[o_2!6T`_mf@[o%L'L9Qc@8NhG9hI/BaXd'!+$`)hCp#*?,/oVf8KKP"AftgK;8M'>XE(Fcqf:le`DM\Lka&-W\u$=(EFdW?7U+9*/%5D)%c8m/32bh%d"le)Qc$ZE=]Kf9K/CuG0/VndCY6_$44r9cB4?$,K<1VB2Dm20jS&L6aIqF.E?PXWe$<tdFMh/X&UL1%6b^J&<uNg&BfMFK3O]*7%05P=fcYhC^)0.WIrnB3bdh#e%%R9Ys/YM]@'1uNS)mP0W8W!%f:d]FpE1_sYL>84).na>ggVpL5?pn1<c;>5%'Cld]q8!I_=_IE;%_[<tj";#*Lno:5(bla'SrYtrn<-G#M;S;ZHL=?f`K`Hkk[pJ]c,]56F/3&`uKZ<rJKd<;s-KRD+r)piD8^jTJllpZt1r$^9M?GoW%_X+MIf-Cf87D\KsHYQt4YeYqs.\ZGM0/QR&]oP\f-$rNmQ?imABXAdZ&6;r'Ve*A9T%>;cdU,&(<U<-]NKg&4eHa.9VoAX.gZ?N[%@!SaM!u9gtJ"T-P%pj[C;`l$5e*;#:KH<]6V)OP(5.hkY/(fbarC%Kq!hCpM(![p6,$=)iFZING\0C"6$WU/D8GLN?rM#0e;]L0]%7@3bm<tr$4;C;(c^\7W8ZYuH?!33=^,L+$kcRTD(0<"+*'Xp@s'JXN"Oj"kQ-tA.[bPGd'VWbZJJ;bp<0..,;%l:2DS^-=%;^@&Y%-1=7UoN7Li*!Ve)IXc4eTR944=CBIZNY"dkK'+H3:eA9_rhTiQHFP[&VBg&SN(c:<;+B:kPgOA&b31Tld7,!Z%P`E/7e[^,F?;[m%6I^t0jOFYmZCZ0k<:P;J9FKANq[0?ET:#i.kDM'XM`F?Z!M.am.I:Eo!54XJpms:Al/]2e:f+mn![o`q"uYQ9jK5=g8VKrQpLgD5%GsCIMrPI^i`rQf%P_oCt-i8SBS.B1"bd`8'DRD&h05<"-=@R$don)_#Nc8-D,7l-_-F`mV(6*Eq'b5(T:T(P+!/b8998h`OVh+9<%aefqLf,i6apG/-F6"fW-ZnAc)*mS&*lmWLCH_R=qY3`ji)?R9-hHp79nDE$qf1)I]BCl`(#W9J_3<O^qh#e/]7NT[,d[M@kmRbjR%eGtLaD-O_.^a#A^o6Cl1nY_^DrjFK/J)P*&PdZ]E]B(Xl-U`dZ65E]L\!adj%BNd2JQkDMW<GNa.E]D?d9L]#$elOM#2,VdI9mj=%`3Z\Id\+T79=/Z7b2HjVdAiP#_2PL-q`>Lk_t&7meM]f$pUKSpM>*,:%7EaUi%&W#GPU=M!c!X+AC=g00BpT']N[P'0mlfB%<%_$%$up]jU29h_9DT#=)G)Kn!$^ZE(LdLMO`hL15UAl2WPnt/Bj@Oah338B))+!q86_Dm=A8>C8'^Tj;B&B*_@7ZMD2Pl,e:a"/<jrM.%k;Nj:oCYj9W8Nd'\S=O@GYuWG#%3^C&%LQ2Ri[Tq+6Uq%r##]m)m2"XK3JT*o\>H_/SsB8fHPKkAB7ZR6R3KY%*"Dn1OK\Eh*3g&%n/&$uII$H>_GOCqn!k>m23Ph&OZN(0DdP7r*Pu45:n<m-]g%_L_4^C:ZZi!1'@d-E0>Zpa;mXI[X.t*hOVtdZ;UbCcn,F"SGgSS+%=9Xh/3$ppWc&/Coa1e4cVW%I4FZqCnlO_83+>No3AK8aJ8EIm0?>4RUZV7*rE47Cl/uid/q17nr6$Tr\hc93`4WI4<`LMZkpi,iu%B'Wt\dWcd)HLCdKl]f]f`p5%NTH`d]Fl\Q("kZDKe`dGGYQJ[tZcUnAL78rTa[&6a03h"-^]&W[LjUMmD<KM-;=CD+QR5L;k`%]5%ia<^P6R["m!%=PJqaKCY4-Y.'D6Hbq2FeAp0a(hC3"GUrALBS34eb"SVJ^`@^QeODp`"qS!`]R+L6u*el.1m:'td$)lh]OZr"@"h%IuaSq\4T&6YZe^?S/LglVMO;E4a)F\&c<bM>nB!<gcj'ILhQqD2&#EUR51YEH#\G#0L"M"5n^D"&94/4i+&C'JH=O=*"H&S%gqig%+:a8BC`Er<jk_p+#COLKZC.W<+YO<q>J";LMi['kP-!U@aE`2B3&AO&Em,LY"7'&3)hA1n12RlR#Z5-?-n'$PKQDXE5]F/K)Q1V$%:`s_i5ECl?L!bbOB_`0++.8W6"UI@,`ts8)<KW!N5udT-&NG)(:\t-2B'T'n^cD=T=Cl)YhNscR)^!<V.oO/+K*Gc5?Z)LAs0_4d%Hk/1WK`cp:q[^1GF@2*J=i,_=5l4o=4GRKH%=9WPX%2iRJC[2oJ?4$JrDC.Rrs`c_PT-%KL3G[:C/#BVrC3]JgAeHE-Qu([3<I#X%9g*Ou'0H-TT1*[dgk@RuK37Fp]*i=%[6uaX=k1#cTVXAq$.4Qi%7KQLZ#.OfjhQ8'BuRf0>f5V]bm5oOD&#?t^k0$;V2A=j_G<GV%%^Ri#')L8HX>?l1?gV:/LNC;=7mo!5:HU52&GdBs=sNUlG('*pL7U/e@G%1fGjh)40pVF!n/sGX`(U`h*kWm>9N#A93&SS-cEK(W%4M9FL#$@+;[G+;CVD#%*D_MlFr"3&;j[L.@6)-,pT/64.FC'FlKIXH<r[MVARm2cBR>:N44Zf(;l!K`ZI#if%M^q>ko%6Pi_cp[E%5V6e@S'[5@Z`oJ3)4P;*[\8UBc]KGGNH'2M..!f(At$^bpW"-O+uDFCa0\CP4FuZZ&DO6p\31##>NfoEY%8EGQUQ'+9RKC&3_=br%"9u9\JP@HBO0bpF('UGU(/HZVT,#ded(bj5DS?@K<8oL@:51M]XKie1HSEoBrC0;dj0u7L"GWqQ,rh`YKOOi10L@1n#7ZU@P'Bi%%IVIKb;V^ZeB^UH(SAFp^Es)Vhc",Zd%nhf=pd3e']FF'gPrq;]Vscsa"Scr[$3>0FbUnmjG;D=Wi4lfs+0iZf6u3E$S*:;cG&YCe%Z7Hgcdldqp2b^:^4Q4>N&,fqGo]QZ8f)bg%W#Pm8*7i#D6%OW?%Z@bdij@BP8F=^+m?+t!Pj5h>!@e`,7FGQVK_[I4%c"e2krZ2.%'Z0*=1^brH'lrM2BY]jL;B;q9*^Ps@.i<A72J(+0m7GK0"tRhP"_O*YYC8gO6:0-sqMS^nZLU]6</_d+421Cs;#bAMa2tW-Fjo3S%S,p<HPJl=hHj8FtdoLXO!mZ_i65l77_&"(LNfOoV&c<=0K',X<"lqngoV3.OIrRqCJ1Wf[-#2&,<&YiPBOM_\g[B9]'t9uV+1<4j%d61ap#b-K/j9uT,Ws',g@dT$)gETQAg#mDKL]ogGFI$bVT0)UH3C6,t87dXqC"PpW(Nu<QR\12V>+3m$#S$M8<>d/e55"B"d(alZ%]'q05'qr\0f5NR=:E30nYH%FA=[][=U1hEXKiXh[r'$292/rgk6+s/MB+Pr5YJN2?4>C-=nau!kJ4a'2k>R+/`QN>6[KM0m?)_2[%PpFn#h0pCI\J=TOkBiPn@uU>a@c-0PJa=lJ/pcJW/%[5)pmJ$IL?%`c3eCs19UYH<55%fY[SKGPYLZG-`3c]qiO]U.'tY5oH02@)%?[%</?0X38N8K1Ud(/_5HVH)@@TPu$$f.OH:j0of^43V>R]t?.h#("6p=C/LMl_@ZhQ?4[H)NRI/ElLlaK+abh8f:11$pkm0D_k4%%7bjd>dlS@GAAC<ITrDXW!VSNOABV7iQasC)/h$OIdD'$3Ne[g88C@c4DP!oqSCW\*OrBrIr[d8.GVQM``Ylao6i1n*bfSjV"&hn%JAfG)Sf*VB]m78DSD2^^$bI-"c'+"`[F#BlB9lbV`33`Z2S3OcM,hV7=^XI%)+sSI1h@GB2qbjBf-V[*1MAMWcB?<C*5q&A4@^ql%,IC#8LmCs[N-TKac0I@H*Zej`$$GG5kabZ-em&Urc->4M"\FLXmZ``3-^+Y3P!",ViOqU"*g\NbAVS'56"8uV_A,4I,mNJ0>k^-N%*;)Fd5;VS[h%L=;p0=c!I+Z:l),PrWoKZ^@B;LpY)0C,,7n)N^\b!&$4JX)ofg^PRZ=CM%nrm6T=0W0)DZl/15P"D>$=bf[a8Yb`%PG30E\;%%[>q;n1DO6TM.TDm=.9^U/8HcsB/^m_kg.#KmYLIrH=K%82HDi<gHkpk4G=Ki.A"[5dou@XHpo2=,r7WM2]t7^@>O3Q"%@'W."BfiidjkkX8Mk(#("?1D`m9cH0X0e<I-&4,R2!V&dPn<:EQ^+<VCgNh%lYpk;+HjdB[C\>!+UIs&>&U&[e/Bj[a47ru,OYj-%*Ojg7QS0OZ_ZadgW8@N&6Di.!P^HUd@:NHOad1iqhT)ViE)h`6[ebe?KrX6kZtR(RTI96rnDA59.+EYthin\>._B6p-s:gKHfjY%%bn$_WqDmR-;g;An3$?LgHVL+tCe;CpXEEnS3K^Q"M('D=VU%d@N$oT]_hEo!B=Jf=#Y"P,b^7hMD.Y><B#Nc$GMER&H&#?B%?RV3%<)i"TjYM\eQcaI3>0ZCrq!\_")gUfk2;Iqs?g>mnJt?Pj*-7X!V.tOPf7u`=Z<WD^NSt&QJY,2#_8Wjo8/?<n6ZFBV(dE[\:5u.X%_,p6b=1pj-rmJK5)d77HpFVc2/$)@KTC=s:"HV5T6c8QVE*liNf>C3-;";O?[qP^(+GHK)`73K4POhk'<P-0*X_4gn-?\Z\nR3S5%jC)^0Y9`$CS&M3/`r\+04f9fm+>mR>BBfi#/l_PK(b+68eM?=6]/W@qSCj9pc7ftUib_;/nhoU][o50;[*%PdIpR#t[Rd1/^$Tnq%$L'oL*Xg&iQ`Z4KDH77Ns8MWc#d!*FX%!#@^mE4WO3e&XmHZLgb&2Lm@u:QS;PbS;Ss&JpVAPeZ*BFj8EXF#gkcW-Q+C"jqjRdN<%D2UdCYo)UlTnl7>*]@d3g0.d#bB%j?Mk"g7X'HuNW;*U?'Q?A9&sCIi(fNHhL4l[MdB="\7;(s&qU88MfHR!.#lUhpLLig:"8p/:%o!frbPY>eW0'1t%9$&VVWlK&JEKX+Yn`(fr:R=h]mFD/hhhG>`f6p(up-<8tCYLrS^>sW/B5>Nk"PP5-JXfHQ'8<+ka,TNX)Z#;_%2r%0oUC-<6ge1jU5ntjb?6QLQKsE>jl'KH-CI0'clD>ZL9'kb.)GCf%rTj[Z*\KOH90T<rF1LUdD1BiL$g]pk$sh%>GsLc("`Uj!%rO'aP&9gDA8-i^)?'dmdVrkaWiap:2f_@c/e_L9Yd#X[D/PLbK]3NUU!Gh^`L%tha(/;$($6%.r5(;82RW?%%9HMkYUoq:M<U[q7%l%8c%ILe@s!DQQYNe?J=G<nr@0_LiJVehm!`WWl6pmJB/C]N'UmaY)L[G\na$9@b;S]pJ!>@sn-Q+MF84rkJmD$3$F]pAs"qpRlV%U^0SSF?sSFF<L$WVU\DV#!Us!63H)X`ra-Si/<S,7tgdN42KA$U=C8clL7Dd)ga0j'lENaL1Z.kX;4N1nD'P%=6N]"^Fa\^8gc_B%o6^i2mBkD/:[5AiC2%n!j+qGrO@nb3?H!@2c+.]df')8b&KU=<b%Ff-#<8W/"17$u);S'R"[<K3guK0O7]^#bf["bqPGg92iM[Lm%Tl0_>O8,qMC*n7m*B:AOG&IKu(e31a\CdFM?\L#39$1LpBZ7&l;KUBF-V$YtWC5e5!I>5/4%q/Q2aFHb=S]Qjl=?<L@l(M7Y!tWM%Yk$Q@Si<#2\_HB$l=CQ>4JPaJG'6$dQ[gQ^-:G$,PcgOJ7+'Z1YMs#d<s$f0f:`Y^_"Ap$0LaHVQ(WF%C^lN/>8<&6rjn0.8sXc`%&mT77<61SBN[J#6VekL%H-Rh6LDV?+\SiP?IdRD"5n77`=Bp(0&WOStpf7&,!FZp0-[l)>0Z,N&<;?eQM=nr-f;Vj$%C,JI^:(I'%B;eV+KoM;!E*/6]Pb`0tmC2K,^jT[kFKsO7R4M;*LKmm6^>7bAC,u<K7C0s;lf#c.1l50*%"F%HT'%`(V@dmG6rYu$fb50.balmf%,^cbJQ%G'@1UdLIVB_"[)6h:B)p*?=#>dRdo-JteZ,<:62?5FGOdk^26#.p9m)WinLMnT[ki!X2eoJ(U4=2SeWGqK5'oY0#2oK(S%>L?5$NXoHJnlfTcMimGh"0U#BJZ6DmL'9>^NcQY=94rdr[\`JHcB@S4YaAk3Bl+r`:J7O2R<;k0n44>.:CAU/D)XR?'$29fp9\Zu%2g>:A!0le4'qU]9Hp'K3=n7lG03UNe3nO$ZgX^eHiGul!N93OH%[Ja7Ir7o>hhL'hjfi&QP76G2W/s*;GrV^_p3PiR'R<1kh@[R=%l1AIkCiZ4n.%@s9H`85BQT+.9\$IF>=ciu[1XZ=\dX+U!_?NEf<Dn27Pa"EF\>`gFZV;h<A"(C?S\b7&V\:+P`e8s3@hYqf^br<(%B`k=B&ADC=d55A-qIZsc@g?R(as;F?KYj>!cg5s="Z@p]k0tN!]TSG!.e%+K`XZP;Z'62-F"ObCAXbaB4PgkHpr>9):/[`4=6Stm%a!0.\QUj;Q93#SrR=^'AOPQK^s#a?A_f^(@qM^%&O)LgH-/$q"3osMAdKF3'jL5kZ/@l_iHOZ7hBir<?b5V'`_f8570"_>rTV#rr%^M4n"7Wc.9b>(34$0oNs_,OGn0Ghe/lA3oB-*jGW%jiC;(.0oD+=atp$MkV](>]Xe-=X7JnX3C>:GpFnNW=DNqZuX_ln$PV(>-=9%[J2->D?.X9"?eC"0Z7QNNra4f]d_%6A_t-)4t+c4p_=Lh6J@Dsake"2!g'E`,@%_SP@;O?JeHP\I=,3Na'em[\J7O.rG=RVlp6dR%d\"ul@Gj3dAa86_@&J^KcA*UQV)hA*0[j`@jp8I7ka<>qE_?+,$M$%U26pTr(_28V7Q`]h4e]7Xf6t\E7XXG<Jfmc35;(ruZW,0H%180ZgZ,jYL*7-8W1<(iF!p<U(@Q<"5B8'rl3Ndd9'Kgs2//nR,#klRV"pG-<#7Z[mr]"SdQL;tZl1YoioK?4!PpT+k$[>Y@(t;:Z%o2kGln=r?:ZgjFVSp7o!BQHT!`2.6[@>qZ6Oel&]ArsqOPnY,0c=D,l*B[brDpFar-)<#(ZK65ErHE9Pm,,jQo2k[<JcH?3WOq1I%#m!+5-.:)T.<8hhiM\fm-;t=<br"o23IU=U6?QZ!d[7V'o71)hl$DOIV@Y#PGF%J+*Cs7Z!!*uQSR0Ul:o]!kM.b9S?3]`p4!hpP%nG:&8>nHnASDD0O7)-)m%TeJ7)\hq:oubKKGM.O$Do58gkqZ*9BP)kD#-V2G-T7Tr!oe@@Pn_eT!Wn*mr&FGgS^SK[.^U,3V>.-:%<Nm=B.SP'K_siFBJD=Q2i5\#;D8%SuD5ZYeiUH7W6ou5T[?_EE/:%-*):hgCk(,o$m&],n@&\aK`g8*"G6WWR)=;O./-n2e[JSP"%6k%CI0kaNEEd6cZD>,Y7/"\'%\B8]]P'pUJ>+47fo:,d,69YB-_<'#/QM^+b6@41+^E^.*b3E)l>W)<"I2j%>/:%[XVC=hhU,kb5%Z#g7fO,t*h/Z^M7_W;Xg3lkWkK)4LtmB@$!bE"ub8"/)\c'Mig/+QEQJ<46/)*>h_-u*WWKjm4K1A7u.W<GHpo<L]]Vn_ini1k[,%FtZ;g_!N]W>%%"$(iB$V5LrsI"!uVqNK1Ub)4V)B7VR+U[-'9rS15S72iT:CK,_cr8uE4e.`)J(&`B?5pLc<U%bG9N^i,ZWj@4+E%gARqTK@(L!Je[Fo$;A>`XBK[I9\>'nc8+Y7L0P@I+W7KrR@';2q`*%*"9Uccfhptm8JISmTnc1^6\&NU7s*gC?rTQWWYRp8Ue[T\%%H*n2^"q[`W0k(m(S75(s)n9?J%eFW*8t&V<;s@8O;fJ</nJ5+g9H3nh(7+Yb)P+&IWI`.49\[Xde/@s-9UJq5#?Des5O-NJm`bL%%WYKq"WE:up$$4@A_V@VXm1*R9N*>\16D[7g_5q33#l$j'GYemds5uQaTunaUD@<Q[hj;3f@^t95o'FoH9a27UD!h3`<e\mW>b]a%D[aA2C!A%@!Y:Xm7RF,OP&WEcY%*uY*eB0@^=_8$#iMmlED0Wu]NcrSQ:OE)C_dr;7MNQ/J;g^^m2@`JOm_>"0"CT)U*,:s/d"=7%!2.J-)8g2+B0_*IPGT6'+@n?+&!d7@-36VM'TK@F0%9$K4Y'A.BgH3(G+Zc]pa8o(Pm_UDm&BicQ4:4fiTYQ8NU(oUn6lG\4,#E_%nf*->A:uH,8ei*R<p^0YH1_$+SkX?,p)$jJ:3OfZ.P@J632<Z3"0%.uNhQ,/i3#dILL_gB<(l<]<pm4fKM'F*DoM4A2!sB+`;Q(0%_#LklTM\*i(mt._Y`(<FT428qOap[Lq&ar4X2;L(/OJ>'/#hGR#\(^eNI&0W]NAmtJ:-7!rK>?g-ek6)qc&L%cD*'OTMn(g+e1n^%-n8sSq_*.rl915FHsE(a]7@[gjP#:l0>uo[HS;CbSS?=iSjB>UKrQ3(-YIB,1N'<?T8e^'Z!AZGXi:d%M>.@5>&"p;r[u^Gg9nF/%6&'An4pt[2P)]O16#YT+QZtSBefiI,RLAmPVocLY56X=QJ'#,Y3^@-mcB,/Z,G*Q>*DE%XYEidBR-58B2(f,ka\0]U'r*ZA-b>VA%Q*Ic-^iV&Pb^uq<,U>3?k]:LAhU\l)"VSl9+/h/R*K)3@7!`gmq+ubD/7aRF6CNJ=D%a:.Z@5F"6(FCL-,R-+d9EM@h1!An9/2u'%/;hqi?D@Hl*c&NAZA0r038Q6dim@Kk&&@_Xp"cB66CP:CE%MA@`M>*@Zj<'Po95i]\8Z=Mk#Kt%]>6<Y\$=]IBTh')UD#B6$Z#HO%O-%p8WM*0E9a^sj"Q`TJa@5%f*ZE7Y*cq,o#,c9EZC;f,XSWFt5T7q6UHq*F'pN8`(#HHG"9QRJ4/#Gl)h`L)EPcD(X!0pr'(#++%c[jHmX@1bQHC^fPZ+URPZ[7b+16`X$c.I[f:;?=h=bs,iBauf6.qM2AplFp\?R?-u-/j2fnrU;fRXIR[,<:"gcK$]pZT"Ip&pRc*%n(D;)ml03Rrn-sbLR#Y,:IHe(djBlSgVJDT\nk.L_r5oFc;9?rQ#\WH;.\8&b(WJ,jOm'u,sW<rY!Xp"`Y0%L]Ao/RI2R^VpG#7d%l.Qq_lhWrW"5oMaU+f<oHt'H0p(=e*&Hk?@`X$A_\gb9`oa,pmPgpg4=5o.I:LH>faJm3KMU7fkP+&VE'G3Lo[@=XON8/#nG@2D&%?YRe:Oo1+m0Cdk<IdK9Lgu,rh1KC#>+Q;VH*R1sQEBk.29&D`[<;6.9j]pO]L3U@pT?p/5+9(d@!_+B:mKUWCHPS<,U#P(uGg>M\%!s?%qFIeL9MSsqJ.IPA6DK2d@#%ZNC/B[BP)E'@hkN0Qti'oZSJ_&=;)gtDtA[]:M)Y-%jL1UKG1^TZ7-A\UdL+g`*!NQ9*(*XG?%e,U_@m,caEVaXr,>+NRAU1Gf,qIbk5j3AmQK_28NVFZ7@R.RY9r80(5m%o(%(NjghPG]e:ihu'*JSEF=2:%\\p$"XCYiNWK..c5(%rS%Ckd,dUcapQ;BT)6bO6B/D0]HIA50F/=1&cI,d7/.VT0Ht\PLZ<p`p<p55Mot$qE1DADH%;:t.Q_ZSc`kkTS3PGL\a=,-)KV:A%A^8S^6MmOb14,;HDZe,Dhc;>[>sa'+9Q,*A0>,>Bg%OYu*[eIo)q)f;4QLURrAs5?@YS"GD&=E;d-8."BF`F'FNZ1bhs*CQ7fWa$%ZQf.lLPq:722@l\&!qg"=(Ae1bd.?@1=YgWAih/Mk.T2$cXUOg8-?SamR^9f?<l\G!.s=g(b_QqLDJQ*9EUu.k"f:Fci---XBY+S%n2?U[Oga]1Ejj0`o#7MV%q+^*);P2;[jqX[&EFlSBB*RH'i9su5Mlm%,D:jP/e=d+l_HeeiP^#*FBN9jb2ddVr6O9.KV.5')A2M*%h-@,>*BucHq,i.uUI`V-kQu`KI^J'1S6Mcb4<5DF"]MC;q@!'9VrLXi>$uK+],4Mq8bC+rbfB6*Df?imdf!\ae1cFd^tn!7-i-J`%Mu17hA?1NR!h:VDRq_01H^bucK)9Th4"Ap&UlFRW"qU@LE<65m%Tr/<YEDJSqYhT?`m"+kL`!A5,GKAV2ikD^WX2d^?PN:-J,Td2%DF&rKA3i4B/HQ?AhuW'KAmN'$9+$2B47ecKcbFePHs)#2Mjq9Dm-I7>*q?&t(i--Nb$dukcd4H'M1L/;G6oTrB%0%ooM+WQU_Q?u%E(C>MT@_+?S/cnCFc#EqLlKl1jCJt.C(\k"(b>Go^spE]Z!]LAQRRn/&Jshk*Op6YSU6thmAhtl$skfcAB[I)o<g$#p)16-R>[@K%ZMPNNj!4m5q`18/_q;'3Q\q<FK#5CW1s<c\l2dWbLY(?qNZM)`JCOf>&$rj6Z<e\MQkBi:)AX\;WM2>Z7<^Imfpn-bHlm<r,c)=S%7+pB2iT-o;jV3YD3FPq2EKB73T9$fbFG=.7_skMDm_Ln5AK(F?4/%%=K(Z./""mLqZ&u7P%>o[i*d/H(I%),tC7VY%ch:&"5,-"l%I>k<s!TGi:p^Ri80#`iCn1(S.]!'(L)X*jHk$"2=H[r"]6?;'_C&[qWCW]=Q#ct@d?+dU1&Xa&S;:u_23VqJS?4:2VE\0*HjMhXc%HK?n]mM<<UOqVDg_=PE94;s6X62S.oqF4t8/dN)36dpNKbS7!'(3rF]\[q!=Q=4lc[*aMEY>*?3L=,jJmZ`<hB#RK/--$T+(>EOi%,rXiCSebsqcYSr*AAU6q_Rk2L3hVIDTDGr02TsaZ\LIso#^*ZX):JPsIC9D;r!FJ'(CMO1Ia`5/b3g:*M\AsZ3'>+&&?YMPk0A7P%4D!rNBWF>c58WlF<#]9A(/3m6dPrg!-g7lP%J>d@ZDh+,[_$6Egk-[6-!>>2fW.i"9_T&[JU\\*W+Oi'cOkmt*l_%T%n&pH/B<8>%YFkhon@;NMF=:]MGh)>Vs2Y0:s7ehY5QB@8q>^;P!YrKL^]2WPVZ5O\79uVZiQloG?dNeZ\ZMl8LDnSQlHbNNoF#1Z\12"ocYbM'%:%,-ncn30,"FL"&hj,`aV0Hg\,'@gr6hbr$VohA2j?(k["cQBSp_rTB>\$[6,9e>/A9oo>1:.nK_BNmn@86UjSC];uRFo&;PB[8T%`()gogDh7j1+IFbjdrS*;*be:]f'mqd"LU!nQ5&<5M#(=SQ"FSWCTckZAr>6N[GlVCp59;-_pdB$e]4cL#fU24VGWhI*QHV'Ejs$%G"a,/HZ[#G;`cn[Xo-lsC!u1:p,-$ea@MbUN(R/J0G.&45DABWb4M0N9V5Vr5^5eS^L-(]faSua4]et[2u/0bAo4fMM(sD`Hghnp%k-j41IlW(59^5-Z0rbH6X6\Mu22teiqQOF:hu.1j<GR*/8>ffX5;=Ch[8np$&jEWu]*0H#Z?20Ofr[dQBSkL1a+^sH/3.V9mcJfr%bq7kj+]LHQq.iZ-,jncONgK0EY%!eHJ87oZp6Zr@g,I3FnDUR<<c\=s\IRqD+c-L8e'#`$!%"g,,M,d^(oXoX;AA0o-\Cb]_3sWs%'.0#$nmd;$5[dX%4'+k*9mO3k>aCc:Zomr06=SB;p9gFjP35^/aIiP1bEbh/SEA(j6"%jYdWPUs[XD:k_@/kI@J@kT>?3t;*&P(3%h/3!^;u*(9j;"q1$g/H0"`%JRPo\E85"DhESp?d./[?$$T&d=mW94,"McjIkms]aj.Xc$O,2BLVgP_DV(:LF0O!?3WE!I*m1oqa7%R>'ku6m].hj/A>%<3(["'ZGO&]897+`-_G&_/q;MZtK;NT.?-[eH1u*:(l8L'8I0?T:pD&>@!qgG"H*ME+OL.aE#mo,_'Z$jhECb%K;Q@+)63t1At,<`S]9j]YfOmDN_?`:1CKI.Lo,HK]eaNV)H`tkZ!(p%];44!NMUUH;DoY2&`TJhkIKS<*EoOdV[N,_kD7Bg`BJ+`%;R2MogM3^qT$bPoU$OMiGaTOic0Y0)lT_knM]na0K)!p>9T)1;e*&=8g.[_/HD&B,:7Q@\KQ%[cimmJ&\]U;;Nco$fZ[Q@B,b`3s%?H'uc:DMWFE?*=!#b3UIj=lQ3)qlJ:2t)LDOMqGA*gCBm:qB2ch.))tdpUPfAAVYAKe]^')Nu&f'T[B%PrYEZJ<GjO[&+(gPEpl1%&o/7YQ@ptDAnsBVD'qXAR\uk+(:B3?/hf?,HNY%=IEsis'=siP)Ho%FC'eGW@?:ANO2K<pgL1mU>]'N_Ii':Sq`4\\B.p[Eh6KfI%St%\\kCf5S`:4,+JQqV<$^&R?3/3J"I6%XPo16a*%tMRqlAr3-cS,kU@=8qm9N-a78'JS'<O9$0[i(i-VJ4kRTFCJ_<g&Z%R@:6L%CaR9QNh6W_r,&Y,N%p,air[!ho.Jm;!O^=<,_7GsH.M;Ajf:V<5G$=gDX`8@TU5F:M:31W!YUI89_#:a;<B#;h2W%]4hBNg1M:J^%R/sn[l)6b.Eb2j8"ub!*Ls)UIBBg%;?7%mc)u*%r^WpL%CLu)YL3`*[;+TZ*RHkk93QqW8!eK],,8rXqa/2M4,C6<U*VObqML9C>%9He=4I/DA>A0nVTHT)3Ni;t?n8a$eaP9<+m2C%<Qk4h*V"TG8`#oIJIl]s3?$X3q+YeH\)X^ulJ1\nqcKhc&NR4caP/ILs$G<lA=%X;SFjO?AuRCO2F\HN?\:nab3>!>s8o_"==MX6;tlosZk8LoFVhK"WMbkM@AP30&3G`fIOGm5R;TCmXN=SCR)s&X8m.m`nJsen*/P%2airt/TJIXh%2gL1<j49gC/:qM<L'$\ua-&,2nDcq<aHEc.=k'fjd?q+4:$MV8E>Z[eW!0q8t9H;ZV\1^RN4O_JK&=O3%C(.h_`G%c61k8$^"]E\6^NLAJaWti>hqNY+4n2DL`&@ilpc2>H%]ulO$Ii.s;+#30sB!/@*J"Db58s2AkiO"J^\RgnbiX'];jnmid2Qg,aWS%omDfSq8G20QKE!_N+^7.5@L@UXr'Nod=T(&.W47E_ofO>H7K2nElGT%]"p<.7@@?O.;h]&q>()P^@l][:4'GM^UV/pP-)tL!fsg?%h-hR,%m'IlOJ:ad<fHDU\H^l(\4YLUfbsuPpL%t(1h4j]i6M=)>0;S4#F;0#;)0Y7&-mJ/=`fFg_e7%*F"]bWlu'Tqob8_`mA(']%?7,954Q>W(,p2`fC;%aFo"+k]jN?`4"BO06;.[Z4@u\+-ZssWcE;d#8l'@)&-!,=Y>CN$+e\_a8b$bb;QlOBIo0)%%Ma\pi^"]XQ%XbSpXnogAu]N0=sbE=?K$.V,l>[?]bQJ&KHeA5`BT<$361D_(ZlWsVO[>9i5O[o-7L)W<kL,!N-[(*WZGp]VYAl@L>8@Q:3L[0mL%^tPlVee#^F)0\!AMOqA485CSqhqo4@]JV)_i,Kj*8U9,:f*G4rokj0T5p"28/b;tJmd.Y>Fsl:O^-VU`(t$bVYS9$/2IVn99I?-@%[Te/Sjl.H+Y9SiMeHNAfcHg$XDLaj+C@g1:q'K0r`C[H6Q=4W-nL42Ih]n'$SSH-0Pe`h6Qm`Qer:O.6rmbt\$a+dN)=J<MVC/@t%T*;*Ca-'&]q'5u!Pg.AuXh0W*I)/-'-]kToSL*Q<nKQV[[sb/.UUlEb<ag%0*R+k4l2rA0!M_Xc3bliP2M7X@;)I^=fg[D6>VG=f%AV"EJSmZr+#X?.GdVPCd3p0^\Ik1n\%Oda2F%`_7r\UF0j!]lk$I1`0).gDRT[E6MJA0YCEs'Veo-J`rOlcjArmpJ908kL49WlAU%'A/Uhj=7s>:oIY&]`CEedppiI$qC3EWD2'`4rnae`CMESGr!+7ALbF97B^MI<^o$K\_Q5qe"XBZDW//^g7*4u>Vp)e1L9![V$W_\%WQNS[5gO0-g#1p6.^_St$r:;r"@>,M&GU6pNrXl?dPW-$8cmlS:tpa+M0dD#,]+d\U\MEWZ-&P:h;7V0AXFUr,rPDSmnQ$)C+?"]%@6$/if1MH%$=]+D-n_uLLt+8:jfK)RC=PBp(Jmc"cK9f>8s1JZodUs`I(e<!ih]b`ijA_#M'BYNjX/_uVcR'N2<"6>haOG:&ZmZt%cVFp)mfP2-?!/Y")VaYbJ&0+%eJC(d\qT-pfnb3O<QbQQFN(:^95UMc8`9GW''1](B`*c'YkC(LF#N?$&F0J%Ci'T]-#2TomNM;0%7tXE)mZ(V(>qf1be_XDGRjm`*BIn6ALIHL6b$Nl^4jusL\G6$27#oj)\ohB@%#IDH5g?SXm/cDD*cWEPMjD:53kidu(+'`_)hFEX%77]BSNcZdbLuE$/,)iM])sSDW5[m/hYrf&`Yo*_Loi2ABm#,o<iG%S?h6#@p'j#cPZW0-V_93YRjlsmPm0>+Xa)jS.a1MZ\b.^YM%,/I'S\b;bTh-()U*VGEkq9-!<CLoJ2Zs1*XYR;1Z0*5EQ9Gq\*rO1nDE"So-<Dr:o5?IH:#)4Q4lA-)0mKP&^Pp3s*njbq3.js\2%BDg$Xd^OT&PR?NcA+!MpjGb6fdW+F1H`NZND?SW[d/RX9^Mo^(mK87MJ*bVeV;IT&$0!WQiqAT<Ufk!cZ#r^#[hrfc,sFKq*;\g9%RSZ?H&R]/12]6Y=LsnLEHN!t_JY07G.c\b=Y0jl_bj:i"/IM&Bs%%3Z>O:GW!TU[n?t-lJ1WJC7HGH*42o$=0B\qib#PpCWYAu9a%c#E6^4X5ebiF4UNmG>OC8jah(lA>\q(^p'ol1.Cu>I!Sa@=U]0HW:,h*L*``U&@Yg0J<d@1^o3B/($u]pU;b@epX@N@:U$3N7Sp*%FHgJCZ\]2]fdsP%drVH]PrsYFndjYPMIR=Ll/d>K(cM?+FH^Mm6T@.OUU3?[=BHUmj<hsW)ujt^V:YQA:uC*PTI?<b;*ufkWRmpG%T>c5h4taBr)WQ'ZB[rb1q])kJo^b<@@N*ZA8c211h0rID<p7Z(RqGc)9J:k?'-WXsie^[e"\c+G?nKT(2S.C8L]4b#!g]:gljZEl%klRZ:X\T\ScX:WpUdKE+j@tOtG_FQ0_WC/h$@CN2A,4)\$fQOh;)icLE]De[FijM8Aa@<9=s+_5197*`q6)IZaqe'10]X^G/=WWe%WI/NE!L1:C4]0elQmc*'JK*,&-F/7&2c:^Qn4r)YQsi&",@qPNJ9plOJn]7m-i/h)*0kK>"QM1A`Z5#(Z;@6gKL<%^(C:i0SBs9b%39B6-GBK>UjKZ&MlJNP^S)<+hPE=,lZ);XBbf-Zd[W&mlQ-*Gqe??.n6'?+oUh503h3.$h`%ba$S5nPKJY`*23BM=2%thlZmB18=%ZuH]7,9@uh&=#5R5Z5>`*+nCI\1;#.SHj\Bi&0mcPhjT(HoMhem4)1b,Gom(md<5g583-,#J7p3m86A.\QetWE9ru"H.a+Ga;mA#%_+(29mh8;(3Ap8+>Q[p;A!F[dnh'.;!_OHh2gVsgK3<HdbCs'U(.V-S!.&'ZN!O>.@:c`Em:?tX3aJ\6CjmQa[_2>0KH.QA<fUNn%T.Y'^IJJGti4BS]>EX7DTI<Wk@0u5.L+(mnf2[9@Q=*%#<g.d.[sJZkP\gKuJ.VI0YZYBE7DuBXo__1d#le79F(2?s*kVo.*;'F)%ZF*@:CICR2)MH,^[\VTSL#<OWq9)*UdI]Cg=WIDh9Nlr6/dO`dchhCr?\d%bM=Od1)LC2)C38:i0cW:LrDGlS$^O'^4[2K)P9SFQ%Vk\dm8=@M`Ru1L98U0+=W:p9M%%OMc#6-V4L$KRThD\H2L6VgIUN"aHi-)b88RJ;C5=b&n)OdA*Xn;@%36cQkT!&:roF&QWD$a/M%7h6?%m66%oXR&$X(`N[:?^u*>lLM1I_UNRB8O*u+k)0shOVRh&L[(kq,M:4[=3f_K@e%J'Q+aU?3f^U';oC,3W57Jd5p1:tP62E8%9Iu&pZY+=eTp:$?B^X>Y<KQ_3#rIuR1k7LC#5\g$kd5Qd;U3DZQ"tQS,i868M9H@>Jpq5i`SLX+P?=_Fh:ees)3rsebjib-nem4>%fj-=^Re`e1?ZBI%$7)20ifVF:)Wt0N2]'f2Ze':[GtHWaRM>.1#r^(D&I@A<Vo]uI2imK.bO"q]NUD*sqV`XG@J67u:d_-<4GS+`%Y4.)^a#\YArpQpK:Dd_R)rGb`5E<5Ti#eWm_VO-/05"ERN0Nr3gH:W7AYm\AKV;hSh#76q?\P%>&aDVJ*fTE7s!$EE4hHD_OG>%h%E/W&VU=LZ`4g)T\.Oo`2moC+SAB*lo[,PjFX8D?mDZarWrIf/Y4ulh*S+(:TiU=ONQ@D*?;hsO<^ZKR$(!7-E%cJ.JbSO*N`#?)_%,h1b,AJ[euB5cV`lO04?Dr88XU\0L@IMEsN]frXhc^1^LO/fBN56NY>9?VE&n\OI7)qZF+iUpPdYrP$G"K,g+l>R_7QD9>W]Aju,%G9<;N2J5tsHu04;E`^L),Ye<=?s=-'6bn^1Yu3+=p^Zk$MEF9(']/Z&5A:Z(Z_qW_Z"E!/,FT/o"Ef%;e%qluFh!#4[(J'"UY4]\%(k@d9Q>S+<#)Qj`qHc_QmLXg]kI5:h(#fnpSm\>$3H^D!ed7WRH&q1-KlfcAc!f(.8_!9>!8]:P?muSt,+,Ml5EY#_WPctR^Am%0%D,k[\YjS+oQKNnY=i(7O@1)iJB5#EZ40^i`!PQ/4b?P%-ri&0nQGS:=Pf07a8::<2o*EbbYd=N6U2HA"X03p>V"DeITgY%imU1X]%CEQBb=9V?g>VX>fiee'daYg"ls.Ur0KgRbQ0AeC;GJL[%423%J9`h-@pi'CCU*B]8g2_A7rF(b7pp-m*AF;[+$;-rdo_i8!g7>QR%e6OYIO:W(?%(oCoW4#$rl%\H3>(fkd$p8*Hrn-G\nXeNV=`Sp9/j?Vkaa[6:Djn)+3Tbjo>qKkn"IOP%F75Rr?Mh*Y_m]e?`D;OT%S3D);J7'eW]ks!$Lk<?2>gOpM#iMj**RtlF-5J\'J2`">,n[DD23PKi+!TKD[Qd=Km;p4-DC.U<[',=ZUHa!,Qjj'O)<]pCOMKhq%p$o0h?8eOl7MmNP0<Z&YJam@CRXkd3Pese,+)25V::;c+&#TN'_c`5U"GVfX6+(qI+G5V>\5A(@Z^5P.S\7K%n!a7Ob9!Yu[3*9.%,p)Y@AeFC("aCoD7b>%POPfUE"4#)nI9KX]>#$j]c@kGiY9SbI7[@m8>0<paNkq5$ptVoa.LI3fSD1J3"hf1'&HkP3laPd'8R)jE%M?^t-IT534_M4k*W";PDF?8-7b&(=EA5N6VE?t=ub]3J,L$NM<i#t&;9E6A]dom!c%m[LT:fQSW@61SB;BpRrlOOpsTe;J[oWT^=%9Yc9amS'?L/XDE+MaL6[s)=&fZns[TdrD\N[.&YoTt2c.3SL8;,'cD"3L<rYPC-dq]LOLXg8@LU/ispS=@)Il"gGk@%8&qd,))mE%/kamk\ur[4(6o(R1I;eG=DmKpZSDP]Ms,'GX@7nUb!Y]N=(:i9Fq66OFPR-Y&hE&=L]*IhR$Ir8DNq?Qj%-Kf^/.FL&I9TgT)$_4%bmP0koV2?2Q%%GarE&D0!<\#j6+4)S3R"G2Wr,I=B3kM:,+</4OVA?!Ek(Kj@:cE#btXid,64Kp+g[X]!j4uiO,LYTR20U:c2%A9%$2(sV*nK/`Djm!?ik\o0`?&*A^!(3^OI2c]12S9,>+/V)Zb8Ol0@,GiaW<uS=d5[t4iHXTh<cGYHBH[[mEZT,Rek?g=6O].3V6Z'%"A`46LQAg9D!cs]Er!*nA-3>2P^5J+,^4/>/YuYEm<OpjJ$f90r;CKCf'kP_2e/.q+9(f9%1g]!Y`=6a^=!(Z-*&O'C[he;9Z7>1%X6Y]aX_qgjH'*M8ZS3s.g#oeK.A24Hqe,%`0#u':QRg1nmp5("-"+XZd>^SNI%SspG5ZX,#FCG9__:GDgPj57Z.)@2V+U'*WA]DP%s)S(sZ8egV*Zn<'LH0m"_-NPW6grc6C(jYBd(8\Lbl[)!LU<:0Wq0W831*G[3K^WG(sPX(3eF).?/]tW#QDS;pq@@_-EH'n[,j`-%`.Ig%N*JE<(q^8;0A@3LZi>#uM:?Uk()3SdC`TK(UGlpa]?k>E1fi>gFCc;7b/5Id2-5j5EnPY/cFTXab+Qp$nZ$kfFuL/P#L7df%Y5Jal9(00aP!2klbs<gA$\,ap8=#c!ksaLk'%>5J6Jeb(jDE?CAJdBIb12/=e]%JK6d,>2;`;'g1o[snJk'P&W8IGQ"eM\gN!Fod%@r9s4RXMMIVdsG/WR'VkE#c2!lZ^M3]8rkAHko.rRuS+Uca*R)209'mfie9[VjBfps4L<ddIbuE6EXa7>`6)m,sFUaf[?ZE@6adP%#cu;=W!gGrC9aY[l$6;i&kMGFZ-8J4@M3/Y:9Q@p]"rF+D#N'f&="$rNT"TLr\7ph;RIC6F6LaNY:6QVW)\VJ#^dX!<th(2YbEYn%BFT;4%*:O0CP8!dGOqE6<'[AHK.-_Fm2%H8Jp'"ZmP2I4aUSl'B3;%%rofHeNY(qV<?1#RX0<0Ajpi2YkCdAUn&*A1.V",M]f1`+%_%o>fc6j-UM$J5h3=T4:j@XEo_X3c_Bea,!O3mOp1##=5^04,]rA'XlB@H_%X5%6mLE0;f;$.pt,(q;20&(JD]4!#,0+Ya)]DD&I%eo0.3#!0;N&cTs$=&IUp+dF<*?pg;#o<4GECAI#]Y\N\:$[$O%gpt6"GI%"/$L7m9Hk'OGH:PEU1SYGDQ.&$PDlfe'h>hSO`S=hl%83E58rl;0P>.$a,Z$@iUT&cb`+:*F60QP=:oF;R6Uf4jc4g'q/2NVOuC+4*hiGqGQdotaUAcKBI`1J9Ojp]E04ZL0JK!.P@*)=G'%^NJ5k</]1<s%l@g0IEHLPnnTCmkNnOBK;\Qs4d(PPV/-UiAk69EIO#=J$f9:C'f9Ka@J2KlaH1iXD\JgOR?3;GcD+T*f][_[-+a*%*f=Ao*I^'*B[65X:\nQr!smDNPYk:@r2/TGlN'F7U[g>F;>Sql5=0s!/SenGFkJ,:2-j)SnidVrE7YBa_[QS98@!i3VXlgP!IX7q%$Hl3Q]1S6(F1Yc>nbfi#rM*2!5#p,e]a&M7MdKS.5sG(XP=#\f_g[c147K[Gp+ZHF4Ia8I@EeJl:'a"S#0SV>"Ws<O8(OS:p&ZP]%5::McQA+]$oUOa1!b:gOq5B&,J.'n$66.%;=-i57k>0:N=5dAjQ`5N=oQY5ZSg`C"O-o@.YS)B@S8<3DoCCjc.<^JrB[Ie*Qc&3o%5n5CS;!m>HL+@\p?=!kN0nVmX*Rl:apYpDTU+RDMkss21*XiNR=opW3S#a,nVAL>2V<;E3!9[rF6T?*04=Vq'c^JF!*4JgkA=PK?%3lhK;O)HLP:86lhh#M$KrU6b[@E0U+aR+SAA7fHen8chQp6d2hg?]lF5]0U-3C_2'.q*Qs$]rH63iHC;dkbZgq3oWnT<&fFdboY%%/+B2Bq4gE?>BC19O6D'pKp3-K1PuDjR0.De8m"137;='4mIj/E&!mAciqscN]chodip!Xpm7>RXZIA45g7*%Jc)ELLBFjtb;>]&'%naUkW/g`&:L6b96>_>UO_)tL_#DUr@7N(D9Ij"AETC3B[QB1j5^NTJ"5Z@16I[FaCHDr"C#&6tGd]\k(OS94bA`kP!$m'?1ZjO.-%*un1$;;l,9W9@e*;6ZR]Tlg@8iu1peQDn'5.cp-D=[`k:1@g]RK:,Aa<Dl(6">/,J']T9CSAT^_@^jqX3R"D[rGi.u\JZPM_4-Yo%?P0f4X[5\6Uis\3Vr>iPK_.U`*b72WiBdc8?U*9=#bVF]K.,l[,(s@.5[`Vm8am>AA3NCQ0ors1+rJT])6WHt!0mq!`:S:jai^.a%\&"pY^'Nf$Ui07\&AQbG:JuiW1E#r0GKN+qf=";6_Gm-PaN\aZZ[H[><Tf=J\0g]alsWo];\Urm7L2=(4N6\9+U)WgUn3TMQ9A;/%`HHm/KK.;C?(K8]mp,0P;RK]Jj)2$chr1$PU@OI5aN&o=+\V#)CdWL2OB:+9([_lbWg5"R*L)`+pFnu's"ZnT<cT;0h!J-AA4hmL%NW'!gRJk#0!VVM'1"lTU%"?1i:]Z07&Rn3qC`bCE$'7:YX!4P9;F5&/di2EGOMJXj_[(5daQ4n00LC:Q1M6iu?+#np#''TMj.QDK%f;E1#Vc+*YX$G:D-JpLBE'-mc)D9&rHKn"*o%.rr:#Eb)EHT%]"FPq+lU5J&&mFIR^k$LZhQia+G4C#*9P#ttH53NIiK$L/Y3NG&%#urlnqfu)J72ZLW,8WYF%.bQV*mQDT_i2S=>R\l]](HiaO<9u7/d>A%p&7)T=']d:?PE)p]D60OK0l=;JT<0BRkDSCk&+S[4SZP'%[ClJSl@nq`nB0nJn]!a_=CQ`H_Ymu*o?8t7k8m=9^a8oR7&,7H/Z1PBo&hWh=L^1pYN^;2(Yl'pe\4O%GZ&>dp`P&cW6(#:^9=aq%QjmLU".#qUY=^SS+Ks<[<"("A][]?aHtIP@oV;8-\/9D4Z$2-q2+0;<3*s3RiF:0D=fg`*.KJPC\JSYZ+8#s^qdk!L&JBQIN>jFo%+$X['ca=9CWU;;eL1t2;Vc6uOhS=@.oQDQD\Dij!CF?c"$o>;O'[JjY$f>qY/^+b,^0D'k%-?$64n*Q2SlE'6EN'!m/dBFR/T27S%9DjmI0C"7cU4'!X`cN3pV.("&n.@\d'/,:m(fcKia1=!ob`/I@;u'<nOB8@lP_Y"b(k!sC.):moNnG5II?FNR'nXoa_B`^i3PmGi%oEo&J2M/7h"fJ>LjU))D3o-u]e(W->@2dnm$6kNp]bq-i!X-u'?cXr@NYlNsE6bXuDV)>u04!`%]aH;(TBiDmN'tIZV+sKlWTCL9%M6#$4F+)Z>0/G9)IZ/>*"o;qO/lW6AOnXm&"#rCT--p>RGaEij5?Z,"FK"gXB<^CM+%M[uiX4*0)2.]1BDAhf^rC*Z'?D%<1u9jM%hrG4BPf%k9KJCts'hfHFD1TK[H9k/)c!d*i7N7s`l6C%_2Tmu6c*'=l$u-(r!/2T6DJI6/A3LleVIpGJ\$l84L^>N19_*aUDaTNM%)d56q:m#b[%G5\J$sfoVIqG0IZ%*"KOU/S:DMW\@#eSiHC-f9o4*Sl0KRTh&1pDU`eu#ms\6l*:[G[TlVM,V!q3PfHftm8YQkhk;%p_='`q'oRb`JuP=C,7H?iO[b+mj_irU'5/(oDT:QL^JL?s+P,P1R`K>1BhN',sHAf\>-"rH+l2OBeIg-#[BWtn9dse,puY"CS^=?%p2gq:U6h*6EP-9uls4-259_tS\j<pq?2,EDg05C(VB=RB*?e`+@;gFJ)"_:SGRu3Via[J+(e4))`Pb$&n8\e7+[+t4[V^#lb8]e/%_MPbVHjX5-4R)Oh6Dt4Eq!l3"<OXG)#(:FL%RD3%d142/m]u;hg&Lud_kf<=>2nXo4lmWeTT,:rJ^<5gg^Ip8mE["0QT6Qp;4iJ%%h>AJFINWB^I=5:Te,93Re/(J3JGkYGZ+94).3/oa:ON]qYb`p]J.9c-Qd^O7UBo271C7$"HI%Ehc\SOS-?LC,m=JdPJYOr'V:?ZW%<Q8[IV3m<j?C_^YH845>+qoM(kmEo4?i:Bh)VJ]TLIhs]=."L;3T?T:+lKPiJ903qch:dlfUmOI4R?B_M?b'hp#PXLPf"#AR7o'=%gijPW+?#c&5^5:21u[0'<Fs7-++N!)(eG7)c/HSq5"D9i-6!!#f-V/J&V_uBi%[#UOi)g-U5#UN;ID?`0S.<iJunnIOueP8_nDiU%,D%<sWP]!A_+X'd(%q:hOO9$MUDL$1ouAD#rQDoP\.d*6TU+pmQC7I(##C,S+mciBYMsb.o!!Vs;t).A776lQ01CLuP[Tlf:c+-[%EV>`o!Kdpl0USV$WZmmS<a6/77_DI.,eifREGBt$ok=Gpq>5$.Zshl#O<m"iNGT^ff[`Al7Ao&ggpMM"\#J_?knMXAfP&Y]TM9/B%)/VK4B=TsJ!bs@^H0ke]A'NU*H1Ju[hdsWk[!9eRPAY%`A'o3/6PQ!kGBDWh,W"6$Pp"Ug.:/r_b4YpBl]2.@H#0Y35Y&;s`!X0?%\jV>he2#("=.pO!X2$SOCP&_!`r31mnC!s+o64\7_lCLRC]2/N+H;d$p'7oRN0$tS;?a&@!0Ibj6HR:_WIhd%C'ZbtJfO=B<=CID%e'D7"$96F>GtXJOJ@Da4N6Fo5Wpm:2WpjjcXaP8YWQ@IB)OKd-WIS?i^41ptU,WmrUL0Mu]&bs+k#<1ca5Bq\N+OGJ2Q)/`au\An%!FH<j?FB"Y5A!l>H<CkP0^-.8p@qb-d&5id[5HZS$Mti]2?gKNjpVJV`T1Io%&g4fh.qZ+L+&.JU_AT-bB:WEs3`?dG#MdIO:9S)%TT>0OWXb:Gd+QFDkkO,d1,p$5GHNKmaS$2tJ#O*WS#('WWW]8M&QtFq=N\fkVG3VSQJ3d?4CK5\K$c^^dLa">-q<5(>^Z*_-V+]*%0,d:[WD7.t5u!e:W)D+\qLjuQ(XNKsB2Qk^$M*<fhc"@7HVp"#*`:I3-rk``DAJ+A)U"I26,,IQ07AFU:'22L2h&Ln(NC-pA.FeN%>gHF_HcZrNJer_:DUb3;_0<J8'i5\2$Km9pj_`)#Mj,-M#!d%\JY'oiG%Ot*A2WfLh(g=i)W!l"L[ul<$CkZkc8>Iq.frq?cY%9M%UN3k\mItK`7V"u@f?nYifV?4>9'`IL\J8(QNaNG!V)W9TrPPNeP(\8Z'\!c:B:e+K6;*Fe7$@L[;pa_ka6/!%dlsE+:HsA:?93e&%#V1!(G!W3$&>H7e%D3l`W*<M'G+.e82M950Q;R\g`sgsUQKm2^]DJso'!"6V$LmuP(k>>0nQq6ejmO`2"X5?:kp9G.M!9#m4p282%g+)SBZqj4BoEg2PqJ//fZ(c#r,>?M:O9LgCpm.O6@1(WCFL#(*QPgAVS5dYIb-i8Ds#?[*nt>'T>uIq1'1tm`V+hd[HGG`rZq=`2%,2cQB1E+u#&P8\B&]m#*^bW%-;OC@BGKe`#*'ARX&HE\Lr,L1:N#,>`DloRLLXkL%'+"C-Y>5O:F.WiqefZ=eo?o1KJuG4%YM@Nn%1NY1OI3OgFBb6G/=$2F3<>:;BbLo)'#pUT^V$i`cGU;N<k^#W&U?m@]D>*mIKRJqrcruiI9C'8CGA=Y$i#;#(%aS:r$2VV5B<eTj%=2pC`E0OnfIFT3L_6qW9"()V@Phi#HCo0rECGQ4Vmk>g,:a]qo9Z=iF:8$l73?I9]`g((L1p8`qP7.tG!]sYWLDb",OUqq>`;m+I%cCt;:Ln>bbnhc]\LV;l,a(Rg)a3*NQU6_DrN6j;mJeit!;o5d>!-)n6"i1Sm_K&r.#/8>VZ%+IRF+96)ct8_bojd#TECRA.5kY(i%?EBI+]4o='^Mu4d5hI(okAXI0)NFKb*p.]>pCr`QI6:g>`CXABasOanM_e*1^r"6eQ5Rf1#RWRM'X3XIoR't,8a+^=7lZ\frshF+%CsW[^CGE%OSO"9!^EI/B;B+NV-"S4>'+e6Fnsm^8k#sA.n69qe/1pg?HD42bP>])(%='rOi+hM-()l`H?@2Fsf1oHfoIh8\-=nUL%aUVjQe6s(B6Ts#Db+O$[fb8MJlAWn#<X.5-/.H3&d!bZcbK<*#>n8H<Omn;n=;fDf3TlS_V>ZJ"b+P%<A@#DV!7/]T>u*_JeP\B$%<eOM_1INYRQ6!rWcnOMd"M#[YkakTP?oQ2Zk(hE(,:!Y<m!%l34-O>;(B+PY8u[;+FMa+.?Wp4n$,P?nitc--L9#G\/YLa-?S5MH%m(<#D_K?r;If;t1N++n-$RVn,PR)=.h#J[O9Z**4s-*g4%^ROr2Ka1u[m8X]hsJ,PbD.dGnJ)3?l+cu_1.pb2g%rbgf1O&c<NdWF%%<'2,s1CV1<2l6,?i#HI/u=<L-bKnEE1XO3X]LBXc`"':.g*V"((YsP.$+t"=Q+nQ-g^Upp_N:*::c(FB4C;Po"Z?RkSE"jO@a(%%:__&8-d(dcI+]0.PDakA'@_'K071Q]HXSDt"PJiWh]tZ:4?^E/*]9UVE0r[n4&`Lj%Wh!%%?TkV]l%"%dU;P@Z6SRbA7RWK!r)2s%#Mc2g%su/2_7L5)_Yn]"%3SHVm0sai6DVM+nq>33<rMtPE$Hd6o84C'k"_#`GnL;1`g9*h8m0>?8F@$2j?krr_Rn=r%FZ.64MGA>%2D)`_63Ls.%_ojl)2K./CQDUGU]LIgcNQk]n.XiirCY[s5$RJtQo[N5"P%]/[@uof]&FoWV2%$O`j/G;FHFL'a4mE(.0IF@d,hHc%\;?ArldQr<>^.\)c6m<p<//[`\B$u4$-S?\_RF+QV4$^"'"7[`NhP_CY<270`Solb/+n7dC?">2ON..iBfVeNWa1]=>EhW2SUh]2%^6Pq-68\Bb#YE+-iN-C/9C:2IQ91u0TD`Q7q=YJKiY4-5P,D7-lpsp9/:ZFfT$kcMg49omMT85kcGYLEa:-F6%sJ%b"q'St87jo[%+$6Y(R1#88Y:Ls26%K9oh**=h7K#Pd^-ZEcMZ&#<'kkT/p2E?1T[6UrG5aY%h_Qi[Xa'/WG)L1C-@d-:R#sR-6QcB??jQ%rW]JAa%[<W0_'>:Yk7/D^qBbgh7fN]L:"5[T=luIW]#,*d(DlRIZ'Q^jEAe0lPia7?k:-/iYe,rV1V]bmm%R(&"`:9aLJ!NYb.PFpB`Vfm<%3F#g`&5G0$JM[FakbQ_tSq#Dg^2F+a+PC7N-Y=l:3:I]DU>KhhoTPrZ3ZsGppBIZ(%L<Xam_&o:'"N>a%;>58oELE(2Zf"U%I"EK%c`s$8(g$_YiSHAMDj-`C'SZ_HSA@g@,)WI?mJrl"_e&DL/\mbiNBFZCbN6UqcA(Oa-G6',pr=&:='c*)>HS7OTcsDLGbt^n6.ZgW%fDKSKV%qK09BZ(H(As6R,K9fX]Arf#(,-p?Ci"$/*f9/&D9%ZDrdjYI^*sZR9YHQTjsI3MNQpugF4:f22ek#X4C7!Y6Zu4hlS0H5%LVlDCr7f3Pi?5'6jlIW3D7FtLjKg2Jk,fW0j,"\%s%j9b'qaq,N-SJUO`(/j2hcI)#JIJ^#hZUJCf/`M@&Jm55hkp[I0^+u;oPB8%VcqrIF*I-%46g__JPSr6#<j_@?Ad,M@2I;h'?8]&",'lW1mT@_FY3Rn.djJNrIEbr1fL^E#=^*C_+M;kbZ@-^LNh7NZ3!\6pRb=;%Fl_FV,=CRND8=<EQTkrtB%2&7`C+_)@onf5Vr`(Ie4T$;jdSeJcS+#QQ1D(&9qcs>&Y#<@H<DoS!#tBJEt-Lpc.cZ1S_"A'^o%?0%K!*`HRtaLb3pHIo^88K%*+7Q9W!6eYLl*.SVVnRZF[J#O_>_h@e\KC(/Na(A%j.s)$e#(VA)m:K#Y-Lf8O]"0GXF;QeUsp:SXc`1%V'C6!B)"nO%=IMRNUBSpKAb!-aY:8kcqI:G<*@1528Cj_Zk'aPass?oo7_%*;`OaQf;GIQijHEs1ZE>02VKJsd)-;_JjVH3V`>dP%D(?X2-aMM+Y`j^s/LRk/QScaEMiNf?#<18MoY+>+qdXLIZ:b<kP)";ir#7Y@;K_PTAp[Z7W'taQ\&)lrc<uM)*.\Hnm)WdCbBHoC%]LL4U@U9kFB=<,c#;g"rg2?0Vbo5_N3WlidNS]ejV9+iAf.=QDR=J?/!b]S?*1l#g"1lP%Y60OOnH9\P,h;J>"j9LGcf-cg-!Mh@%,mSY^q3:A%6WfP!1M"n\,mjVd@Lk*6\QK+/YA7&F!,()Dg0rj,&&H%0;!fSH!7MZ\!YZ";g2Do9Z[u]l:cZ)")$UA,q(>ao@'1o8%JXos!*!9AANqH9YN-hH>6SY7U])/7U@\=oPe\XBe:JhOJbp5d9Q3t^DkZUlO-91LUDN4`MjlkQL3aCjll`B=+W:61,kd":J75p>4%/[`hfqT%U>Jj&-4Dgm6L2O<>=:j/P"D2d2$ZM3Gs!9R@nf%[DmF8:?,,^AT&@0d&e>e6!+P+99Gf2)Wc9efJ+]9d"mT@J/e!6bcu%Ai/0qHL3(d7C=P>kIssW3N-IgVr&0jMF\d05G8qHSSV45&B0WUTWVca3%0RZ`P\#/7*YC=)%fE+>sm`N0dsV/l.*s30Y?Qu?N'q,%@Qk2&jR;O:3MI>q>d!=;j(cpl*el#.=E^TminjV!^pg5:@AF-.-2Ja]]CVN&%<m$OHaoU5Lq\7\=rT]h2+(a?2NTZE"m:-@$2F=@%IqC@\!tBap3eCfX*$j\Vrci:A2'h;c1%*?roj8t*[Ja*uTRjOefoO3cs4NI%XVd$k"@A/jP79H#8O(deH[pe*gO^eMAAtCc<qODQ%k8gJH?ks?\8!f&#_sS,=[.uRV*:`Q:pt6EJb=q?="gl8Y>^bA@,n7uB&LIJQEsL</6S;:3?X$@@DTO*/h&I7rdfDM;pM-1c^9bC\%c=?VVef>t]J8-Zpa"?A^^Yb>p!/_&JJ%gg86ki-*s)Rb]?mj_:Y:XuIR114(IYj/8S*)3ueMM4Qa>oa?j_"Y,X9ZGm[]Kd_R]p<E%OTQqF^sLq'g&`@2[n_O(;/<N+?b%04O;p<<"&$hACeh3Hpj7Yq[CW);^XqNUq04bF)KGAo[E4.[]jI'4Su-%f>L6P^$:rWoJf'3d%4Hrod6h:G`a0/#s9W@C%YAflZl0"&N5AY`dT9'gn!WBlDK!p-=>6r8L-FZCRaQEOC(\lX?<LXXEA@4&Y@pZF;VsW.ObPo$uR@;N5%E]h_<p[@%m>.@'d2F'qs-D5-oG%l)pCU0]OX4J2d]-ac7[QIsi+VZe$kLdK(PYSKcdO^`r>0M$d1P&Lm$]D3%<dn(Zpt0j(>*,[.%(5'5B:As[GM\82dd>n@-mIHHakVtQ^EnIY?)hbHWk7u.LUoD#Oe!8'oK?(ku4LSH9jGG4+1Y"/Lb/`\KClc2bX2Q&'4GPP+,$M7r%-j7oOmRTk?Y]4G_U<@,[CS+X=Vkl?40R@daC"qGRpWj`-EoNb^<cgn5R='8U9o#&jUJo7[Y#qfQ#+oe#_7B3u4&D$fAG0EEeY;`-%`;j#H>*eRQ4D"M:HP(cug:WIWgV(\*F^%XKObBp(qt>+A%?bP7Y9.7^b)Y8mqVqjrn'dOi/_^tgj10R'`6::G^WXBlcJ=8VMU],B%o^s)ibhJ=afmIeYHM.B+lW<u-XB.=P/EopA7DIN7c/TTnk^t_"FO^MsjZZ!sDBI865s%Ua>a_c%8[]?GI\ma+^?<Q*KG03qXZe-L%]Qn10:pQo,M;:p6Jp=J&`%?mb3A*S)kbdGja[QG%Kgp]16F+dEij/4+(Mf0F[^8[G>*JRKD8q5i&?>6G!V?iS_k_VFS,+[PQs)>G%G"??P7juJ(gU*$r'K**j8.2+Rfb_Emj/O_\EUa-:fSP)P:Up>1p#9$Elp(Lhi>>KF<_N&UU(c=u_!nia0?>Z\g0]EG:Lj4MDaYtR%H2-ClS<iRYDr0l.Vd?J^6i-B&D0sH,Ip*,7ZrCIXjmEnfMt\7@Y=E)@+5k#LT(u?;+i7@TPU$4V2[5W([?'nJ\W'#G$!3$kWt1V1%#(,@8XN_dZ\2<Yq">pHLp=2rSB@sf@N,eCcG.)"a[%uIO]mfrh5Bfl$QC:]slK&SNY-/;1m*"E`T!3;d/sU?[H3Ea44hq[nOofu9%Mo[XO)Ec>ZfW=2ni^jmY0SW467\h9kLX#DI(%o5+]7])Y?"I\pp"J^(gJP#TrL>mA=r<YZqo__hq.]+grrdMT3IOhK"M6&7k=PE'%8O<&YHHn&>5@S,OY`i"74LRo/6(g`oV:hstYM7U09O=gWrA(JY0)3Dte*#051:H;p9aJB0pZ;Sl?$P2/NBWdI[q[mpMoA:*2W!cq%s6oC#Fu4!#l`_b8GPH(^8-8EnkF?fHQRKa:6'N\Kd[bC)3^,Gu9cAeoA\Ypn2+2%W2'IK,I)E#QLrsWH\T<Rc@BH5/Ep7ia!m$E8%la#JjBX9BU'4'A#6*a;nh12h+n<L6DT70p0R8i]b#po=5%O58scBOB;Z_Y.^AYmkta>[h<ZY(_mN+a,GR!lF6Bfb?)o1Kj+f(UDL%o%pm=,<3>UpU+RLO9i.I#%%I()gd<$>*&(Q7Y\_H@&mqhR_UDJomg15Oi00oL!5AUEr<V,:)UalA\^q[Rfti0-o[_#E.,CHkY*oM%pk--*EX>Z*;,c2AA^'127aBeqDOH"SYn'MGa0ql:$*7#DBuUnE-Cg8Dp0X5n#RP.5A2bgq-/dsc"9M\5TOd/=4D9lMeRZ`F%4s@M%fOJ.%*O<JP@+->)Jg]tuPZmneAH=sbM5*M*X#;=?V$+OpVF+!g"nO2$AHW_,Q$/_+`'KYjbT3DX::Uk,#26d4/I">1b(;Q4]>KQ[%`>>>Jj7s)F/\2gAGM*ucP%s&f>9^HolTqTX2Z\ou$u3PDaYm^rWsX?E-3e[I$YgPs*cf7(J6>f;7!k%'m(]=hJn@0&$:R(/YG?Jh%g<:fiRC$TeJf'BTAC;NON6rOX?BM(-l&-9:`0Zl,6N47CSkk9rmkAJ7!m:0pTlol4c`0@nLG+:QnL:[QJc&?_Tbo_J^6V64(e7V:%&$2%WbUt,Dhe=72g3D(XNo(\1qC:tGA#*[UfeXugk6W3P*L=Q@WB'91F#F$o,BPfa!#nQTT+(7F3"Z#j2di1X%N;WT-crl'oaA8\%ZdFVmi]hh)DU-/<l_X"gO:N;6QqJ0*@-00'-VFZF_I?>P_*?(pIVD@B",E*&o-bgLMtp%LF(Kc6^lp\Ept-TuR:bQm-DR.M[N5b5%OXHQZi1I(?Lo$3djOoH]O'^-([`h6LcJIAd:3Wb902'A0gUK&C@!6N!H0a!VJ>!.HCE%W)&^?U_8G"tFGsMiER7hg+7UsNV^E#La%\cj,5]YY3[m\<R#m_Pt149PO/oX7)<pN0%qae_L^.?KML[RVB:UcXWibfsaH7d2Z/[e,GUa$Gk&-'ug<+qb^b&QTI86.oh'-MioV%J&(o>OG/&iJ*Ynl?<##(),H"+`"aZI!O2%pR/gkt(igT(/BNMK7k8?<-&1R@bi]Q1YIq6^+oZW;Em$<$1oQ>)rK5PbTc:<OWqLK^%78"RhX$4MGM(4A#2Z#oQNFGdn.$H!_l.&;TC!4G[84*`PY:_WAZ\4ZtStLQm_B>.t&+Z0=0YI!*!aI?9#3@JZE][pljMGBN8iM>q%HR<ZhVqU.Pb/h>$,c%s/RKS1*EdAVWJk0Kk':rYCj*!4\L*Hc>c0)2PTg4orW/L0_im`g;17t<59=)Ze=5m510_5uG(gI%u5C/3g%"*eEO#OdcX%F/]=f[V>1%%2j\TYcHp-')r[j6$91/0/uV-;0c4?6!1#D0Oj"pqP0`?\eRS-ZGhg5&n3>bV;Cb`b@,L+t:k'QWW44%j+(Mp;]IGMnsMJ&QY+%R))P!3(X`;X.5+hWe7`eF5@o.91%Q_:b)rbKSmfVF<'D_n0Z7s%##*@Or#bAZlGD2SONeC^-Q,:b<s(pT%GU=BiaJKZIeO81bBU3NREoR5l.*Etk-=gNY7G+ph8%99%c\ODDK36?,p0WMIg.irl(Wr;t:,TqG^F1?/:`Pt<b[;kVU.W@6buCKI%Y4q0$=<H2P1=*kFV`L+R*a-V(N"AtC1?kBU@QH)]*2G?B7u<#Y3,d6HlL6%V0`Vp.hn>&rm&^?7ldF]2_-j3`+0/S8%o.F?&5m.m%)J%F]$nuBONtZ`Ra^gimRbt'5SU37XVP/Vq%;X(^JY.j1R7I0J_Zb2RK[895DDTP@*A['SYb[kZd<LWu%[)eMTPAggP1#sX9^-fI%e&)<<iE-BREulP28XUF0%iN,1EYRsX,5I.<jH`@;eUA0gPr465)l<eUg&l\N0Hiq=P_Xl(ALRoSB8<_]Ph[\!W\dQ\cDRt,0E$.3%ULL6F!P_F,>iH=k78U">Q\Jf?,]=I%bli5Uc8=/CBA>8/2tgKiR!1_snQPTdH0or^`$:.(lnlLD^@3!i5?9(f7RlKLdKddS^<f73%Z.S-3DVAs)M<a$[K=*U3WJ+VXZ+#.CW3X"qMk]O-b;I``'7\sE@@>Gt-HO+NPD*@S(`m[s@/MDWU8X!42;1/$MQ671aLm'D\%>(+%jKcj3?;*V#gZslKd"j2%jC(9k6U8IjV:1Q=j;.OqjLU[)MpQMpeJSTPR)OtIH,m#Io6uq3!oJN2$m+OF."K`)eN&Z]^"4LhPAKN'%C\X<]_-Z*[Jfc=Wb%M?-)7`BcqTTe9.X9:^(b3C0f^UY4Mcqet!027WAq;&dTm(O_2N7(\%f:l<%RZILfKt]j0]q"CmOI?0QQ1LZ%\'\?g`2["?'9ga0K9IsU^r3$*NXQ_GnQ@Y)=Xh4sk4RC^0'IHGMA#C75g_1N%2@JhrI@1:KZ<9'JR^LrVG*/I341DR;1RC5c6dur%3R4&E":6,)aLQA5A\h3ag^@Hsl.nV#dG:M>92;a;L8Jr)(l^9g#:d7u-j#i\;WsuO3k-6rBltE+aY;="X=7.-6,FPcf^Ph#&Ppf5%O6eYZ+g`)7`]<-8Yls?3)m<'qBHHq*FbZc;%@<Tt,Y`9uMAp,;_8*gXjO-Y\B=I9P;(rkpYE)n:faKd`M"&['bs&G]!L/?4Wm=o@%C=8?pO>pa-RI-CnJXidlcFK>t;qZfIrC?3&.0i2'f^b)2l+%_:E"EiDWQ.+GI":2m'kbWr`cn_0#O_<:Gt2&g+m[&OkM=[?M,;ec%0h31DOMe4J#[XS?4G2js^If/OR*X12n?'#W`J2esifo(_>CYF&$aDOi6s,q'1ma`#[rTS35t@^6>Z.L/1+F4;bRaZaN!]?[`-1/#%KVF`1EDW51g(ngkEr9u;=Lpk)5^ZeM_u$<n_,JVt`%k&EWZqo3Gl+nS5X\!=+blM92]/E6J(0VPH6P7SDSU)i:/fedFP55jbB1_F%X\-iY2F]EPdF)GH#]pmr$D.C1174kF`[5q-QjJGFB/qd4f&(smetX!\!<ASBaXGs6jt"h'\[[?rfJ:uu$98,^VK'h!M1fd]6"7uH%.YXQsT-";D>)Y*'&rM$<"*r66b*^!WPJ-<e5pn6PXBM%E,s:`nVhrb;dWonkhL29;pDag6LjMOaZ`:\Q>0F3$#,3'"bF:gVfo\<n%/VKUbSSsSE+=G0./]:+K62ZJ$^8f\8&YOpD5P4Aubi$Hh"h.=(!RN0Y!Rn,09>#nFAf+oPJe2@9+Og;Lk\\E=`=<-`"cEU.o*-bm%qJlg9P3asP+BW1>9r_R]0n"i(&B'da/9:*DZAI^=7S.>Eji"&KZ&:/9><!b\o#s7'>8dsB7T[!PhbreZ?RTIaJtl__kh6a@/XsVJ%r!.]Dh@q/BJd>CW"QPXYR@26n(sCC0<Qp2-K0dl.>S1Gh-3M%iEdEU1@FAO_%*!Q*C=&19bHZl=>="UKZ43Z\5*?S3Yjc$<_<+?g%+Ct6^VDC.t_rr>Jn0GtAMP=r&QIR0"\0=M$H'WkZ7@opnbugDYcZJCoO4K_I;i*C@@dB1f76ofDr/KSi2jqp)!^=2*?Jjc*-3hC@%0GK"G%6'hj0Ft05S[j7U!?s8.0h[X.jD9MaT%5JK3TU/+.*.SIGq$hgS.)pFN4kon9t-F"%;Q00:CFj)'g!,ji[Z,gb'OVp*DYQX%-H#Cn@F/g8=?l?\R?D9GSWK*JOm:Jk$R:>V9LT74S\H:_Yd-M8%4h*>=+t$+\P0Qqrp[.V>Y#:h&)5eC29NRY&5W5:'Z=I2#]E8p%r[%18S6Wj?jIE9)ngBos?SUAs7G1i7:<lC7bj_XjRC^i@L,10S"-Pj:?S.Y8<um=bW_oZ#Wt<A)$'-n_8DZfH'8AgqU%.*>[dJ6i%d*Ro@$kf2$;gcnk<>:[D:qWOPT8/EGn&BDoqIM_@E9BVCc']hpqMPl4'7B98>2G"$ctlK?)H^d9HAXEffI1%gTgpP3UGoBAA14h0%5mpqsBPCKfal&FL,[STt(o:cZ>T+cIiVS1"CV)#b+#8=3fD]Yb($S<52JgIST$Tr>9gQ3'))t&r2e$;@"X\&6m9:Q-HRR&-G/hlT%qd@#nAj4+i_+RjY.HDg5hO"HRgoX"t>J0G-Hr2o@>um-F>'QXE%AsUg6IXDR:lNMYJK\m3=P;Xt!SShcC=;X4@pP4t)fdMSc6O;.%DNdW&K=1$=iM1oo&^!?)Q7NM=_S8Rk2(ud6a]+L"`_3NC*h(';b3!4YYE@J?27#><fm2$g4/!%(QU1o<ZEj&12FT.dU/(iJ,kac4%UraIcGYiWl/pW8]imO'W\h_HBFD=X"gHSdL_p!E%m9+4%M<Nrp)/pJW85@biW^aEVN6-P`6qEQ+,<W9J'[FY(7N=dS/p[&Uj84+;%3js9lZ_gtDQI!974B#V`mtNsFG=t;[B*l%X[1,Ni!c>31GsGe-GUs_qX,L=@-rcZ;ML`eQKoi=L1OI.TmPfseE;n^>8qDr.UPeWM%VsJdpr1_7Oh?D$@Z7n20HPQWMVA`\<nV/1n,Oi&WA=A:4diO<;jKQ#G%-W:7cWoFCpiln')sl#.'L`6SH]a($$b$JU&;a:sj%AV5%_8$oCR&j\RY,R9m&?BKec1u=nJYrV'WnF0P2&sU96G'(s%IM`rafhK;nc2SZa2-+:gcUpG`\2UQ4CfbN$8k*1Mr#bb9`$$3oqh\h%Lg--oOK70M5`p\]"@m6?Ce#Uc%)UFon,`6/HKc#m`m,#fkt[kD2ZO9\Q/sHRe:S(qF^7K9Z7BmTg]o(3[tYH,f[PXbpFLn#[=Qb_%3.'N>@'/DSGu@4;Uq^HXL68p;lra3<.ujJTcsT>gCeIMT5p[mfE(F%2XY,Y@f\24D#p;>;+2/DC3rSP<IXd"E$&?Wd;Uk)%4MO`E%MoX8t.rY5\63!"T>6BMY1V$:o\d!O'R.Z<Mj!hJQjAG'mp*m0YPL"N(C"tJ-'_%$_@<[SsS_6ud6giora3c_D^0-ph#eE'sa'a0,%m)F*VM.?'Ms,AafPs`JQQcPDf(dqt,.aI:;dHo'$k-trXo.$t0U^-r\.Kh2ZON[j_lKn@jHJKJ-iRr5q6IKPtZ6SS&hXVY,?>g"L%J/Pge$ouWNV^[.&Z$c/78Hp4u5rgr*NbMHsesT0N0+QG>([iX%>u;rn6u_TP%+<c`"%ul2Xqm'STLqL'/?Z-'i<^i,dVNC(3<JK)%aWNZUTV(dq()^\2MU(TJ1pf-*k;)#[,Xc'E]A*ECTuqMOgko_$3n?Z7YZl"f"iCkZ#5/=OO2sk09(1DVkUQJI%m#cTa<88D6TCbh%S0`h9,\dkWL8_8kRP5#^Jah6$MSZ.J`mWkk-Qh@&*mY`t3CgE<4b%Lp%rH?=hMtIiP^7`!,-VEb)S+n9lZaRc)1g$,;cEb_\N+&p%^Fq4Im)dkn&.bS-$1fb]//7iJ6S$;pr(M!I3$SCR,IlEk:'B&oNh7(>)u@W34!33r-T3(@6O)CcH"f:$gm&?",E-<GVf.!<DF>n9%2WZ2R_G:[$kCMf[@:UXho*@)p-i*[q1-[MQ?\:hYfM'JL8]3F/ihU<k.r!dc<cplWOor;bQSMl(@a93M)CN&dYd-5FL^ps!MmBdH%@V?-Y3%42\"+&YMJDA0sR^__9?o_Q.]<5[.$s?SZi3^\Q(V@#P,,Zr%Q/l2=)WT:9##71Lle,\@0k;nEFpP\\&6ErSlic4[$_8Zu%1uVFme5(C+ZOT%'.j20#cuqignh@&Pg4uaT^FIQJ12:`Jr=.("K3-u',hFE$(3j(62"uieQ>DKK5d;WDa!p9L1\[s9kN'@6)sFBo%k`K9/nee(+]IH^Qc4T\n=4[m^6!LQ@k.'MM'Z[^?:&bhm*AYsZk.nju;d1uh-9f7@9[70..EK02q,M[<I-eZs]m2U2GS%/6"P00%%>`\6(TRA%RNbOap<FI&!s2&BK-_*A`lJOTD?Tf(,&^m\:0G0e.+YGbd<31d9les>4jQ^3O-8Dd])/)ZcNZk_16k2_&b["!a\R\HM%Q9FN#2T<HF`G/H^3_r<8+bsX[)b5n=e?[0:8nEpf1a6XL6:MD#j@26r<]!i'?P\!%=Kp(u1)4tE72QaM3H@NZN^f&\.)\][:B&hr%gh.[:5glpm0^F8Kdd;9E++:d>@"pCR):hCO/'qZ-"[GaFAS$OUO`)Yqj\5)CeMN(+38*2I&1@tBOGAuXpl!K)?gT-iqRO29@'sOr%b&f'&rc/<TSH-UEp=^Fo8Gbj#XWU#6&fqYG+_Y70A<5X0$Z8QlVT8VV)tY.k1J%G.$Z3Z]6Nj!\21)uZG4c^DkX#BOo"7>Z,VI]_%_E*+-4fS^BE6q2LR+r@DR#m*+:K`XXIO)=?Jg'$^DlRBMq5V1W3'lGK*<FqQ<Tjq&j\3kqda6ZU;HUq))deE^?:bolSd<HrE/c.e%j"D-mnDnf3Tn:'QZ.,[&3Cuu&_sPkaq)m`j],E*?@)iM_[YO9hb:a6HP/2^d?^)t79>\0sJLk@2U&k)WC-h>O5':K[&9@1Q9K2'r%VBr1XbceO8%2G%mXWn@-p(QX4&H[a>B'*^HKRW@.FaTR!K$[&/EFMijL'Gtq<a]/q:=XVH:Q#90>f;<Ne=&^9GmHco5Wh#n1gqf;%<`4&]OI"4X\I3b?_[`T)V]'Z9H)aFqQOoX8d0rgbAYf]<)U_eA=2Q6&=V+4sgtT+gR%al-/[u_WOp!gn"JCZnPS2HY\X3Pu9R_1%%YpY0?GFrYLd(0_m4Oq=$r4"&I2I"Jt((0omR`5)([5lZDdHBYA74MFt\k&X+-\F'$5$:meeI3$%14MU)l.%!+baG2Fa^"6+MpT6M%!]`o&9W(7"#l%QVrl&tf37:H(&`O4?h!-I$iIkGS*]'9o$o?RRS&!"l(57!n.<@B)1la+J^oFoug%b6Y5Z\CWq49SQ<?FB;%TQSe%/!6Jnq#s=@AeTW?="SI?G/,>CaBIKkSZ`g]:3&-?q[r-V]++1!H<`7^5fV3'gOkM<oKR!h2O/hHGV(m.j[*HA[Rfnk)UdD+jNOVR%f_E*:9iIGo4V0-I^i56$5@_J-*6%\=VG7CUQHh:FN*4VORPS_Bm_\P`?:5s/Z4:Wk3-ZoVCIT7kKH::7Pm2Bu!cjUlBrumt5YV4m%dTR.jA7A((R^XibY=jEI9ghA#[9%o#9r*!<9"c,W;32,KPCDAWliekr,cb&MFG3uE18$,ArHH6<RihcaTHV32$90U]>N)(^B-"f6%j_6%efbRZTAq6NU<c&Y[;a!^mip"";Neo<3Bs@L](E6=+dI!/)*%\n(/>kAG^jX^]E7[oXoai)Sjrg_5>kuX0Veo;;IQ_$V./C:Z%dA31'n5Oi=Y)YdU(SG/a/1RZ-[G3'\e<.9=A5%sYGL?T7%g.S,6Ss-e*K!.GQ[gGQBSI)d<"(t7pmXG:L/%g:+6ISdr__U*hqJCB%6*'^t?0OHS7E@m*CojjF(9#N\+[s?pJid!j%g#nFP^;$t^eN.Ie*iDh:T+3kL.G3M=9qRT3be8ZgD\45`=D[=D7Xsr#2j1?I]qU&%<*qAE.nT_\B;R=Z/Z>Df1-Zq_qK@e:'N#8i*#q;8!b$D_hhp?h8ZB>9I1_g4.*YWRboc<CJHqsM\O^EAhZG,Q/5dcoLe!_L9U:^;%c&>2T9/;7l3jN(D/')Fu]VMD%N%G..D)N%q/6AhOie%>1T!*E<7T`UbjPlV@?R-*SWB(@.m/8f&!["2<3';"AH!:0_FWMq\?=A!f%LP4M@j2_85%IXt9kYYU@6Oe<!2!?n4\(p)g&lRUCcB8V^26Jcj:C2hP_qA];Ef_"N#BB_tR)"+@`8)HpC^?rcDVCgXe3f?l!/<lt%g5\U3Q?ai$bCXr.,?cLm_*XbR(@l4nY`_*Kj+]otL20k?#>\[`,15nIF;B@E7_MBjo._P,`(W_470mm6LP$VM)EGj[I%V7Y8,ONJ%qgSQN_;(hk)c4+@hgqs>7b?pYY@i\KXK-@\)kJKs6RGTsQJQ;+dK3^XMD\^O01ksgn!djQ0q-n9N2EWR8,W_HBpNkRJ.?TJqle2i%,[k1E%C3dHR:V3tV<Ls_DTg6M#nt"lZA`;"\4#SBJ\>@R6)\rQZ&lJWSl?S^:=%a:<ar7/arNlcJgfg0%?Uc%+_$\"Rt]cpU'i8-%"<r`maOJ9>/a.4>K^(1PG*)#:dt<U(2r?D5q8Xg%]io)Z-m"Hn_bWjb(c9<c@DjDfa]WhXan0>*gX%Y&!m]5j0u@E.5M.:R"#UVE%BVBYAGnHf^C#Ccp?$pjPV8mXV6/"f!^4t<@[Z?Q<<1U/reJLE:<dN+(T)rS;W]g^6UgUq^e:[Z3)"pVo_?n1,44Yq/BEU>%<NS95%NgN@h32"@d1$G@J<4P+'e#SSL,EOGH4MDmFQ7K3qpbq1;C[PWS-I42d"!Y_DFcg8RjEWK8oRlD&C1N,(-$0WC`Fd1T_-lg=`*L>,%ing>jEt?->!Y*uGP42$R$8bC?i9Ei;GMrSLY>O%,;g7.;Rc-#B\!Xm">[aX2c7RU,A`b+SV\)3'k41qn`ADF96QVt6l\`WEA&F3k%5(nF/j(JqmmqL(P,,dQXKnK't'$Sl+\8c)pOFS*Z<$M#o3V.L2*5V>3X6[86Io2X],lr/0s1Q.B+#G'h8CC='hjqD^YRRQCPlsr@%@_#S(U,Y#>3"io5QZ?)il1)UP&j`=T#-<C2<(0$jk85CQ_BOdEbn)+qG*Aq(/DTl+#`n)H)MCIa"sL7\I2$;e48Mhd:f!(b6;fL9%GLZMc;Pqi<%XDJ(.Nd+FRC:5B2XUTR)]`siF3B/Uc8pAA$e:dXH1*DSF&9UW9bL['b5Alek9*!P*W<cZLPd:`rh7?Qq)SdKh(miN%&C>B71.`paRQ`>rT:;eDTB]$AnY14L5J#c+57'_o<%\r0_S@"7<BZ)4VHhM#.rD<`kW+l,Mefku<[E2bFn$CXd<0Gp;\F.bn?'bJ%*AZMEETei-P)oMX\LL]bg@%(+Lngf'-'<>WROfU<"-Sj8@pk1AM3DEeDol"o6)p?tDb,l5>t[7(25K,c$=mm2)OIIoW*ki!<\Usm%&We@<Le5FQL&KZqR"aA3>f&V>S6.6lk8">K9V;&+kDWG9b;.aMYoF4ob0&aP?FS-)NAJ0a?ckW9\3r+O(KmE3*;ut7mc0U=#]OM=%33=AXaXG'nBlBqIN6WGJ?s64m(I@YPrl"?kOrm)dB_k:V[nUs$1ji^OcKV*!U8:`cXXVG@bYBgmfaR/)AjSks!TiH(JD<jFNa%gH%hs94c".:"YRm&"]E(r%1_Y#CRMf9,EELR-';45(M4]7ibb&LBla5sIabj2\G4g%17hks8=SNeRC/K<nYOO%0.>J-j<U@B0FpYu&@%X<0PgDc_A5]^ajQ75@1L.E]G<1Hef^673qaNhW7/8`$PHYU7216Vq78quu[6Y85IT4h*A(N$+AOe"`W.4io5i'F)[<ZMkcCHW'5f%<`\:sLh<-WA1tTh!.c]e-!%VsO<FZ\abu2'82hu`et`-^OuSR">Lr4=@Cn?rcc)VPCXg?@!k/A,+X1N%42hGmN5rF9,4P]h'l&j?%q:7u<atY(GbLc+OEBk(Rp13OM5SYCK"u;CVcM!0k`)%"1bh.m&F8OOIh6IO'[g%k&aEGVi#);6-6tCk=o"=tGE,Tn(![^gjCYLC$%Sq%(oODIJ\X^ip$ZRV"<H-87(Q1:])cA"cQ3AFHiP#XKpLk2'rS'4Ysp(GqE'm"%CFNBi5(pP.@3$\'K$Tq_:H%'??)A<4dDdk,l%jQhU:nl(,g8t'0e/C>i*?o'P'`?WAh%/Pp@Jp4.`BLL].B(\ST)^ZWi"GJ)C3+?l>"p;.*gN(7f1.M^<1RJ5pj;ROs1*L+5X@Z8A%6:RcK)@tS%NNU]SO?XE)ecKb-$>+VB4>P!&QOHm-7,h:=P$paQ:bJ_RKg'\:EE6)lEOQ#6P"VI1M[0Bq]Ho<e.</nu3B\iL@C#kY%)eA]kLgf5paTM/[idO6kI@E8p3>P>RE^`[9XK^)&;+0Ul\I5L33tC6g8fB1R)D0+HadZ9_;J*-]7c?CIMIB2I4,]3_eM!S!]IJ6H%qF"He4naqaiMV4(T(9\X(T)bJN4)BiDjZ(tU@?V>',)Cl`uCb]=JT5RVZMrp^o?pLJoS%\`cBTH0VfRD!l?8`E2&PeT59TKNDp3(%!%JidY4\"`ou&]oFpTp"D/#%db1_/@!kB6]/+$SlkDV('B[bL"M]2]m&b4(%OHP0;NME/;KZQSeKeqLeP0.D#hb<Z5*7P+o,Q'W5%D\-@!Z]&V#>97A/A#*"?J5/58$`&WU,0Qqd)+]A71P@qe=fYIuEFlMuWpNr00kFbo)!.\GFd==[6`Xo7%QnT-lnAW+*eK-"L)GeQ%k@INXJP_!7)"rng_:m=C:O562PM?[Poom/l=IEKTm[;:<I)uijJ@mD5FX'=O:9!YtO@@*6C/cRK7Ab$>i)pJt+A8Jm%6J-W'G^7A%"3g-J`JJ+8B2o`lF!Y1:;^nVSR(C#ANb?EQXcC/O/6>s=?WqCkiW=aZ0Je^k1Op7@$F-HJ1pg)E.lV$)<c^2HLH9<UdFCn=kU&Jp%?r6U/LBG>:%e<u:DO5RtPaJ`d+BN.0/DX:bMH/XaaH?b*Jnj-*ria)+IA&M[Z:VmV2#9f<=tV-hTIj=6!dXEur.SmZWuTM4:<TLO%KA=Y4jiCcgDBR//,kfElZ/rj<9/UiNZKu#pIr#Rc\u8E/BIdeOJKDDK-.7=G.eaHVa!qfY7ft&D/N`(\V)]DKgJ.F`-,Lm>0`cnT%bo?,.Nl1RDA#qJ"be8gBpe4H^Dabp6X:F1*"6uS_Su;L=X?P);&R,\(#<oHg_8Jb=pXrd#E)><&#C0m1/[=_3JNm]LH^6itZlk>C%C]$V!,;^sL#4WKR4)en':cGY("+>C8!]mhJ/GJ';(_q9`6V)On^g^\uH%I(Z_kuod==u7u`\$rOi-B#""sCOBTP(fH6T1<Mp@P!&%5<1;pCLkk\3eN#.N]a2R@Y@7TXk<C."iI,R;3A_oe'f6@PruZjlbPslC,2M]/jNj6VDnX`>)9,p!Fk2V<<\&V9?rfA@^-<DqC$r4%ccLfBXGKUb#UgK975,!hD'DW#X@0$Z9LGJZ)OkLTl&k&(@K=,QBQu+`)eCeo/nBA]W`m\Cs'V?GRH`gC'36Fn[kROT)!lgM;BI+<%)r$UNK#Uknl&AgF*q>g)M<$E/dL_D4TMKknq@P2OrC[M2CBhSj-0Lp[$n`<M>PJarMX'd'Ii_;tE#Y2YA`HMT*Ic,9-,KPCl[.#*%=iKYu6qnI=5t&4sdHN4]i^^MkL+0#@<f)DNB5<ZC"#("2V@N=Y8GM:"Zmd8cHU;lc1$5-)CWVM_5!(22Ro+N7.&dL>8%cPu'FSg.%#*=urPA9O-r;3S?o)uVKM[6<e#juE"SBE/\`Ch7(#a%J!5:OJ`90g0'+#-DK4.'WF5Z!AC#[,/(Q^@X:6`)]$m+(A0R:O=]E$5g5%lKK[jaTad2ds"Gi9:@.NG'^S/<YU30"L>ISk$sM/C=,@Ue;*NZ_kmofDUrOf(W,0hJ.V+#/]n'\7K[[`R?Z5sYAmQ?*tljrrZY!j%8]4b$SLg>"KSci[*[s`\0UmWG>*%`p50ShW2"t[WnWW(cWb*PI::i2:_cb-[C>g_7,2IS+Dq-V*I<qkB[UE>9L`h'XB,,/$+Yp71%pq0Ut(2qm2^+iEAAgH9>_]jp9Z+*/8ABh;X]Kk*,Ud;"[V41__?J3>$1\=)lY+534rpoemBOu)\&Z*>RltL1nA7fh,Q<h=:F>7XE%UO/g5db1CP(`e[^>_+6q"h[i6!&<OuRc@SF0t,uj<11L_?*Za7!u#B8>T..(it6[8c%YrC7R*XS+Xn$Kr#bmJX0_lE6m3$eQ.OoQ%WIh'AdC5p0N"HeEKp[,k+Ur<O`FR8b)5eYKNj9R!"/_!\0P?4Ud?QF;`8WF<Qr92rL-SFP4[8!+aq?^'60+4\Wog3F2[qO_6gl>1%-UM-D6Y!V^^^$"?O639nLI$IiG\1#+Bt/<Er\koY[ReIV^U!nAObONkQorEP=Am[9;tV'9+-kF&S5NOKR0F#cYtM5L"hlgpVLuQB%9g-RL`ZZgeOEh't7U7UaP/4LO:gJ5jWnY0'?N*VD#e?+N7SDG0?.`Vke?S@KhL?mf,@gc["`l#_2`L>PMIj"<'57qRE"Q'#7%1+?%O\Fg3bT[`p&^lgU5%Hj/!,SB`c$BuWM=Hff)a8;UDjK)B37Ih0$@VYC$V%Y\9CAREVm`%.Vfb#:],`Ir)#p5;L&cCe++01US.Hso%eWH?a9J-[hm@0!?qns^A3#9nBQ^"d$nL:rk\?$HJ>@@r-@mS'gOZYTa,VaZf5$"g2"M1=_87?k2]+V8;#oOo,NZ/llTeZR8b_XJ-%A>I)X9-3+OP%Y$39M#!dZ]$-qJ!\A?n+U0?Zk$8UPEa]FD(-k]4UNM^ISd9`+_Aa\o@C-p^DHqY1<qb=S,Q`,[MLqPD.lX2*ff;h%+1gO2Es^P==+-C*<m3\f@^76@f.mN19F#:D]KKh?DeJ")c!,&erP(07#f[V13;'^+Y[i*j#bVci7l9/'3d5GjOHim@L^^l4LX=m\%+3:#e786i?#G1^!N[g];_V78EO"ct\>_^EnN;*;Xc'jM<Ylq+$e)2?P/e@p@+BB8uAXQ$:G+(F>prWUb[OM+-3T6NcW-D/qq9cEs%X@U\>+M\Se&5/%8#Q/&BlcB*]X>CE6K49pBeM:j#O\)UR"BJfnlHu9*bkAs@JkI_J;nY#`)(=XD7=7X5$i*[^D2-q7,qZ2B`ZmJ%%Ke#2p!f7USR\Cb'D:";=Fcul+KOn^Rk`,i2,aY%_$Fr!ml;IuUTd]Gn4k5V;?RSTo>)6me.."Vp>D\kXBV)*6^WuRe?(!cb,(Q2E%W.%\%@/QRUXeLOALnl;B=#WpMNptumT$?ggkgO[N`PQW3N\,k_nD#$aWG]p]iY/7_+mB!Q?;c]4b&GX*(JuWP!+DTK(eZLHASiF'%f<M)K<nULe]aY$5_8Q_)7hLcp;K&fa*SCi6Q\H[_F%M[V6d0"`U<F^DVrbOEJt7`A1PEK"pcjbNaT]\u)o=(tB?XYIf9_M,FT.FD%JA!e#a$p`'/ub?J;8\[/>.'mE>p+q$91-51(RL&S;%MUWi!k@G>QMGgnh""cF>_/5(X`+d<,GG2@=?r(WYTn$0(BYKfrdBdS36d-%Q5+C[7]oo?=Yna9W?''02?6Y/@$u[IW6#`t#_j+,![t\-Z2uq]K&&#iJ68hg1!5(kV,1)9T@:q:VMtHHT`N"r7a3X).PmMGNR*NA%%PsG81VR"e$7\R095@G>_F1qAM6=s"4,,7tCeb)Jgf,R,J?123mj8064X.Ppbcnf<4>c#<$.V@8s70bd!h'9)=-FQ^,<ut&^ZUk-%p6lmYjcreO9VmVFq0(YsO)Q=$Q"FG0Or#Qt5aXB>>&9Eg/Rmma!/YudGYIcB,U@=ei)I>L8/)>([hJCr9/Cd)R_]Z>A-r+tq$[%M%LuH<G.Uf3tZNjVi"K$L_;qH3mrUIn2jHh7BnQ>#Fc7j>UKdl'-+)_`]%T:c:]5+oPIsg]9)g''H0NLrtU(d%4d$^EI[:HG.Z%sA*%5K+XGL0RD"&)Sl5Z7MVA/8KQmnYJYj6Ro''Q@m4`AMLJWNNC4"+hq\7GBsc$O_Sbf'&k3d%u/ALi'TO!/Q[/j<q+0JSCg2k[cjZB%0TLGLkSLWUbg&0Q%KW"Vd:l:leNBft3b2qQ(Hr!7M.2%$F/gSCW#"14a417gU9Eh+s3%;a4Ph=+OP&G1r^f<,m;Ya1L!Q2DgF'T&%$P>Cj_I03+;oNrMjG$/2.*F<#e]pIP73b/[.umCNOjS)-q<WGbUqrqO;uS'pnCd$#QG#Bg*At8*;7IJKl&rAd4MLIj7Q)G,;iplu%T`&E'@5Wg"]t^LUGO-1?B:Y(J6<6.u1?ba5`s`]e+5$ik_/][e$SJXfS\`r)02"/ScnHtq)/Wl^O;m/7.3Nk][cjG%d/RKG#XeaD%%NQ69fgXtg7MR=(neA_<DNJm0$IIiTi!\b5Tl;rA*kun<;+c<7X1.9$5ES_APFrkdi[7n*''(d8f1OnP9$J!aGUTlV^)n*PoITbc%q!,-UG'loZ7_hS(PIkJf-pL>Fl.L=<:B0N\LSMb7ekJgaQ6n/@eBi.X"i+AI6WuUq=V64HR?fI_!,Gm[\6RRfhX5senApu0?XuCr%i0u)J(R%S_2:;8qX;8*jj=Qg9+b+2k.PG%WPc9]L0fn/de6UtC+/:sN-II;F$UF2oTS&ZO61=ui#Eug*E+,L#7Fq5`BDP'UPlgkc%2eNo/+dBO/'HC:MMsmm=k&1:A">OI4/hpY4-S;MIaBX+XLI<nc)m;];:J<N+J#=TOSq'HhG[NS`Z>$<O*g+&I0Z=-H1Nli2B[ETK%=7C>[itqA,1QuLalo.fWJ)2*p)N'$;BuEtIXIT=j#i_9Da%iNgInWJ,5mK.t5FEtum6fjeiHq:qWBVTsiH-7\HT1m>-PT/qqkJSh%KRInlJpe&Jr[R(YW%P#_:(kA?6JjWQAXn99F`Fju=@4e#g,(!.$6OgU0pP4>8.(9L!_*'_'rD#KYIhM3-XIIm.=4C7V/=159k>Z[%V$rbW$0s4L^LZkL?4&^niQD6A.CuVoZs7i]+d4U=0(m\fE&hAt6_^?M]._6:`)97`Eg$@%'-%H:!Z0%YGk(#hL;jop53*FNR0_9Q%5P)oK+.V)MTKG5]@-R]%4Qgib3f@aT8l=B%l;hHS(t:$K8!4*pn)@JJi@A.OHb;"`-^F)"1-"Lf4HkD?:/AS>eEYi%Z_0@$&IK:O%jLq')dAuM/E&"K?`Tp8RMssJ;i;mkSCLbZMjNcJ7G1KI1fIbEq=q*'3[@iRAf$gR(4mVA,Y34sr.L+Pk.8*FV=\]RW_i4%ZL1BM0%f)7Jg/[CJ#&O)Y#Z't61@Y*#)=ffH+le^>ZV,2Z[>o8KMN.h<3hX2+9.lFKPBV8s*T%;8_ap^P!O`n>=C/Mep=4QYH#%iq`<L))B%\gq9N83k)ENHZt[@,+gU?s=N`SF_iS<lmD'jJK]489=GQ#Kl'FN6mZXO_Nlhj^lka:"N!rLI*!>C-fU,/B)ue%=TtLhnF*S64T$h%'M#FQ=c2r)_AY18o[]<dF_Y%API3s2I#1=KZNBGt<IM7t?&Z?l:"%FT!b(Qp+ke@uELgC)3aT%RF*R(Xb38,3b<M4Kp8*<O`MO-B%Q1;ptS<^+027U1>V)iGFQ>;bV+;g$G!qWU`JX6@3%3t[pl23t4("u\fI9g"h?C"`M>M$9%j8Q:-Y83qndDER%rEcug;:#>K\@"0Q%)tT9S.<3UJh+%Dq/L4Z3/+FDH[;LI9*?Tsc*+T:@LnWorCe[3R%t<RMJmg:^qD"$$q*jm9i4s*k3'uf%Hq7?Kdj8nf<.Ue^_8@k3%o4=ho:1J@(^]bt?OK.N#jKJ]nQ6B"6/[;*o-rs)ANFU?^0KA12Dp,pfagZ*8bA:sFD1ZVBW6W:h@p5CT,^WhW(ef3\JE.u^=[^iA%><^Pf]0QotFk1s/a*'lrD$Z73DD'c6hnoYaOBdN4;.s>HU!rKF9QNhf;B8](ekK*pMP\TiLQon5#>LW;"G\aB7%m0jgN\#qX;'as%1["gaf_DC=LZ0%J7V9TN'Fq!KWeMl\H4:.APXH#ci=t86j#CN;MHMgR.e.-uHDDr:R5R=[7*3W_6*,GTMM?siguH6d^;qt]+p@K`%0=#aAGqsFaq2>q2;eNB^(juJCJ,Jk_r5kC)39]#kH.[4Cj?PuZKP3et&tHli8':u^.FYuaO_"TtkA&sl7pNj_=s4CurBdYJ.gkOQ%BrBW["Pf2WhE4Y9=)fc:j2PMQ1/m'EWY]4Tpm$SAlD]?J8OD/]hp,\s8)DnnSCj>$'=Yb#SmS^9?s`ENPhIn+A6R;>l$,*j![A/:%Cn*%257K*9;R9#^",WA8pk[\P1VX*A2>2PM%=:RWMg2%p:<:NiqeSK9',@4q%ZU6:j+,FXW-t293;]\6Gn7e_Y/"LW(aN?K._pF2%7D(G9$-k7`8d_fW<;";u\A3]XA+(%)#'XeVa_4aUQ/f!Z2ordKdLTS.c6DjhMRB.,Kab0GiK#D,fe>>pG>'Yn"u3*;i:abJjHeF6%U'3#OY[!L&$QAM&:DE]Rd?RMLK>J,9co6OSiDOHW5R8B@7]"\<C!(OVW'9Q*?8AVohgbHH[^tN82dE`85)P3'8reW[3rtnWKFef;%,k?-m!h7hY!t0>WkB>^i?46V(eQph1"M?"eYGSNB/:shKKSChe[QJ,IgRsTGc1e]O.aXefAU[*/Ae-D'mV!<!!j[e@(:[`1Y1:Ed%g^425d6M1Y;[))ZgB-F6b"_,l!*-6?![Ja)L-_#HC`njPGeVWnR.Iaa/pYV4I;?(aiX/?&p+2QCXr+!'hnH-%<gn8=g$>0@FF7Qn%BIuZ4LVO>k/EQV.oB+K2%LbMCr7Fd[,bA1=A\#$=Fg>mPd.2P2g9p-Mc6XcAG!jHb_Hi[e?"^BVd^"t"hrEp\>55$fAG3<h]X_6"%%IL0!9i0.aQ,f]2RWW-dV.'lfA=0bLOqf%sbB1.b\[Qp_?MUlOV(XFAF%![b49T/i/!)=Va"BR`YeVZ6asKBcjOqGW026Z%,ZubQ%/P?tjagP3F9+'YCr4V/^4aGUshhMKgr.hFfKYok?(9k1o(o5Jrs6SYAX+1!gs6AM@j_sqYqu?T??`O-qq^RXs-D:CLdGI;Yo9=>U%TipLXJjTsQfV^BY[EI4PcI\AJ]T;G'D2Z&d`s?QXaS;Q4$mLh)(2$Bn9Rq\%-k9A__W*YFo^%cKYB&+>pPTuPAKfjHG_GnF1WZts%/S@_F]"0K2oH&9+cu<d#o!;[bPiSh9D4Z:);b7BmO"ipt6.Fs7loFD(2jK8mk8)qq+J?rOjS'2'V851=kG)Ge!(M-]1Tn:SHpu9N%WHXX)an8g,-9pR%Bh<68YCl:aN9$/l;7297]tHUE/0<uLnh=@uriTM5=5I;D=;g`0Y"[GBG6?QrnQD9;Xn0+fCE,4XBB@R8!R/m4%AAY^gl4Ntl01G87S'q;3\D_8u-\\Fg0?SD,H9NKQ._#].-aeHpI+.QAcZVElj0R2K0bI,ldcce.:m`H=BaV4dcK#S%)3\J50j-O&%nWItY5/)d6.3tIV9U$a;;\HM4F026IdB9q-21Xqsb%<S"*+%;-V1b,ffC`d<bE:I,[G]ACSm1d=:jF<\_;5]:RZli*SFrs\!p?=h%h<_84'3h]Fk4+8<^O,BqkB_VhE0FBn@sELj@`"Smc4_!t(%#(b6P=gb,lBu1;Man?4Q=4UK?=8(.Zh$)/jpbP;<+%7HEgFp:u]R5%iqQ.Ve?i&Vb)Vh\0'TZ6?92VB3U[pm\qej\c-t!Wo\/WAY$1&f-;*\XEEdhjV'A4-!,*-F1^eAmD8MN*<NoBmq*p)Uf;C_lUunc9%9LB)\jO3%K2f*Y3=-ta1Pr2p-M;3eN&N=ra1K<[_8(5N0"/EE/-SQGji>GgHh/U!p>m`j\<*/!O,3kD8^#Suo0m!0$A'+R"p^NDq%ZVk8mMILhe2_9[Lm.".e0[fVq+\nFQR;(WV#dcATp@21pNo.Tdb,-[?eJU`hB^ueOk6ITIdE#ZPk>t'iWdgZ'r/./qF8e=k;IU>d%T_tNDmr1sif@ZUsdkba6*nZmIC%Lfnpg8KfbRa:L^`n:r.RJ4Oq,RpTB#Vek<0Ml_m,*KYoD;NOhYpT8$#XS#oj*OCs-nLofu6YA%2MD>iOsUCnOeEqk\aV"<NY+$%D$iq?0+Goi>QB%+6`WsBii@?gjWAtj>)hOn7uYVqZQHut^E2mf.k'lFhnOKr^OJTj1B7&Ts(T40%hu5u[m.BS";T1qEH32RLE$*So,*&7>OH@e`?5bI"]R\lrm]_&4<&s0ghjHqI^HQ+3hO=BCrr%;]Dm/[)IIM`LYPF7Ui-SkGQJU0_%2=s8B#Bhoqe<,`AE+uUtQ,nk^^u_)N]8q':O>Zk8QEsf6G`O?p3UUlDHA\(Sk:+0Ya+%lns3l>Hs%d_7FN5H?f'FRJ#J"A0lD<I_%lmqjBpH<\Dm!3PRB]R2KNZ@dQ)EgMo+eJ8ZHi1?"r'.l=rQ!0/k9H<:>,'VB(s9lI?,oC"BKb]'7Qd"-Sh7YtoWbMA76uBKjkiQ5%^fM</>hn8X)d@Df,.R.fehq!]XoL&tC!/`tQn//@/V\4%=93S#WoF<S.K'SA_/-V7DmkS**g9Onaeu@iEU2t328O3q8#XJ%H-(@]%"6#JTo6@4:K"o)U^C30B@<jg)%:eb76crWo].pL:2aG`!iTC9Cq=Y<es$3>rWaq;.@Z=YIQ)\#B6QudpGDLVWjP;Kf\Z+;=-Ld5-%L1c?5Di@V<+m-u'[pTa9kY@e\c4;to5XKM_'7E]da?Ca#bAK#!(rQdf[.;CEljm?cWJ)5s\sl?6&rIAF[t;?CO8ClcI"&g;9]]n?%),J-aq>]VA0jXgTH"cdhocZ>so<45F]u>Kr8'Q6g<=)HmB]D=<-3a=rV%L(SF1qN^k*Mr`+#8ne9(IiT/iB^BrsdZUG^nHd^h6X'%ok7H2c"lU7/26/)o^i^*3V([L2/$e$"D7[!<dG>Iq=k=/B%)Z$Or[P.:2TSM/S2<Y^%hc%W8IlPMH,sTZ1mHQBo;]DO]a";71k-P%S/fr.MZ4]b&Zte7^'5(,RZ\Rpch+"B9miY0d2,ud"l0'k84RuUTqt-EeO"danV':n?RRbo$QT[ZE-P**&]@5M1R'-UVT]P)/`O$T%!R9tmq>0Qp]K?R(Z8*<COPQA]+d[p(;R1$oj)s=b=QAZWGV%d5fF:ME(B(N"h&fk-qr?+D`8[4s&'*\VaVh=-Lfrlr@][5_/&W]_%Q,bE3U?Mn&YE0iOSiC+N-FDMFY>E_3=s9<9!qig$>Kn4j:h4"oE4B6QXJPm:*j4D8"G^dCCLU@H_)TmMqU'[19kG]ua8(i3T>+Wb%*fJA_"mih+2'9;>iE\Y8?W$FjbB7dkk`#,_`JC\[$+;1PHN,CbqYO:,>^8R,^<XImV=@Jk^[b<Q^Q(4L5J<%GE4)8D>k<$[:$Hl>%J8nl]?c+b6(>n"=<mIrb+%O^YSGN%>WfYXq1Rb&T]aJCs+A.S4B?NNr`_oQNBP)9&K<Hsbg"j.8rjF]S(_bFnq`-mujs)G7G`S[H%Xo4\3WuKpQ6=JHjc`I21#BI4!!7/SU!>jO-7`i%8j)#uD+cZhC(2Aa8_*l)n).LbrH+q%I`m=."'Rn,W%/tL(l.'d'M2=:]lU-?<%^VbB9@MkQ!(nla\?J,Y8q_P=jClmJGIJ\FoU?):ZTnk'u9b-Rh&QTVjUD4/-P33d;(n\Tao4n%<$=obRcZ_"<d4e,=q$A,2+-^-m%aRhopn^o0]a3/)#8?tPX3PNcB](#ln'/40"fk#j"S3fuOI*o&_)RJFP7qEh'7(BT[P7iC,YfcAER"1"9jQYmDUY-_$Qf0M_PnFDF%f)A>L0R54:g)i'^K(,4L#p_1+SVs_<5Mn9^W:n\Ne+rA!M9D-pY'7aCrpVk`V;$mGTn/Q;`Xk>+QNgFnbs,A=FUDe15<C%E5V>VZ%[V;cRilW_Q8(r>b?W;0J(A%,qFX*tM73'IkP9sVce!*!1$A?k2ZP8jhUT$<$iPNYldSj(u$Q!;bAg3F&M;p'rKF/e1]hki-)oOVb%d+a9PRM;IKO0T/q)4F?-Q:)\TPoc\'GGW\/Kb97"hmNlkpIHh2]Mqmp?icY"liF>f;JGk2Ne]\H5Uao%1kk5$8)Am`lZ,HFH:cWt%BD=Yn-iDGj\41FE`Gf&5q#*Bt3Lr_P\k^SaVDFri:]Adl3',Q:ocMVF!+?ITq,)6FP%).-eVipN5;-#XJR2S@k"FM,X9%jAf;oA)%=Tb&'<3Ot:B_\.O]p--XFWh3FG',U"7o[FpMpNVh0BZQG*sIe9I]!#.8RQ&""[0\OOgX37Kt"piJu`&i?2&WDU3h=Ah>_KTCJ+H^%Xsk6W1F6`HT1Oo85el[m8_:eF#q;a,Ho5X.'4#&XTKONL),hMg9Stf.i?pK6Ma!\5br63I8!$,4YA2k/9>MOFf)o>/6L5t0;8Q@#%'YEW[WeN)4bJ'R0R&qi#-Jo4G-=[Jo-qgUU@(8jX;FQ$KHokc!Rj"e5SI]U,(6RcW2,`*Tm,$&C9+lLfmf<r.`c[$_a/(cu*o,gl%S`u-gOIThlB/3PS013H23?1g6T[&O4m:ep*VUq3mWq/3MWBQrVF_)-N=6cf-kfn7_Xgr>LC6d5R0NR%gG[M-aCS/0)97.<d_fY^p%IdeT4ZHfla_m,SZ#IJ#<E%G8K@R);JgEPE\hps)5gStJ*_T.Dj)=r6PdYPnh^(Q%9rAO8.k'X#R"_r7IPc;IsrW3KgQ$e'-!ihQu%N?-FD.XNY9YOl[TEQ5DsOX4LO8'+UGpWAL?+On*nPm)kV@pU\_<h,F<<*'TJ<@i63iB8T2lYE$fnZIEXRaZoFa0km6Z1ID?l!:-W%VZZfoK'7)-^9?muMX;r/Y9-&alm=8@"PJD/j?KSo6TN8%9'tuJ_0G-]R'DHf5U+IK;$>M$Ma/th+EAe]>BuW,PiAB%D`6@W<dbrf%lS=5ZoN#?S$5Mu@/tGg)_&WI+$mkQ[hYc>nQ7T4`4sG8=6\Xi:@I0]'m3-dF(3W2(WoTJ.`k'Z,TrS$lk8HdbZ0+;':OR^S:Le`N%YFm6QW;2QTFO4JDG!p20;J=&"@A17n$o!btZ9s>9-/ts6!pgtR)?&0E+7,LYB/sfu,@U\>S41)GDBSJG%1$l0=T:lNl_<jr=e/!?%8KjP<o6QKp?Pa/@5Aln#1$_'t[Q:#)c`2E&%m^;&HZQC*)fje0*n?nOMsM2:m*4E("frF<ir=C!^]!K-1n3@9q<_Ms`Z,oiTmFE.%H;*fLIIoQYF6^D-Mh#G,_#etdgfm^9,ecP.Jmr]RHalr((6VWqP,<eW:6Xh^L&=\D*VapW)&hC>5tOCf2kZ1R(;W`f>IQ)jWTaQF%=L,pZMXaiU`\\mY?F.*&XBBM$gnm#J`59$t+O)*<okVslK4@TF2Vm]F^<3oHTj+k]"a?Hd"g]2g`g.\iPi+K$2)q!p<)?TThGdgA%DoE'8G"g(:1^f[tM*m<>JEc!CU(\oP0h3f["u\QOktrI"F:ke;)Y#eq%Iq/I39./lDnAJd4T&oGm7%g?^.O[VpR5<2+_FpgiUEbU%"HNePHf:2!BA_9'X7nlblJnhC=4bbkeP(KL44teNDE90(3%d!-T96<rm.@D@]e^6>T%A>*QP91c@eD.aIpELqJ=5jASu?9rRChB)%Q@l;#:D9N&1(kq^i`!Bob>Y<b6T>EWC[]$`3;?ST`W,RrJSKiVTPcF3c^2e'qd*N0K$m/^m_6]G0M.nu\p>lU]Z-0:Khe*A//<')%oNrS,&qLL@A6%r;ojto^'=*,c0)jmmNGeFc8Z8Y)D")CsX:LLM5Jp=mgWtWO[!FY[6"8(07=Ir1(HmYJ#W\NE^.>hgEs+l2jHDju%lq*qL!]3dF]JADEHfA8g:'0c#J^4RWkbj6XEp@WN`>/g9Rt7G[g(6[/#f9!UgkrZ"0iZC"0&E74Potj@3d+QZDFN&p4\ZO0DT#X>%#Ee19J\+$rhq`,LZ@rXtQU6ppJOY)(`hTQ:L&uHUU.j3iKGS=;EnILN1%/HR-A*tfLiJAeW9TIA&=oBqB!PDSplE?c[M=3)gPXjf%@mqK)Xlt1AD`IXNHV<''\@89/fiq>aU6&45/-<$-D)0e/a*h.8JQI*MFJ%1Z78R!.3DK$=U"W:pCmS>.;go2^^3HPlL6);]>HrT%%>BP<=8%#t]f0(4l\%XbpGeUN@*S"JEGpRI1RZ\Vd0j9Podc'uoDnQ#1J-atJU<iR6p/'Jdmk:Go6Ols^R*"0%Ph2!aap5AZ:dH8[%OBCi>dN0%a0YH^NQn_R4<9^>)Y),i`d`J'r?ta/32#Sq13<7-&i?AYC2G0aoCCGm5aPH<4=Rn5%l;Q"n2:9B,R>=@U/lRqu5H^]5%FUoIef._r=c.NXm,8#r'/un:`K]Bk]RJ)=CJ4D#8I410BP:D0on*;*:iFta4BVphikI-p1p^$l3a-s^W=dIQ7J9"tE!JaS)WKI(Z%?@q[g5$7BP:c#Ys/Wo!^fa:t2WK&i8+%K<O/H!.[nJ3Z.ChMYN.(8F&p>fj=q5rL0@]Re5?lA3?3b6++p>Zt5`Ll.Y'#;J8`\f&7%qr3(K8AT).Q%QmdWq/1R`pAoXobNRQkH[r?o>@r5Bee7tTup;=g8_1e^J?`459Au"#"*#4k(ga?7V&MC@RQ.uG[U-2.T#4*C_'$j%@uiEU0@^LOL>uGV6ZGS?.mh>3"1)`hg5Bq9?dB#qQm`28j_?#^OE2.g,$jAbpU?pO%tc[T\q=.RokZ#6"dt[+Dhc3d$6;Na]\OL;%BenL.R+V,P6IAXeN$TkAPLGrsqO#O9,G&Hr;=HPPTctq.G]@ecGm'`Ih_GmYc>Jo.Gcq9R1Ep/)%q]dNDq)B8U=1doldDSAiEC^l%(skJFq!@POf$=5V7T,6BBp$BEYcfcdk]2*IXkKCX+>IDt5rJl>'sA$KIS3/1e\+Z^/KBV2ZULsI"1@F2>87eW%pGS]&^aSlkSMk)%d=\Uk9\-=,CIdi*O,7SsfiHEJ/pC*^C[Joh#sRP.L=MX:[<U&/0DB2CW6Y"=C@mG-1DAC(=kB.>rMlkVgBrNmba:'XU2]p&14jg!%m\BIQoBg+-D\<DWb#8J2e`7B(nid$nePa*7bO5@8#^WAQ`JmtV(()=;)30-SR4)i!?0G#];RB1P-.5(HUM"i],bm2Lp&FuEhX*bj%"/'g$N,cPq!hX/)$BAjX[=&J9MUhhMENABc,(N`BC=>@"]l#*_]lTuQ5Q_JH.e95kZVXB,*4MZM+E$&9fRIlUdVJ71`:m>Zf.j[p%0si"b.[&esr<D![>6lQPqc6#!g?:Hmp04d(b9^766M3nbZ+1dP-@US@p(_p^O6fi,+)aXq%kKAbOcD#H.F.fKabA.*=cu\mNWp5f%NDD(nOBlTiW9Legp%6IO^M_RVc]>(4"g*lqkDBV49q]!4'WA`+7uh=;-j;m1rE'N='bOGTXXL/uoo53S%B<\cr$frLP"q3R2*%].%0Zi29Z^TfEX'O9_mZm\[>Y0uc+8rY5*;to?VkAHH0D55!H`u-6\G*"ufm?^jG.E>7SJ0QTG9VF%Y80RKp<)hNfgO?e,(sZ5G6F`R%hlNFU$JSt+Yb;Gm"lq%_;Fgq#JB=gE^FlYnD"Dpd-BJEoU*Bik*k1,IOXGbObOd+-mhC^(kX6?3]@Zi62$(AA;RS@G/RETK'?Ukb%$i($Jkk&W@$kQGr=(@RKK%5&XZXdk0AO'-u()dR=<&t]FLlE>D%qL>BX"IQa+ajI$$sAGqQ-'0Xl@f5mCDi9sagLdJ:!0R90:ZFn%WBp%5U=(+n>?'h(V3m'"\_msED=-mKXs3Sl_X_&WKZZ8*s$6,t#o#bu1/sW@N6E5Q%pD_]9SDj^1]^Q6Ki;77#CGk'EsZ>+AEMSt%V:\\NN0o6V"es%Pd.1Sd3f54iqs5":Lkn>A>ljk"aODBF7+&R,rVL9<"!R.LNG5mM`^*L"I>Bc%6t95Ipc=U$VaM1oo8Do"Q$,.H%R7cC@*(Z>3D*tZc'8mgGXG;$bL7rk$U8,:H.::5t`X3bpIed3g\&EDtYmgH!:X1LUCHf02`T=;^b!`/hi[5T!Xmt7i^ktRa0I_s+%!MT;)KJ2m7T/K4Ia*cQA!DI<9qbG5<ZKcb+a5!>]_XeIq_tIk/!LNo[7XTsBo8nG%!C12\j$cZrdU^-<ZS$=K@3m+I/f`2fgL+VV%q"Fd)YG)s_i;[3)+joOI&u0^2f53(N_WHjU_p1$V/Bd#X;\Btb7ijH5BhA_1QRnmiOj1T#Xn]`KP5m=eg'hP@g^6)&E22P7%3:0W%916o`!!C&jBn`gCB<U\=S4(Wd3MZi`Cu[=A5(tG9.3hI,7VG1$RQ'dSF>5ZR]k\AE"a/AO?s5=T1HXoCIj)CdY"sd6)ZfX.etK[p%?3"X+;1gHnE;f=:!i6T(p<VAYr[-'!FrMc*cKcrOTVC&bZf[hbaAMmknA&Ekn$dUr$.FJN_K%ThTQ3]-lLT/NA/bTL,*f2(fn^KV%QoWumSB''FA:TdQc9Y=K?E.qeL1;](T$a_1"T/f$/OV4Tp1MAt44i%/GQC)WQc/EMGV]3S+obpYSb5+C$$doaFU^_dg:8WKo:^J@%THZK_7-tO84A7\TR8paYF5!<Qgk2RIjP;$C7!$:N.$-fn/Upa+)<7*u;@bQX+i+UoK)@q("qUG2C-!0^^eARs7->]>W/,J^R2eJh%b%pX(l5HZn.DT<b+R;b#W-]@:^T")WW$8rPmq!-2(uUF3M_mCga-WJ<WbZ,HhPbD1V=K-c)AtK&E8M@#cQZK8ec8TdOJ-tN4Oq&h%Wj%JUg@X2m6UbO/if8pE^,4@c<FHIfViF#_QO8*k9e\]*[[2jWhR@5Ja^TeL]QGT8$(7;$k*ZNZ/AhHM*'AIBOQ-C8frL$uip")B%O%SE.`;/4c`eX1:<^C"u)>-QTafe\f<7cmY%$FpY>9V89q50u;_>O/t76o7uM.rj52'*K'>i.\Df@.BE>%Pk#)%(>OG-7nFnteAP%nhmn,l%d;f*XCKJ,qJ?s9M:==^?0ZDc<"cj5(fSk,8<0b,O#kD:g3r%SYarl-Y^rgl/lcPl&T(LL1*F=mO[%SmNl>Cc?`KjkWJQJ%;\4O$B/N$#//e9/MM7L3SsH+m&sW@/#2"@d\C[eMMs$FkR)]TZMUK!kmC3OhdK#Sh>,aeQ^B/$ab[o_V3/SVj[R[_.8;W8oN5,L&%OL34U*4&JST>q8ga0/:[eA"ghjb18;k>=*g#qLb6PC9N`Z\k_0'L.ua_p"D%#'i9`,O%.3p0iSi"XE^r9"(b!dLTD&0-\^+#]/GD%Ld3&>lchchn`riH5jMc-Bab9^0`uk[[>aoFf;'6P[(1PL*eGTmVR#;L&o`#t25l;^#dbdN)>fkLCr^t-YoQVaNU<i/@s\o@l0`PJ%Up-Q`IZ<,;"dOHEmeLPIm5D/Q2unfDY;30BPXD/:Qe0XMW"Q+tj=1lDdS[B2n?u=g&;g1\$o42W)$qd':.eFpp%Pq"7:HVcMNK&$%XX<3>$js:4Zdcpf:WKsu'nZbtKt0_lL"ERRiZ<4/K`[fC`Pf9U,V_:IF`o_kE@o/NcpQ+"BiB-7fN6aum&\1`LRjF.n,hVu<],IB%@`(Eu<foYi(TL7X)*Fs\Xa5Cbm<]t=Adrf0LptF3M6/LQ3)UkU<kJk!7]\EU"`c2F.ae.D#(QbkOoThCO,I]=X@su:p&]597G<Jm%9o&#GINB5scMG^d6\\[Eq3i0`O4SL"N&?=5IEd_Q3\t7XcJXXqk/rp67QiM16uonP#+hBAgS`<o3or+WYJ/5>S9h[lh'P39N42-j%n5c'%ql#YX>;JE:F,tWp/M]oWjH[j6J_U7R(<<pS,X-:5`6%-BgLiDiG-&'=R,6G?$CA$_fHHZM3:0D$bTaH?7Q0^p)14pRH-L#d%bcJCZP3bUtdu:I6-S$<'g>Ee^p0uS^0a:d/Lr1kPjj&C>k2U.%AW>',>8=RS^76T7r8O-crom'OUkm%WWOPr0kJ.n^n(2lumd(a>%Wk=<mk9/u?(%/GS`2UG:L-9.pdL`G%9T/FjFsL=Lj(uJ5bTc$t+=J(anC5/O3r'tZ/j-@N'?l,K?hY]eZgar$[tI$RjPe_p\)M4V%>IF4AXbi$V?T4kQ^A"&`q[(Sj5H6m&R=[aZP*goAZon.dGo?=N*9hg]"4`1R:V.(+BBblQ@$BY(YjK)u3mRm\?;droF"+7;^@QS*%i;\o<3o3"6m[j0^Xbf7>4K?lV^@(e0^@sLdisDnt]c[(ZCV21aX$*Q3)anS&+c@D:.=$Y*0nI]PHX2GVh^_3ERm!j&).Rm;ZR*to%OQ5^?H-95G0RY+V&lhPC_X9i%dE_a1`'e!u1$IGJ4pOqQ/<M63@Kb#o<eVUq1#5otPdB,L<ibq@7qC`3]d"^0#*R-]''&em-!$^N%I"0>Q-NXWq?5)YfS$HnF*6aL_;aA%&5C,35_]BSe\>EW3cL_Lh*eJCf4\4VifCXtK]S?;aS`pCWdFlgXW<f&sC\E><F0s[PKMIZU%0%r.8Z20l)ps(uo>am=.7WQ1S-rLdfQ6Fq!&9$G5\E,K(kI,-Il(@5.W>NU.!u'oQ6;'?Y(#kpNCV#PVGh`cE_EINuY=':nCO4pH%gGNIr)'\?+o:N`Ye)U<BLntt)bi$nM-:M*i#hobR0+lJn,B8-<_'TA`4np"6b-,;QnZ&WJ"*i3hhnG8U8DZ/MAYD^A3QsTSU3PDn%V%ZAV0de:J+O<Fub]oLIK%`@8JTLl?YV9,Y?=R!@FnU*[&G,sa=V1g^nh,jt4Kf"DMKe/8^]P7MO%Y13mDMl5Y=&Aac3FD^2WTN'%a=u:,MBDa'K\?d`CW*g"h%rA+"\IG.7dk7c[3(0,(j*Z!p%_KKW^I..'_Hjj<Eg<+$AEiirGAUP;iFAIE05?V.9rnJ'VA(1!0\VH%VC2lhrNpE'esOfM8@KV4bD<>NJE&P_.`[:&a@nk),0YIo*NR'.aAYLH&VS'Sai"tL@6/d7U8FP@p:qlKPO%u/>HR_.*J4'+]i*9>%Jb_T=H%bq=>BKL'+bHAhb$hDi7;(Qc5Ki!IYO]F%?`,+,Nf[pQY/gaO=>2(&^"2WBFJVffl=HLf33V_WHRmCq]iBFHhO7QYpN9tO%hY03LpO9ucFs#7@]3ccor"E^7/^2<)a&56%_'!.X?G$jeBC=JkP;=<\>Qkt3cb4KH.tfoHYF]*lENL_QPDGb#2b"Z,oXZ8@c^Kkr%X$3NJ;j:K"e.2uLPDNnNaqL`[N'N0XSbWZcCPD'6W/f&ZiVmquPU5lU6]PXb=Ubdt,KW+_A)#ZL3/\sWpRN`s%1L^ZqP9"<>>Bnu%KE?KP,>>=%[UL`@nAj9\Fb0SZX5GNnZFZTN6=a4%h"u@0;Bq_BiFe141)-81i0pP)MDoJ5`hqb\Z;=h4(;]+YUV\CBT*Z+c<A)7$%<^=_jp]XgZ&M<KlOoEa!/<@8,]uXqXjQBXjk1F8g3\/s!aGVh`[MmA/&^2h(C2gV(%\?jaH-3D?/rLLk?gg^[))H]2ZS3^7o>gS_%p8$E3qCda/<fI(KD>j1SrqUL4q*2Q@r-*(/nZVqIp:pOe?iQIR5Q!`qr:@]$QZ%BD(]Wn6J,82Tr:;$0pWl)'q<^t-qhP4;O2(YP%YQ+H;rpC;HpW*<oop=S8o]JI<mGIleTE"]@hu7PDo3\2:r?Rj3`F&Q)?i?J'rtgZ4Thk~>%AI9_PrivateDataEnd